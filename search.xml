<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C++|友元与运算符重载</title>
      <link href="/2023/11/25/c-zhi-shi/you-yuan-yu-yun-suan-fu-chong-zai/"/>
      <url>/2023/11/25/c-zhi-shi/you-yuan-yu-yun-suan-fu-chong-zai/</url>
      
        <content type="html"><![CDATA[<h1 id="友元与运算符重载"><a class="markdownIt-Anchor" href="#友元与运算符重载"></a> 友元与运算符重载</h1><h2 id="友元"><a class="markdownIt-Anchor" href="#友元"></a> 友元</h2><p>在类的设计过程中，通过把属性和方法放在不同的访问权限下，来控制这些属性和方法的访问范围。C++中的访问权限有三种：</p><ol><li><code>public</code>公共权限，类内可以访问  类外可以访问</li><li><code>protected</code>保护权限，类内可以访问  类外不可以访问</li><li><code>private</code>私有权限，类内可以访问  类外不可以访问</li></ol><p>如下是一个访问权限的例子：</p><pre class="highlight"><code class="cpp"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Person</span>{<span class="hljs-keyword">public</span>:string m_Name;<span class="hljs-keyword">protected</span>:string m_Car;<span class="hljs-keyword">private</span>:<span class="hljs-type">int</span> m_Password;<span class="hljs-keyword">public</span>:<span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">func</span><span class="hljs-params">()</span></span>{m_Name = <span class="hljs-string">&quot;张三&quot;</span>;m_Car = <span class="hljs-string">&quot;拖拉机&quot;</span>;m_Password = <span class="hljs-number">123456</span>;}};<span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{Person p;p.m_Name = <span class="hljs-string">&quot;李四&quot;</span>;<span class="hljs-comment">//p.m_Car = &quot;奔驰&quot;;  //保护权限类外访问不到</span><span class="hljs-comment">//p.m_Password = 123; //私有权限类外访问不到</span><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;}</code></pre><p>在C++中<code>struct</code>和<code>class</code>唯一的区别在于 <strong>默认的访问权限不同</strong>：<code>struct</code>默认权限为公共权限，<code>class</code>默认权限为私有权限。</p><p>C++中友元的目的就是让一个函数或者类访问<strong>另一个类中非公有成员</strong>，即可以访问<code>protected</code>和<code>private</code>修饰的成员，该成员既可以是属性也可以是方法。友元的关键字为<code>friend</code>，友元的三种实现：</p><ul><li>全局函数做友元</li><li>成员函数做友元</li><li>类做友元</li></ul><h3 id="全局函数做友元"><a class="markdownIt-Anchor" href="#全局函数做友元"></a> 全局函数做友元</h3><p>全局函数内可以访问类中私有成员。</p><pre class="highlight"><code class="cpp"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Building</span>{<span class="hljs-comment">//告诉编译器goodGay全局函数 是Building类的好朋友，可以访问类中的私有内容</span><span class="hljs-function"><span class="hljs-keyword">friend</span> <span class="hljs-type">void</span> <span class="hljs-title">goodGay</span><span class="hljs-params">(Building * building)</span></span>;<span class="hljs-keyword">public</span>:<span class="hljs-built_in">Building</span>(){        cout &lt;&lt; <span class="hljs-string">&quot;初始化&quot;</span> &lt;&lt; endl;<span class="hljs-keyword">this</span>-&gt;m_SittingRoom = <span class="hljs-string">&quot;客厅&quot;</span>;<span class="hljs-keyword">this</span>-&gt;m_BedRoom = <span class="hljs-string">&quot;卧室&quot;</span>;}<span class="hljs-keyword">public</span>:string m_SittingRoom; <span class="hljs-comment">//客厅</span><span class="hljs-keyword">private</span>:string m_BedRoom; <span class="hljs-comment">//卧室</span>    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">private_method</span><span class="hljs-params">()</span></span>{        cout &lt;&lt; <span class="hljs-string">&quot;调用私有方法&quot;</span> &lt;&lt; endl;    }};<span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">goodGay</span><span class="hljs-params">(Building* building)</span></span>{cout &lt;&lt; <span class="hljs-string">&quot;好基友正在访问： &quot;</span> &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; endl;cout &lt;&lt; <span class="hljs-string">&quot;好基友正在访问： &quot;</span> &lt;&lt; building-&gt;m_BedRoom &lt;&lt; endl;    building-&gt;<span class="hljs-built_in">private_method</span>();}<span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>{Building b;    <span class="hljs-built_in">goodGay</span>(&amp;b);<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;}</code></pre><h3 id="成员函数做友元"><a class="markdownIt-Anchor" href="#成员函数做友元"></a> 成员函数做友元</h3><p>不能把其他类的私有成员函数声明为友元。</p><pre class="highlight"><code class="cpp"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Building</span>; <span class="hljs-comment">// 提前声明Building类</span><span class="hljs-keyword">class</span> <span class="hljs-title class_">goodGay</span>{<span class="hljs-keyword">public</span>:<span class="hljs-built_in">goodGay</span>();<span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">visit</span><span class="hljs-params">()</span></span>; <span class="hljs-comment">//只让visit函数作为Building的好朋友，可以发访问Building中私有内容</span><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">visit2</span><span class="hljs-params">()</span></span>; <span class="hljs-keyword">private</span>:Building* building;};<span class="hljs-keyword">class</span> <span class="hljs-title class_">Building</span>{<span class="hljs-comment">//告诉编译器  goodGay类中的visit成员函数 是Building好朋友，可以访问私有内容</span><span class="hljs-function"><span class="hljs-keyword">friend</span> <span class="hljs-type">void</span> <span class="hljs-title">goodGay::visit</span><span class="hljs-params">()</span></span>;<span class="hljs-keyword">public</span>:<span class="hljs-built_in">Building</span>(){        <span class="hljs-keyword">this</span>-&gt;m_SittingRoom = <span class="hljs-string">&quot;客厅&quot;</span>;        <span class="hljs-keyword">this</span>-&gt;m_BedRoom = <span class="hljs-string">&quot;卧室&quot;</span>;    }<span class="hljs-keyword">public</span>:string m_SittingRoom; <span class="hljs-comment">//客厅</span><span class="hljs-keyword">private</span>:string m_BedRoom;<span class="hljs-comment">//卧室</span>};goodGay::<span class="hljs-built_in">goodGay</span>(){building = <span class="hljs-keyword">new</span> Building;}<span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">goodGay::visit</span><span class="hljs-params">()</span></span>{cout &lt;&lt; <span class="hljs-string">&quot;好基友正在访问&quot;</span> &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; endl;cout &lt;&lt; <span class="hljs-string">&quot;好基友正在访问&quot;</span> &lt;&lt; building-&gt;m_BedRoom &lt;&lt; endl;}<span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">goodGay::visit2</span><span class="hljs-params">()</span></span>{cout &lt;&lt; <span class="hljs-string">&quot;好基友正在访问&quot;</span> &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; endl;<span class="hljs-comment">//cout &lt;&lt; &quot;好基友正在访问&quot; &lt;&lt; building-&gt;m_BedRoom &lt;&lt; endl;</span>}<span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>{goodGay  gg;gg.<span class="hljs-built_in">visit</span>();<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;}</code></pre><p>C++中如果类中定义另一个类（包括引用和指针，比如<code>Person</code>, <code>Person &amp;</code>, <code>Person *</code>）作为成员变量，那么一定要<strong>保证另一个类在本类之前已定义</strong>。如果另一个类没定义，而是采用的先写一句声明语句的方式（即前向声明），则在本类成员函数中访问另一个类的成员会报错。为了解决上述问题，实际上有两种策略：</p><ul><li>可以让另一个类提前定义好，这是最简单和直接的方法，就是将另一个类的定义放在本类之前，这样编译器就可以知道另一个类的大小和结构。</li><li>可以在本类中只声明成员函数，不定义成员函数的函数体。而在类外部，当另一个类已定义完毕后，再去写成员函数的函数体。</li></ul><p>如上面的例子，要把<code>goodGay()</code>、<code>visit()</code>和<code>visit2()</code>的定义写在Building类定义之后，访问Building类的成员才不会报错。</p><h3 id="类做友元"><a class="markdownIt-Anchor" href="#类做友元"></a> 类做友元</h3><p>如果把A类作为B类的友元类，那么A类的所有成员函数（在A类的成员函数内部），就可以直接访问B类的非公有成员。即，友元类可以直接访问对应类的所有成员。</p><pre class="highlight"><code class="cpp"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Building</span>;<span class="hljs-keyword">class</span> <span class="hljs-title class_">goodGay</span>{<span class="hljs-keyword">public</span>:<span class="hljs-built_in">goodGay</span>();<span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">visit</span><span class="hljs-params">()</span></span>;<span class="hljs-keyword">private</span>:Building* building;};<span class="hljs-keyword">class</span> <span class="hljs-title class_">Building</span>{<span class="hljs-comment">//告诉编译器 goodGay类是Building类的好朋友，可以访问到Building类中私有内容</span><span class="hljs-keyword">friend</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">goodGay</span>;<span class="hljs-keyword">public</span>:<span class="hljs-built_in">Building</span>(){        <span class="hljs-keyword">this</span>-&gt;m_SittingRoom = <span class="hljs-string">&quot;客厅&quot;</span>;        <span class="hljs-keyword">this</span>-&gt;m_BedRoom = <span class="hljs-string">&quot;卧室&quot;</span>;    }<span class="hljs-keyword">public</span>:string m_SittingRoom; <span class="hljs-comment">//客厅</span><span class="hljs-keyword">private</span>:string m_BedRoom;<span class="hljs-comment">//卧室</span>};goodGay::<span class="hljs-built_in">goodGay</span>(){building = <span class="hljs-keyword">new</span> Building;}<span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">goodGay::visit</span><span class="hljs-params">()</span></span>{cout &lt;&lt; <span class="hljs-string">&quot;好基友正在访问&quot;</span> &lt;&lt; building-&gt;m_SittingRoom &lt;&lt; endl;cout &lt;&lt; <span class="hljs-string">&quot;好基友正在访问&quot;</span> &lt;&lt; building-&gt;m_BedRoom &lt;&lt; endl;}<span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>{goodGay gg;gg.<span class="hljs-built_in">visit</span>();<span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;}</code></pre><h3 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h3><p>友元类和友元函数，使用<code>friend</code>关键字进行声明即可，与访问权限无关。所以，可以放在private/pulic/protected任意区域内。</p><p>友元类的访问权限不会被继承。即使子类继承了父类的友元类关系，子类的友元类仍然不能访问父类的私有成员。例如：</p><blockquote><p>假设有一个基类Base和一个派生类Derived，并且Base类中有一个友元类FriendClass，可以看到友元关系不会传递给Derived类。</p></blockquote><pre class="highlight"><code class="cpp"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Base</span> {<span class="hljs-keyword">private</span>:    <span class="hljs-type">int</span> privateData;    <span class="hljs-keyword">friend</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">FriendClass</span>;<span class="hljs-keyword">public</span>:    <span class="hljs-built_in">Base</span>(<span class="hljs-type">int</span> data) : <span class="hljs-built_in">privateData</span>(data) {}};<span class="hljs-keyword">class</span> <span class="hljs-title class_">FriendClass</span> {<span class="hljs-keyword">public</span>:    <span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">modifyPrivateData</span><span class="hljs-params">(Base&amp; obj, <span class="hljs-type">int</span> newData)</span> </span>{        obj.privateData = newData; <span class="hljs-comment">// 可以访问私有成员</span>    }};<span class="hljs-keyword">class</span> <span class="hljs-title class_">Derived</span> : <span class="hljs-keyword">public</span> Base {<span class="hljs-keyword">public</span>:    <span class="hljs-built_in">Derived</span>(<span class="hljs-type">int</span> data) : <span class="hljs-built_in">Base</span>(data) {}};<span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span> </span>{    FriendClass friendObj;    <span class="hljs-function">Base <span class="hljs-title">baseObj</span><span class="hljs-params">(<span class="hljs-number">42</span>)</span></span>;    <span class="hljs-function">Derived <span class="hljs-title">derivedObj</span><span class="hljs-params">(<span class="hljs-number">23</span>)</span></span>;    friendObj.<span class="hljs-built_in">modifyPrivateData</span>(baseObj, <span class="hljs-number">99</span>);    <span class="hljs-comment">// 正确，Base类的友元类可以访问私有成员</span>    friendObj.<span class="hljs-built_in">modifyPrivateData</span>(derivedObj, <span class="hljs-number">88</span>); <span class="hljs-comment">// 错误，Derived类的友元类不能访问私有成员</span>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;}</code></pre><h2 id="运算符重载"><a class="markdownIt-Anchor" href="#运算符重载"></a> 运算符重载</h2><p>运算符重载（Operator overload）是对已有的运算符赋予多重含义，使同一个运算符作用于不同类型的数据时表现出不同的行为。C<ins>预定义的运算符，只能用于基本数据类型的运算，这些运算符有：<code>+、-、*、/、%、&amp;、~、！、|、=、&lt;&lt;、&gt;&gt;、！=</code>等。为了实现自定义数据类型的运算，需要对这些运算符进行重新定义，扩展C</ins>中提供的运算符的适用范围，以适应自定义的数据类型。</p><p><strong>运算符重载的本质是函数重载</strong>。</p><h3 id="运算符重载的语法格式"><a class="markdownIt-Anchor" href="#运算符重载的语法格式"></a> 运算符重载的语法格式</h3><p>重载的运算符是具有特殊名字的函数：它们的函数名由关键字<code>operator</code>开始，后跟要重载的运算符。</p><pre class="highlight"><code class="cpp">返回类型 <span class="hljs-keyword">operator</span> 运算符（参数列表）{    函数体;}</code></pre><p>运算符重载可以重载为普通函数，也可以重载为类的成员函数；使用时把含运算符重载的表达式转换成为对运算符函数的调用，把运算符的操作数转换成运算符函数的参数；当运算符被多次重载时，根据实参的类型决定调用哪个运算符函数。</p><h3 id="运算符重载的两种方式"><a class="markdownIt-Anchor" href="#运算符重载的两种方式"></a> 运算符重载的两种方式</h3><h4 id="重载为类的成员函数"><a class="markdownIt-Anchor" href="#重载为类的成员函数"></a> 重载为类的成员函数</h4><p><strong>重载为成员函数时，参数个数为运算符目数减一</strong>。</p><h5 id="双目运算符"><a class="markdownIt-Anchor" href="#双目运算符"></a> 双目运算符</h5><p>双目运算符有两个操作数，如果将双目运算符重载为类的成员函数，则左操作数是该类的对象，由this指针指出，右操作数则通过运算符重载函数的参数表来传递。如下是加法运算的重载。</p><pre class="highlight"><code class="cpp"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Vector</span>{<span class="hljs-keyword">private</span>:<span class="hljs-type">int</span> x, y;<span class="hljs-keyword">public</span>:<span class="hljs-built_in">Vector</span>(<span class="hljs-type">int</span> x1, <span class="hljs-type">int</span> y1){x = x1;y = y1;}    <span class="hljs-comment">//重载运算符的实现</span>Vector <span class="hljs-keyword">operator</span>+(<span class="hljs-type">const</span> Vector&amp; p){        <span class="hljs-comment">//调用A类构造函数创建一个临时匿名对象作为函数返回</span><span class="hljs-keyword">return</span> <span class="hljs-built_in">Vector</span>(x + p.x, y + p.y);}<span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">show</span><span class="hljs-params">()</span></span>{cout &lt;&lt; <span class="hljs-string">&quot;x=&quot;</span> &lt;&lt; x &lt;&lt; <span class="hljs-string">&quot;,&quot;</span> &lt;&lt; <span class="hljs-string">&quot;y=&quot;</span> &lt;&lt; y &lt;&lt; endl;}};<span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>{<span class="hljs-function">Vector <span class="hljs-title">v1</span><span class="hljs-params">(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>)</span></span>;<span class="hljs-function">Vector <span class="hljs-title">v2</span><span class="hljs-params">(<span class="hljs-number">3</span>, <span class="hljs-number">4</span>)</span></span>;Vector a;a = v1 + v2;a.<span class="hljs-built_in">show</span>();}</code></pre><p>在Vector类中重载了运算符+，该重载只对Vector类的对象有效。执行<code>a=v1+v2;</code>语句时，编译器检测到+号左边是一个Vector类对象（+号具有左结合性，所以先检测左边），就会调用成员函数<code>operator+()</code>，也就是转换为：<code>a = v1.operate+(v2);</code>。</p><h5 id="单目运算符"><a class="markdownIt-Anchor" href="#单目运算符"></a> 单目运算符</h5><p>单目运算符的操作数只有一个，比如自增和自减运算符，但是需要区分前置(<ins>i)和后置(i</ins>)运算符。为了区分所重载的运算符是前置运算符还是后置运算符，C++规定：前置运算符作为一元运算符重载，后置运算符作为二元运算符重载，这样从重载函数的参数列表就可以区分前置和后置了。</p><p>运算符的前置形式因为是一元运算符，与声明其他任何一元运算符的方式完全相同；后置形式因为是二元运算符，需要接受 <strong><code>int</code></strong> 类型的额外参数。</p><p>当为递增或递减运算符的后置形式指定重载运算符时，其他参数的类型必须是 <code>int</code>，指定任何其他类型都会报错。</p><pre class="highlight"><code class="cpp"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Vector</span>{<span class="hljs-keyword">private</span>:<span class="hljs-type">int</span> x, y;<span class="hljs-keyword">public</span>:<span class="hljs-built_in">Vector</span>(<span class="hljs-type">int</span> x1, <span class="hljs-type">int</span> y1){x = x1;y = y1;}Vector&amp; <span class="hljs-keyword">operator</span>++()<span class="hljs-comment">//++i 前置++实现</span>{++x;++y;<span class="hljs-keyword">return</span> *<span class="hljs-keyword">this</span>;<span class="hljs-comment">//后引用</span>}Vector <span class="hljs-keyword">operator</span>++(<span class="hljs-type">int</span> n)<span class="hljs-comment">//i++ 后置++实现</span>{Vector a = *<span class="hljs-keyword">this</span>;<span class="hljs-comment">//保存对象引用</span>++(*<span class="hljs-keyword">this</span>);<span class="hljs-comment">//自增，调用前面实现的前置++</span><span class="hljs-keyword">return</span> a;<span class="hljs-comment">//返回先前保存的对象</span>}<span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">show</span><span class="hljs-params">()</span></span>{cout &lt;&lt; <span class="hljs-string">&quot;x=&quot;</span> &lt;&lt; x &lt;&lt; <span class="hljs-string">&quot;,&quot;</span> &lt;&lt; <span class="hljs-string">&quot;y=&quot;</span> &lt;&lt; y &lt;&lt; endl;}};<span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>{<span class="hljs-function">Vector <span class="hljs-title">v1</span><span class="hljs-params">(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>)</span>, <span class="hljs-title">v2</span><span class="hljs-params">(<span class="hljs-number">3</span>, <span class="hljs-number">4</span>)</span></span>;(v1++).<span class="hljs-built_in">show</span>(); <span class="hljs-comment">// x=1,y=2</span>(++v2).<span class="hljs-built_in">show</span>(); <span class="hljs-comment">// x=4,y=5</span><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;}</code></pre><p>调用<code>++s</code>即为<code>s.operator++()</code>；调用<code>s++</code>则为<code>s.operator++(0)</code>。</p><h4 id="重载为普通函数"><a class="markdownIt-Anchor" href="#重载为普通函数"></a> 重载为普通函数</h4><p><strong>重载为普通函数时，重载函数的参数个数为运算符目数</strong>。</p><p>如果是双目运算符，则重载函数的参数列表有两个形参，如果是单目运算符，则参数列表只有一个形参。</p><pre class="highlight"><code class="cpp"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Vector</span>{<span class="hljs-keyword">private</span>:<span class="hljs-type">int</span> x, y;<span class="hljs-keyword">public</span>:<span class="hljs-built_in">Vector</span>(<span class="hljs-type">int</span> x1, <span class="hljs-type">int</span> y1){x = x1;y = y1;}<span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">show</span><span class="hljs-params">()</span></span>{cout &lt;&lt; <span class="hljs-string">&quot;x=&quot;</span> &lt;&lt; x &lt;&lt; <span class="hljs-string">&quot;,&quot;</span> &lt;&lt; <span class="hljs-string">&quot;y=&quot;</span> &lt;&lt; y &lt;&lt; endl;}};<span class="hljs-comment">//重载运算符的实现</span>Vector <span class="hljs-keyword">operator</span>+(<span class="hljs-type">const</span> Vector&amp; p, <span class="hljs-type">int</span> shift){    <span class="hljs-comment">//调用A类构造函数创建一个临时匿名对象作为函数返回</span>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Vector</span>(p.x+shift, p.y+shift);}<span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>{<span class="hljs-function">Vector <span class="hljs-title">v1</span><span class="hljs-params">(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>)</span></span>;Vector a;a = v1 + <span class="hljs-number">2</span>;a.<span class="hljs-built_in">show</span>(); <span class="hljs-comment">// x=3,y=4</span>}</code></pre><h5 id="重载为类的友元函数"><a class="markdownIt-Anchor" href="#重载为类的友元函数"></a> 重载为类的友元函数</h5><p>运算符重载为类的友元函数，只是在函数前加一个<code>friend</code>关键字。运算符重载为类的友元函数时，由于没有隐含的<code>this</code>指针，因此操作数的个数没有变化，所有的操作数都必须通过函数形参进行传递，函数的参数与操作数 自左自右保持一一对应。</p><pre class="highlight"><code class="cpp"><span class="hljs-keyword">friend</span> 返回类型 <span class="hljs-keyword">operator</span> 运算符（参数列表）{    函数体；}</code></pre><p>如下的例子。</p><pre class="highlight"><code class="cpp"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Vector</span>{<span class="hljs-keyword">private</span>:<span class="hljs-type">int</span> x, y;<span class="hljs-keyword">public</span>:<span class="hljs-built_in">Vector</span>(<span class="hljs-type">int</span> x1, <span class="hljs-type">int</span> y1){x = x1;y = y1;}    <span class="hljs-keyword">friend</span> Vector <span class="hljs-keyword">operator</span>+(<span class="hljs-type">const</span> Vector&amp; v1, <span class="hljs-type">const</span> Vector&amp; v2);<span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">show</span><span class="hljs-params">()</span></span>{cout &lt;&lt; <span class="hljs-string">&quot;x=&quot;</span> &lt;&lt; x &lt;&lt; <span class="hljs-string">&quot;,&quot;</span> &lt;&lt; <span class="hljs-string">&quot;y=&quot;</span> &lt;&lt; y &lt;&lt; endl;}};<span class="hljs-comment">//重载运算符的实现</span>Vector <span class="hljs-keyword">operator</span>+(<span class="hljs-type">const</span> Vector&amp; v1, <span class="hljs-type">const</span> Vector&amp; v2){    <span class="hljs-comment">//调用A类构造函数创建一个临时匿名对象作为函数返回</span>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Vector</span>(v1.x+v2.x, v1.y+v2.y);}<span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span>{<span class="hljs-function">Vector <span class="hljs-title">v1</span><span class="hljs-params">(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>)</span></span>;    <span class="hljs-function">Vector <span class="hljs-title">v1</span><span class="hljs-params">(<span class="hljs-number">3</span>, <span class="hljs-number">4</span>)</span></span>;Vector a;a = v1 + v2;a.<span class="hljs-built_in">show</span>(); <span class="hljs-comment">// x=4,y=6</span>}</code></pre><h3 id="总结-2"><a class="markdownIt-Anchor" href="#总结-2"></a> 总结</h3><ol><li>重载为成员函数时，参数个数为运算符目数减一；重载为普通函数时，参数个数为运算符目数。</li><li>成员函数运算符重载时，运算符左值类型必须为所在类类型；而非成员函数运算符重载则不必。</li><li>一般，单目运算符最好重载为类的成员函数，双目运算符最好重载为类的友元函数。</li><li>有4个运算符必须重载为类的成员函数：赋值＝、下标[ ]、调用( )、成员访问-&gt;；而&lt;&lt;运算符由于其第一个运算符必须是ostream对象，&gt;&gt;第一个运算符必须是istream对象，所以只能重载为友元函数。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>线性回归算法原理与实现</title>
      <link href="/2023/11/11/suan-fa/xian-xing-hui-gui/"/>
      <url>/2023/11/11/suan-fa/xian-xing-hui-gui/</url>
      
        <content type="html"><![CDATA[<h1 id="线性回归"><a class="markdownIt-Anchor" href="#线性回归"></a> 线性回归</h1><h2 id="基本原理"><a class="markdownIt-Anchor" href="#基本原理"></a> 基本原理</h2><p>线性模型试图<strong>通过线性组合的方式对目标进行拟合或逼近</strong>。它的一般形式如<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>y</mi><mo>^</mo></mover><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>w</mi><mn>1</mn></msub><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>w</mi><mn>2</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo>+</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo>+</mo><msub><mi>w</mi><mi>d</mi></msub><msub><mi>x</mi><mi>d</mi></msub><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">\hat y = f(x) = w_1x_1+w_2x_2+...+w_dx_d+b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span></p><p>其中$ x_1,x_2,…,x_d<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>是我们的输入数据，</mtext></mrow><annotation encoding="application/x-tex">是我们的输入数据，</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">我</span><span class="mord cjk_fallback">们</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">输</span><span class="mord cjk_fallback">入</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">据</span><span class="mord cjk_fallback">，</span></span></span></span>x_i<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>表示样本数据的某个特征，</mtext></mrow><annotation encoding="application/x-tex">表示样本数据的某个特征，</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">表</span><span class="mord cjk_fallback">示</span><span class="mord cjk_fallback">样</span><span class="mord cjk_fallback">本</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">据</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">某</span><span class="mord cjk_fallback">个</span><span class="mord cjk_fallback">特</span><span class="mord cjk_fallback">征</span><span class="mord cjk_fallback">，</span></span></span></span> w_1,w_2,…,w_d <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>和</mtext></mrow><annotation encoding="application/x-tex">和</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">和</span></span></span></span>b$是线性回归模型的参数，将其改写为向量形式：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>y</mi><mo>^</mo></mover><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mi>w</mi><mi>T</mi></msup><mo>∗</mo><mi>x</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">\hat y = f(x) = w^T*x + b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span></p><p>当建立了这样一个形如<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>y</mi><mo>^</mo></mover><mo>=</mo><mi>w</mi><mo>∗</mo><mi>x</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">\hat{y}=w*x+b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span>的模型之后，我们并不知道参数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span>的具体数值是多少，那么怎么确定参数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span>呢？首先考虑一种简单的情形：输入的样本数据只有一个特征。假设有一批数据<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mi>d</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>d</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">{ (x_1,y_1),(x_2,y_2),...,(x_d,y_d) }</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span>，已经知道数据<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和对应的结果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，则可以定义线性回归模型的损失为：真实值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>与预测值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>y</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span>的差的平方和——MSE损失（Mean Square Error）。</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>L</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned} L = \sum_{i=1}^{N} (y_i - \hat{y_i})^2 \end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.4060050000000004em;vertical-align:-1.4530025em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.9530025000000004em;"><span style="top:-3.9530025em;"><span class="pstrut" style="height:3.828336em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4530025em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>则线性回归模型的参数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span>可以通过下面的公式得到，当真实值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>和预测值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>y</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span>的损失达到最小时，此时线性回归模型的参数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>w</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">w^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.688696em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>b</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">b^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>就是我们要找的模型参数。</p><p><span class="katex-error" title="ParseError: KaTeX parse error: Undefined control sequence: \* at position 21: …n{aligned} (w^{\̲*̲}, b^{\*}) = \a…">\begin{aligned} (w^{\*}, b^{\*}) = \arg \mathop{\min}\limits_{(w,b)} \sum_{i=1}^N (y_i-f(x_i))^2 \\ = \arg \mathop{\min}\limits_{(w,b)} \sum_{i=1}^N (y_i-w*x_i - b)^2 \end{aligned}</span></p><p>由均方差损失（MSE）可知该损失函数是一个关于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span>的凸函数，当该函数对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span>的导数均为0时，该函数达到极小值，即可求得模型参数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>w</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">w^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.688696em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>b</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">b^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>。因此，将损失<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span></span></span></span>对两个参数分别求导</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>w</mi></mrow></mfrac><mo>=</mo><mn>2</mn><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mi>w</mi><mo>∗</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mi>b</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mo>−</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn><mo stretchy="false">(</mo><mi>w</mi><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msubsup><mi>x</mi><mi>i</mi><mn>2</mn></msubsup><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mi>b</mi><mo stretchy="false">)</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned} \frac{\partial L}{\partial w} = 2\sum_{i=1}^N (y_i - w*x_i - b)(-x_i)=2(w\sum_{i=1}^N x_i^2 - \sum_{i=1}^N(y_i -b)x_i) \end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.4060050000000004em;vertical-align:-1.4530025em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.9530025000000004em;"><span style="top:-3.9530025em;"><span class="pstrut" style="height:3.828336em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">2</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4530025em;"><span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>b</mi></mrow></mfrac><mo>=</mo><mn>2</mn><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mi>w</mi><mo>∗</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mi>b</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn><mo stretchy="false">(</mo><mi>N</mi><mi>b</mi><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mi>w</mi><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned} \frac{\partial L}{\partial b} = 2\sum_{i=1}^N (y_i - w*x_i - b)(-1)=2(Nb- \sum_{i=1}^N (y_i-wx_i)) \end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.4060050000000004em;vertical-align:-1.4530025em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.9530025000000004em;"><span style="top:-3.9530025em;"><span class="pstrut" style="height:3.828336em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">b</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">2</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4530025em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>令导数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>b</mi></mrow></mfrac><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\frac{\partial L}{\partial b}=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，则</p><p><span class="katex-error" title="ParseError: KaTeX parse error: Undefined control sequence: \* at position 94: …_i-wx_i) \\\ b^\̲*̲ &amp;=\bar y - w \…">\begin{aligned} Nb &amp;=\sum_{i=1}^N (y_i-wx_i)\\\ b &amp;=\frac{1}{N}\sum_{i=1}^N (y_i-wx_i) \\\ b^\* &amp;=\bar y - w \bar x  \end{aligned}</span></p><p>令导数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>w</mi></mrow></mfrac><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\frac{\partial L}{\partial w}=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，并将$b=\bar y - w \bar x $带入，则</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>w</mi><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msubsup><mi>x</mi><mi>i</mi><mn>2</mn></msubsup></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msub><mi>y</mi><mi>i</mi></msub><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>b</mi><msub><mi>x</mi><mi>i</mi></msub><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msub><mi>y</mi><mi>i</mi></msub><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mo stretchy="false">(</mo><mover accent="true"><mi>y</mi><mo>ˉ</mo></mover><mo>−</mo><mi>w</mi><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mo stretchy="false">)</mo><msub><mi>x</mi><mi>i</mi></msub><mo>⇒</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mtext> </mtext><mi>w</mi><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msubsup><mi>x</mi><mi>i</mi><mn>2</mn></msubsup></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msub><mi>y</mi><mi>i</mi></msub><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><mi>y</mi><mo>ˉ</mo></mover><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msub><mi>x</mi><mi>i</mi></msub><mo>+</mo><mi>w</mi><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msub><mi>x</mi><mi>i</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mtext> </mtext><mi>w</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msub><mi>y</mi><mi>i</mi></msub><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><mi>y</mi><mo>ˉ</mo></mover><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msub><mi>x</mi><mi>i</mi></msub></mrow><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msubsup><mi>x</mi><mi>i</mi><mn>2</mn></msubsup><mo>−</mo><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msub><mi>x</mi><mi>i</mi></msub></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned} w\sum_{i=1}^N x_i^2 &amp;= \sum_{i=1}^N y_i x_i - \sum_{i=1}^N bx_i = \sum_{i=1}^N y_i x_i - \sum_{i=1}^N (\bar y-w\bar x)x_i \Rightarrow \\\ w\sum_{i=1}^N x_i^2 &amp;= \sum_{i=1}^N y_i x_i - \bar y \sum_{i=1}^N x_i + w\bar x \sum_{i=1}^N x_i \\\ w &amp;= \frac{\sum_{i=1}^N y_i x_i - \bar y \sum_{i=1}^N x_i }{\sum_{i=1}^N x_i^2 - \bar x \sum_{i=1}^N x_i} \end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:9.953892em;vertical-align:-4.726946em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.226946em;"><span style="top:-7.226946em;"><span class="pstrut" style="height:3.828336em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.8209409999999995em;"><span class="pstrut" style="height:3.828336em;"></span><span class="mord"><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-0.5723310000000004em;"><span class="pstrut" style="height:3.828336em;"></span><span class="mord"><span class="mspace"> </span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.726946em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.226946em;"><span style="top:-7.226946em;"><span class="pstrut" style="height:3.828336em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">ˉ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⇒</span></span></span><span style="top:-3.8209409999999995em;"><span class="pstrut" style="height:3.828336em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">ˉ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-0.5723310000000004em;"><span class="pstrut" style="height:3.828336em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.670941em;"><span style="top:-2.128769em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7959080000000001em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.27686399999999994em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6897100000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">ˉ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.170941em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.726946em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>又有$\bar y \sum_{i=1}^N x_i = \frac{1}{N} \sum_{i=1}^N y_i \sum_{i=1}^N x_i = \bar x \sum_{i=1}^N y_i <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>，</mtext></mrow><annotation encoding="application/x-tex">，</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord cjk_fallback">，</span></span></span></span>\bar x \sum_{i=1}^N x_i = \frac{1}{N} \sum_{i=1}^N x_i \sum_{i=1}^N x_i=\frac{1}{N} (\sum_{i=1}^N x_i)^2$，将其代入上式：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msup><mi>w</mi><mo>∗</mo></msup><mo>=</mo><mfrac><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><mi>x</mi><mo>ˉ</mo></mover><mo stretchy="false">)</mo></mrow><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msubsup><mi>x</mi><mi>i</mi><mn>2</mn></msubsup><mo>−</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><mo stretchy="false">(</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msub><mi>x</mi><mi>i</mi></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned} w^* = \frac{\sum_{i=1}^N y_i(x_i - \bar x)}{\sum_{i=1}^N x_i^2 - \frac{1}{N}(\sum_{i=1}^N x_i)^2}  \end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.1871720000000003em;vertical-align:-1.343586em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8435860000000004em;"><span style="top:-3.843586em;"><span class="pstrut" style="height:3.670941em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.670941em;"><span style="top:-2.128769em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7959080000000001em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.27686399999999994em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6897100000000003em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.216231em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.343586em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>推广到矩阵形式，若每个样本有<code>d</code>个特征，则线性回归模型的数学表达式为：</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>Y</mi><mo>^</mo></mover><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mover accent="true"><mi>y</mi><mo>^</mo></mover><mn>1</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext> </mtext><msub><mover accent="true"><mi>y</mi><mo>^</mo></mover><mn>2</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext> </mtext><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext> </mtext><msub><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi>N</mi></msub></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mi>X</mi><mi>W</mi><mo>+</mo><mi>b</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>x</mi><mn>1</mn><mn>1</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>x</mi><mn>1</mn><mn>2</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>x</mi><mn>1</mn><mi>d</mi></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext> </mtext><msubsup><mi>x</mi><mn>2</mn><mn>1</mn></msubsup></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>x</mi><mn>2</mn><mn>2</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>x</mi><mn>2</mn><mi>d</mi></msubsup></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext> </mtext><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋱</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext> </mtext><msubsup><mi>x</mi><mi>N</mi><mn>1</mn></msubsup></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>x</mi><mi>N</mi><mn>2</mn></msubsup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msubsup><mi>x</mi><mi>N</mi><mi>d</mi></msubsup></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>w</mi><mn>1</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext> </mtext><msub><mi>w</mi><mn>2</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext> </mtext><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext> </mtext><msub><mi>x</mi><mi>d</mi></msub></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">\hat{Y}=\begin{bmatrix} \hat{y}_1 \\\ \hat{y}_2\\\ \vdots\\\ \hat{y}_N \end {bmatrix}=XW+b=  \begin {bmatrix} x_1^1 &amp; x_1^2 &amp; \cdots &amp; x_1^d\\\ x_2^1 &amp; x_2^2 &amp; \cdots &amp; x_2^d\\\ \vdots &amp; \vdots &amp; \ddots &amp; \vdots\\\ x_N^1 &amp; x_N^2 &amp; \cdots &amp; x_N^d \end {bmatrix} \begin {bmatrix} w_1 \\\ w_2\\\ \vdots\\\ x_d \end {bmatrix} + b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9467699999999999em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:5.459999999999999em;vertical-align:-2.4799999999999995em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.953995em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.4999850000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.0959850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.6919850000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.712975em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.953995em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9799999999999995em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mspace"> </span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7674999999999996em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mspace"> </span><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675000000000006em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mspace"> </span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4799999999999995em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.953995em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.4999850000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.0959850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.6919850000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.712975em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.953995em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:5.487324em;vertical-align:-2.4936619999999996em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.953995em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.4999850000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.0959850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.6919850000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.712975em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.953995em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9936620000000005em;"><span style="top:-5.832054em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.622946000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mspace"> </span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7629460000000003em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mspace"> </span><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5538380000000005em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mspace"> </span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.424669em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4936619999999996em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9936620000000005em;"><span style="top:-5.832054em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.622946000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7629460000000003em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5538380000000005em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.424669em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4936619999999996em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9936620000000005em;"><span style="top:-5.644554em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-4.435446000000001em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-2.5754460000000003em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋱</span></span></span><span style="top:-1.3663380000000005em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4936619999999996em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9936620000000005em;"><span style="top:-5.832054em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.622946000000001em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7629460000000003em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5538380000000005em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.424669em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.275331em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4936619999999996em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.953995em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.4999850000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.0959850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.6919850000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.712975em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.953995em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.953995em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.4999850000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.0959850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.6919850000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.712975em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.953995em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9799999999999995em;"><span style="top:-5.8275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mspace"> </span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7674999999999996em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mspace"> </span><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-1.5675000000000006em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mspace"> </span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4799999999999995em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.953995em;"><span style="top:-1.3499850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.4999850000000006em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.0959850000000007em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.6919850000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.712975em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.953995em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4500349999999997em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span></p><p>为便于讨论将参数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span>合并为一个矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>W</mi><mo stretchy="true">^</mo></mover><mo>=</mo><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">;</mo><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\widehat W = (w; b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.92333em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.92333em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width="100%" height="0.24em" viewbox="0 0 1062 239" preserveaspectratio="none"><path d="M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z"/></svg></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span>，相应地样本数据<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>变为一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo>∗</mo><mo stretchy="false">(</mo><mi>d</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">N*(d+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>大小的新矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>，如下式：</p><p>$\hat{Y}=X \widehat W=  \begin {bmatrix} x_1^1 &amp; x_1^2 &amp; \cdots &amp; x_1^d &amp; 1\\ x_2^1 &amp; x_2^2 &amp; \cdots &amp; x_2^d &amp; 1\\ \vdots &amp; \vdots &amp; \ddots &amp; \vdots &amp; \vdots \\ x_N^1 &amp; x_N^2 &amp; \cdots &amp; x_N^d &amp; 1 \end {bmatrix} \begin {bmatrix} w_1 \\ w_2\\ \vdots\\ x_d  \\ b\end {bmatrix} $</p><p>可以得出损失函数为如下形式</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo>=</mo><mo stretchy="false">(</mo><mi>Y</mi><mo>−</mo><mi>X</mi><mover accent="true"><mi>W</mi><mo stretchy="true">^</mo></mover><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mo stretchy="false">(</mo><mi>Y</mi><mo>−</mo><mi>X</mi><mover accent="true"><mi>W</mi><mo stretchy="true">^</mo></mover><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L = (Y-X \widehat W)^T (Y-X \widehat W)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.17333em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.92333em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width="100%" height="0.24em" viewbox="0 0 1062 239" preserveaspectratio="none"><path d="M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z"/></svg></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.17333em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.92333em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width="100%" height="0.24em" viewbox="0 0 1062 239" preserveaspectratio="none"><path d="M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z"/></svg></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p>则当损失<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span></span></span></span>为最小时，可求得参数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>W</mi><mo stretchy="true">^</mo></mover></mrow><annotation encoding="application/x-tex">\widehat W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.92333em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.92333em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width="100%" height="0.24em" viewbox="0 0 1062 239" preserveaspectratio="none"><path d="M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z"/></svg></span></span></span></span></span></span></span></span></span>为最优解，令损失<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span></span></span></span>对参数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>W</mi><mo stretchy="true">^</mo></mover></mrow><annotation encoding="application/x-tex">\widehat W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.92333em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.92333em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width="100%" height="0.24em" viewbox="0 0 1062 239" preserveaspectratio="none"><path d="M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z"/></svg></span></span></span></span></span></span></span></span></span>求导，得</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msup><mover accent="true"><mi>W</mi><mo stretchy="true">^</mo></mover><mo>∗</mo></msup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>arg</mi><mo>⁡</mo><munder><mo><mi>min</mi><mo>⁡</mo></mo><mover accent="true"><mi>W</mi><mo stretchy="true">^</mo></mover></munder><mo stretchy="false">(</mo><mi>Y</mi><mo>−</mo><mi>X</mi><mover accent="true"><mi>W</mi><mo stretchy="true">^</mo></mover><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mo stretchy="false">(</mo><mi>Y</mi><mo>−</mo><mi>X</mi><mover accent="true"><mi>W</mi><mo stretchy="true">^</mo></mover><mo stretchy="false">)</mo><mo>⇒</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mtext> </mtext><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mover accent="true"><mi>W</mi><mo stretchy="true">^</mo></mover></mrow></mfrac></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mi mathvariant="normal">∂</mi><mrow><mi mathvariant="normal">∂</mi><mover accent="true"><mi>W</mi><mo stretchy="true">^</mo></mover></mrow></mfrac><mo fence="false">[</mo><msup><mi>Y</mi><mi>T</mi></msup><mi>Y</mi><mo>−</mo><msup><mi>Y</mi><mi>T</mi></msup><mi>X</mi><mover accent="true"><mi>W</mi><mo stretchy="true">^</mo></mover><mo>−</mo><msup><mover accent="true"><mi>W</mi><mo stretchy="true">^</mo></mover><mi>T</mi></msup><msup><mi>X</mi><mi>T</mi></msup><mi>Y</mi><mo>+</mo><msup><mover accent="true"><mi>W</mi><mo stretchy="true">^</mo></mover><mi>T</mi></msup><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><mover accent="true"><mi>W</mi><mo stretchy="true">^</mo></mover><mo fence="false">]</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mtext> </mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mn>0</mn><mo>−</mo><msup><mi>X</mi><mi>T</mi></msup><mi>Y</mi><mo>−</mo><msup><mi>X</mi><mi>T</mi></msup><mi>Y</mi><mo>+</mo><mo stretchy="false">(</mo><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><mo>+</mo><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><mo stretchy="false">)</mo><mover accent="true"><mi>W</mi><mo stretchy="true">^</mo></mover></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mtext> </mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mn>2</mn><msup><mi>X</mi><mi>T</mi></msup><mo stretchy="false">(</mo><mi>X</mi><mover accent="true"><mi>W</mi><mo stretchy="true">^</mo></mover><mo>−</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned} \widehat W^* &amp;= \arg \mathop{\min}\limits_{\widehat W} (Y-X \widehat W)^T (Y-X \widehat W) \Rightarrow  \\\ \frac{\partial L}{\partial \widehat W} &amp;= \frac{\partial}{\partial \widehat W} \big[ Y^TY -Y^TX\widehat W - \widehat W^TX^TY + \widehat W^TX^T X \widehat W \big] \\\ &amp;=0-X^TY - X^TY + (X^TX+X^TX)\widehat W \\\ &amp;= 2X^T(X\widehat W-Y) \end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:7.787091000000001em;vertical-align:-3.643545500000001em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.1435455em;"><span style="top:-6.5916555em;"><span class="pstrut" style="height:3.3714399999999998em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.92333em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width="100%" height="0.24em" viewbox="0 0 1062 239" preserveaspectratio="none"><path d="M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z"/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span><span style="top:-4.007884499999999em;"><span class="pstrut" style="height:3.3714399999999998em;"></span><span class="mord"><span class="mspace"> </span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.18667em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.92333em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width="100%" height="0.24em" viewbox="0 0 1062 239" preserveaspectratio="none"><path d="M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z"/></svg></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.81333em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.971224499999999em;"><span class="pstrut" style="height:3.3714399999999998em;"></span><span class="mord"><span class="mspace"> </span></span></span><span style="top:-0.3878944999999989em;"><span class="pstrut" style="height:3.3714399999999998em;"></span><span class="mord"><span class="mspace"> </span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.643545500000001em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.1435455em;"><span style="top:-6.5916555em;"><span class="pstrut" style="height:3.3714399999999998em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-2.187669em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.92333em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span><span class="svg-align" style="top:-3.38333em;"><span class="pstrut" style="height:2.7em;"></span><span class="mtight" style="height:0.24em;"><svg width="100%" height="0.24em" viewbox="0 0 1062 239" preserveaspectratio="none"><path d="M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z"/></svg></span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mop">min</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.912331em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.92333em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width="100%" height="0.24em" viewbox="0 0 1062 239" preserveaspectratio="none"><path d="M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z"/></svg></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.92333em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width="100%" height="0.24em" viewbox="0 0 1062 239" preserveaspectratio="none"><path d="M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z"/></svg></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⇒</span></span></span><span style="top:-4.007884499999999em;"><span class="pstrut" style="height:3.3714399999999998em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.18667em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.92333em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width="100%" height="0.24em" viewbox="0 0 1062 239" preserveaspectratio="none"><path d="M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z"/></svg></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.81333em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.92333em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width="100%" height="0.24em" viewbox="0 0 1062 239" preserveaspectratio="none"><path d="M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z"/></svg></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.92333em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width="100%" height="0.24em" viewbox="0 0 1062 239" preserveaspectratio="none"><path d="M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z"/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.92333em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width="100%" height="0.24em" viewbox="0 0 1062 239" preserveaspectratio="none"><path d="M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z"/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.92333em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width="100%" height="0.24em" viewbox="0 0 1062 239" preserveaspectratio="none"><path d="M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z"/></svg></span></span></span></span></span></span><span class="mord"><span class="delimsizing size1">]</span></span></span></span><span style="top:-1.971224499999999em;"><span class="pstrut" style="height:3.3714399999999998em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.92333em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width="100%" height="0.24em" viewbox="0 0 1062 239" preserveaspectratio="none"><path d="M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z"/></svg></span></span></span></span></span></span></span></span><span style="top:-0.3878944999999989em;"><span class="pstrut" style="height:3.3714399999999998em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.92333em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width="100%" height="0.24em" viewbox="0 0 1062 239" preserveaspectratio="none"><path d="M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z"/></svg></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.643545500000001em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>令<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mover accent="true"><mi>W</mi><mo stretchy="true">^</mo></mover></mrow></mfrac><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\frac{\partial L}{\partial \widehat W} = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.336439em;vertical-align:-0.456331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.543669em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.92333em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span><span class="svg-align" style="top:-3.38333em;"><span class="pstrut" style="height:2.7em;"></span><span class="mtight" style="height:0.24em;"><svg width="100%" height="0.24em" viewbox="0 0 1062 239" preserveaspectratio="none"><path d="M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z"/></svg></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.456331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，则</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mn>2</mn><msup><mi>X</mi><mi>T</mi></msup><mo stretchy="false">(</mo><mi>X</mi><mover accent="true"><mi>W</mi><mo stretchy="true">^</mo></mover><mo>−</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mn>0</mn><mo>⇒</mo><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><mover accent="true"><mi>W</mi><mo stretchy="true">^</mo></mover><mo>=</mo><msup><mi>X</mi><mi>T</mi></msup><mi>Y</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mtext> </mtext><msup><mover accent="true"><mi>W</mi><mo stretchy="true">^</mo></mover><mo>∗</mo></msup></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo stretchy="false">(</mo><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><msup><mi>X</mi><mi>T</mi></msup><mi>Y</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned} 2X^T(X\widehat W-Y) &amp;= 0 \Rightarrow X^TX \widehat W = X^T Y \\\ \widehat W^* &amp;= (X^TX)^{-1} X^TY\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.1666600000000003em;vertical-align:-1.3333300000000001em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8333300000000001em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.92333em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width="100%" height="0.24em" viewbox="0 0 1062 239" preserveaspectratio="none"><path d="M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z"/></svg></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span><span style="top:-2.32667em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mspace"> </span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.92333em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width="100%" height="0.24em" viewbox="0 0 1062 239" preserveaspectratio="none"><path d="M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z"/></svg></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.738696em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3333300000000001em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8333300000000001em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.92333em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.24em;"><svg width="100%" height="0.24em" viewbox="0 0 1062 239" preserveaspectratio="none"><path d="M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z"/></svg></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span><span style="top:-2.32667em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3333300000000001em;"><span></span></span></span></span></span></span></span></span></span></span></p><h2 id="代码实现"><a class="markdownIt-Anchor" href="#代码实现"></a> 代码实现</h2><p>上面介绍了线性回归的基本原理，下面通过Python和Numpy来实现一个线性回归模型。首先定义模型的参数并初始化，参数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span>全部初始化为0。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">initialize_params</span>(<span class="hljs-params">dims</span>):    w = np.zeros((dims, <span class="hljs-number">1</span>))    b = <span class="hljs-number">0</span>    <span class="hljs-keyword">return</span> w, b</code></pre><p>然后定义线性回归模型的计算、损失计算和求导计算。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">X, w, b</span>):    <span class="hljs-comment"># 模型公式</span>    y_hat = np.dot(X, w) + b     <span class="hljs-keyword">return</span> y_hat<span class="hljs-keyword">def</span> <span class="hljs-title function_">cal_loss</span>(<span class="hljs-params">y, y_hat</span>):    <span class="hljs-comment"># 损失函数</span>    loss = np.mean((y_hat-y)**<span class="hljs-number">2</span>)    <span class="hljs-keyword">return</span> loss<span class="hljs-keyword">def</span> <span class="hljs-title function_">cal_grad</span>(<span class="hljs-params">X, y, y_hat</span>):    num_train = X.shape[<span class="hljs-number">0</span>]    <span class="hljs-comment"># 参数的偏导</span>    dw = np.dot(X.T, (y_hat-y)) / num_train    db = np.mean((y_hat-y))        <span class="hljs-keyword">return</span> dw, db</code></pre><p>这里使用梯度下降算法求解模型参数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span>。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">linear_train</span>(<span class="hljs-params">X, y, learning_rate, epochs</span>):    w, b = initialize_params(X.shape[<span class="hljs-number">1</span>])      loss_list = []      <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, epochs):                <span class="hljs-comment"># 计算当前预测值、损失和参数偏导</span>        y_hat = forward(X, w, b)        loss = cal_loss(y, y_hat)         loss_list.append(loss)              dw, db = cal_grad(X, y, y_hat)        <span class="hljs-comment"># 基于梯度下降的参数更新过程</span>        w += -learning_rate * dw        b += -learning_rate * db           <span class="hljs-comment"># 打印迭代次数和损失</span>        <span class="hljs-keyword">if</span> i % <span class="hljs-number">10000</span> == <span class="hljs-number">0</span>:            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;epoch %d loss %f&#x27;</span> % (i, loss))                        <span class="hljs-comment"># 保存参数</span>        params = {                        <span class="hljs-string">&#x27;w&#x27;</span>: w,                        <span class="hljs-string">&#x27;b&#x27;</span>: b        }                <span class="hljs-comment"># 保存梯度</span>        grads = {                        <span class="hljs-string">&#x27;dw&#x27;</span>: dw,                        <span class="hljs-string">&#x27;db&#x27;</span>: db        }        <span class="hljs-keyword">return</span> loss_list, loss, params, grads</code></pre><p>上面基本实现了一个线性回归的功能，为了检测我们实现的线性回归模型的有效性，这里使用波士顿房价预测的数据进行测试，为了后面的可视化，自变量只用了房屋面积一个维度，即通过房屋面积去拟合房价。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">from</span> sklearn.datasets <span class="hljs-keyword">import</span> load_boston<span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> npdataset = load_boston()dataframe = pd.DataFrame(dataset[<span class="hljs-string">&quot;data&quot;</span>])dataframe.columns = dataset[<span class="hljs-string">&quot;feature_names&quot;</span>]dataframe[<span class="hljs-string">&quot;price&quot;</span>] = dataset[<span class="hljs-string">&quot;target&quot;</span>]X, y = dataframe[<span class="hljs-string">&quot;RM&quot;</span>].values, dataframe[<span class="hljs-string">&quot;price&quot;</span>]X, y = np.array(X), np.array(y)<span class="hljs-comment"># 训练集与测试集的简单划分</span>offset = <span class="hljs-built_in">int</span>(X.shape[<span class="hljs-number">0</span>] * <span class="hljs-number">0.9</span>)X_train, y_train = X[:offset], y[:offset]X_test, y_test = X[offset:], y[offset:]X_train = X_train.reshape((-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))X_test = X_test.reshape((-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))y_train = y_train.reshape((-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))y_test = y_test.reshape((-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))<span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;X_train=&#x27;</span>, X_train.shape) <span class="hljs-comment"># X_train= (455, 1)</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;X_test=&#x27;</span>, X_test.shape) <span class="hljs-comment"># X_test= (51, 1)</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;y_train=&#x27;</span>, y_train.shape) <span class="hljs-comment"># y_train= (455, 1)</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;y_test=&#x27;</span>, y_test.shape) <span class="hljs-comment"># y_test= (51, 1)</span></code></pre><p>接着使用训练数据训练模型，使用测试数据预测结果</p><pre class="highlight"><code class="python"><span class="hljs-comment"># 训练</span>loss_list, loss, params, grads = linear_train(X_train, y_train, <span class="hljs-number">0.001</span>, <span class="hljs-number">100000</span>)<span class="hljs-comment"># 预测结果并绘图</span><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> pltf = X_test.dot(params[<span class="hljs-string">&#x27;w&#x27;</span>]) + params[<span class="hljs-string">&#x27;b&#x27;</span>]plt.scatter(X_test, y_test)plt.plot(X_test, f, color = <span class="hljs-string">&#x27;darkorange&#x27;</span>)plt.xlabel(<span class="hljs-string">&#x27;X&#x27;</span>)plt.ylabel(<span class="hljs-string">&#x27;y&#x27;</span>)plt.show()</code></pre><p><img src="/images/linear_reg.png" alt></p><p>最后，为了更好的评估模型，使用K折交叉验证来评估我们实现的线性回归模型，计算的指标是回归中常用的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>R</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">R^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>。可以看到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>R</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">R^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>的均值为168，结合上面测试集的散点图和拟合直线，说明回归的效果不是非常理想，这是因为但从房屋面积去拟合房价是有失偏颇的。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">predict</span>(<span class="hljs-params">X, params</span>):    w = params[<span class="hljs-string">&#x27;w&#x27;</span>]    b = params[<span class="hljs-string">&#x27;b&#x27;</span>]    y_pred = np.dot(X, w) + b        <span class="hljs-keyword">return</span> y_pred<span class="hljs-keyword">def</span> <span class="hljs-title function_">linear_cross_validation</span>(<span class="hljs-params">data, k, randomize=<span class="hljs-literal">True</span></span>):       <span class="hljs-keyword">from</span> sklearn.utils <span class="hljs-keyword">import</span> shuffle    <span class="hljs-keyword">if</span> randomize:        data = <span class="hljs-built_in">list</span>(data)        shuffle(data)    slices = [data[i::k] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(k)]          <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(k):        validation = slices[i]        train = <span class="hljs-built_in">list</span>()        <span class="hljs-keyword">for</span> s <span class="hljs-keyword">in</span> slices:            <span class="hljs-keyword">if</span> s <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> validation:                train.extend(s)        train = np.array(train)        validation = np.array(validation)                    <span class="hljs-keyword">yield</span> train, validation        <span class="hljs-comment"># K折交叉验证</span>data = np.concatenate((X.reshape(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>), y.reshape(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>)), axis=<span class="hljs-number">1</span>) <span class="hljs-built_in">print</span>(data.shape)r_square_list = []<span class="hljs-keyword">for</span> train, validation <span class="hljs-keyword">in</span> linear_cross_validation(data, <span class="hljs-number">5</span>):    X_train = train[:, :-<span class="hljs-number">1</span>].reshape(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>)    y_train = train[:, -<span class="hljs-number">1</span>].reshape((-<span class="hljs-number">1</span>, <span class="hljs-number">1</span>))    X_valid = validation[:, :-<span class="hljs-number">1</span>].reshape(-<span class="hljs-number">1</span>,<span class="hljs-number">1</span>)    y_valid = validation[:, -<span class="hljs-number">1</span>].reshape((-<span class="hljs-number">1</span>, <span class="hljs-number">1</span>))    loss_list, loss, params, grads = linear_train(X_train, y_train, <span class="hljs-number">0.001</span>, <span class="hljs-number">100000</span>)    y_pred = predict(X_valid, params)    r_square = np.mean((y_valid-y)**<span class="hljs-number">2</span>)    r_square_list.append(r_square)<span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;five kold cross validation score is&#x27;</span>, r_square_list)<span class="hljs-comment"># five kold cross validation score is [162.41398318220567, 164.19161507455092, 178.86012366454037, 179.2822412241224, 159.51121355613822]</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;valid score is&#x27;</span>, np.mean(np.array(r_square_list)))<span class="hljs-comment"># valid score is 168.85183534031154</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法知识 </tag>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++|指针与引用</title>
      <link href="/2023/11/06/c-zhi-shi/zhi-zhen-yu-yin-yong/"/>
      <url>/2023/11/06/c-zhi-shi/zhi-zhen-yu-yin-yong/</url>
      
        <content type="html"><![CDATA[<h1 id="指针与引用"><a class="markdownIt-Anchor" href="#指针与引用"></a> 指针与引用</h1><h2 id="指针定义和使用"><a class="markdownIt-Anchor" href="#指针定义和使用"></a> 指针定义和使用</h2><p>作用：通过指针间接访问内存，<strong>指针保存数据的地址</strong>。</p><p>语法：<code>数据类型* 指针变量名</code></p><p>通过解引用的方式找到指针指向的内存——即找到指针指向的内存的数据</p><pre class="highlight"><code class="cpp"><span class="hljs-type">int</span> a = <span class="hljs-number">10</span>;<span class="hljs-type">int</span>* p = &amp;a;cout &lt;&lt; &amp;a &lt;&lt; endl;cout &lt;&lt; p &lt;&lt; endl;cout &lt;&lt; a &lt;&lt; endl;cout &lt;&lt; *p &lt;&lt; endl; <span class="hljs-comment">// 解引用</span></code></pre><h3 id="指针所占的内存空间"><a class="markdownIt-Anchor" href="#指针所占的内存空间"></a> 指针所占的内存空间</h3><p>占据的内存空间与数据类型无关，与操作系统有关</p><p>32位系统下，占用4个字节，64位系统下，占用8个字节</p><pre class="highlight"><code class="cpp"><span class="hljs-type">int</span> a = <span class="hljs-number">10</span>;<span class="hljs-type">int</span>* p;p = &amp;a;cout &lt;&lt; <span class="hljs-built_in">sizeof</span>(p) &lt;&lt; endl;cout &lt;&lt; <span class="hljs-built_in">sizeof</span>(<span class="hljs-type">int</span>*) &lt;&lt; endl;</code></pre><h3 id="空指针和野指针"><a class="markdownIt-Anchor" href="#空指针和野指针"></a> 空指针和野指针</h3><p>空指针：指针变量指向内存中编号为0的空间</p><p>空指针用途：初始化指针变量</p><p>注意：空指针指向的内存不可以访问（0-255之间的内存编号由系统占用）</p><pre class="highlight"><code class="cpp"><span class="hljs-type">int</span>* p = <span class="hljs-literal">NULL</span>; <span class="hljs-comment">// 空指针</span></code></pre><p>野指针：指针变量指向非法的内存空间，不是自己申请的空间</p><pre class="highlight"><code class="cpp"><span class="hljs-type">int</span>* p = (<span class="hljs-type">int</span>*)<span class="hljs-number">0x1100</span>; <span class="hljs-comment">// 野指针</span></code></pre><h3 id="const修饰指针"><a class="markdownIt-Anchor" href="#const修饰指针"></a> const修饰指针</h3><h4 id="常量指针"><a class="markdownIt-Anchor" href="#常量指针"></a> 常量指针</h4><p>指针的指向可以修改，但是指针指向的数据不可以修改</p><pre class="highlight"><code class="cpp"><span class="hljs-type">int</span> a = <span class="hljs-number">10</span>;<span class="hljs-type">int</span> b = <span class="hljs-number">10</span>;<span class="hljs-type">const</span> <span class="hljs-type">int</span>* p = &amp;a;p = &amp;b; <span class="hljs-comment">// 正确</span>*p = <span class="hljs-number">200</span>; <span class="hljs-comment">// 错误</span></code></pre><h4 id="指针常量"><a class="markdownIt-Anchor" href="#指针常量"></a> 指针常量</h4><p>指针的指向不可以修改，但是指针指向的数据可以修改</p><pre class="highlight"><code class="cpp"><span class="hljs-type">int</span> a = <span class="hljs-number">10</span>;<span class="hljs-type">int</span> b = <span class="hljs-number">10</span>;<span class="hljs-type">int</span>* <span class="hljs-type">const</span> p = &amp;a;p = &amp;b; <span class="hljs-comment">// 错误</span>*P = <span class="hljs-number">200</span>； <span class="hljs-comment">// 正确</span></code></pre><h4 id="既修饰指针又修饰常量"><a class="markdownIt-Anchor" href="#既修饰指针又修饰常量"></a> 既修饰指针又修饰常量</h4><p>指针的指向不可以修改，指针指向的数据也不可以修改</p><pre class="highlight"><code class="cpp"><span class="hljs-type">int</span> a = <span class="hljs-number">10</span>;<span class="hljs-type">int</span> b = <span class="hljs-number">10</span>;<span class="hljs-type">const</span> <span class="hljs-type">int</span>* <span class="hljs-type">const</span> p = &amp;a;p = &amp;b; <span class="hljs-comment">// 错误</span>*P = <span class="hljs-number">200</span>； <span class="hljs-comment">// 错误</span></code></pre><h3 id="指针和数组"><a class="markdownIt-Anchor" href="#指针和数组"></a> 指针和数组</h3><p>利用指针访问数组的元素</p><pre class="highlight"><code class="cpp"><span class="hljs-type">int</span> arr[<span class="hljs-number">5</span>] = {<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>};<span class="hljs-type">int</span>* p = arr;<span class="hljs-comment">// 遍历数组</span><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">5</span>, i++){    <span class="hljs-comment">// 方式一</span>    cout &lt;&lt; arr[i] &lt;&lt; endl;    <span class="hljs-comment">// 方式二</span>    cout &lt;&lt; *p &lt;&lt; endl;    p++;}</code></pre><h2 id="引用的定义和使用"><a class="markdownIt-Anchor" href="#引用的定义和使用"></a> 引用的定义和使用</h2><p>作用：给变量取别名，降低操作指针的风险，简化代码。</p><p>语法：<code>数据类型&amp; 别名 = 原名</code></p><pre class="highlight"><code class="cpp"><span class="hljs-type">int</span> a = <span class="hljs-number">10</span>;<span class="hljs-type">int</span>&amp; b = a;cout &lt;&lt; a &lt;&lt; endl; <span class="hljs-comment">// 10</span>cout &lt;&lt; b &lt;&lt; endl; <span class="hljs-comment">// 10</span>b = <span class="hljs-number">100</span>;cout &lt;&lt; a &lt;&lt; endl; <span class="hljs-comment">// 100</span>cout &lt;&lt; b &lt;&lt; endl; <span class="hljs-comment">// 100</span></code></pre><h3 id="使用注意事项"><a class="markdownIt-Anchor" href="#使用注意事项"></a> 使用注意事项</h3><ul><li>引用必须<strong>初始化</strong></li><li>引用一旦初始化，就不可以更改了**(本质是指针常量)**，详细看下节【引用的本质】</li></ul><h3 id="引用做函数参数"><a class="markdownIt-Anchor" href="#引用做函数参数"></a> 引用做函数参数</h3><p>函数参数有值传递和地址传递</p><p>作用：在函数传参时，可以使用<strong>引用</strong>作为形参。此时的形参可以修改实参</p><pre class="highlight"><code class="cpp"><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">swap1</span><span class="hljs-params">(<span class="hljs-type">int</span> a, <span class="hljs-type">int</span> b)</span></span>{    <span class="hljs-type">int</span> temp = a;    a = b;    b = temp;}<span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">swap2</span><span class="hljs-params">(<span class="hljs-type">int</span>* a, <span class="hljs-type">int</span>* b)</span></span>{    <span class="hljs-type">int</span> temp = *a;    *a = *b;    *b = temp;}<span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">swap3</span><span class="hljs-params">(<span class="hljs-type">int</span>&amp; a, <span class="hljs-type">int</span>&amp; b)</span></span>{    <span class="hljs-type">int</span> temp = a;    a = b;    b = temp;}</code></pre><h3 id="引用做函数返回值"><a class="markdownIt-Anchor" href="#引用做函数返回值"></a> 引用做函数返回值</h3><ol><li><p>引用可以作为函数的返回值</p></li><li><p>如果函数的返回值是引用，则<strong>函数调用</strong>可以作为左值</p></li></ol><pre class="highlight"><code class="cpp"><span class="hljs-function"><span class="hljs-type">int</span>&amp; <span class="hljs-title">test1</span><span class="hljs-params">()</span></span>{    <span class="hljs-type">int</span> a = <span class="hljs-number">10</span>;    <span class="hljs-keyword">return</span> a;}<span class="hljs-type">int</span>&amp; ref = <span class="hljs-built_in">test1</span>();cout &lt;&lt; ref &lt;&lt; endl; <span class="hljs-comment">// 局部变量被释放</span><span class="hljs-function"><span class="hljs-type">int</span>&amp; <span class="hljs-title">test2</span><span class="hljs-params">()</span></span>{    <span class="hljs-type">static</span> <span class="hljs-type">int</span> a = <span class="hljs-number">10</span>;    <span class="hljs-keyword">return</span> a;}<span class="hljs-type">int</span>&amp; ref2 = <span class="hljs-built_in">test2</span>();cout &lt;&lt; ref2 &lt;&lt; endl; <span class="hljs-comment">// 10</span><span class="hljs-built_in">test2</span>() = <span class="hljs-number">1000</span>; <span class="hljs-comment">// 函数调用作为左值</span>cout &lt;&lt; ref2 &lt;&lt; endl; <span class="hljs-comment">// 1000</span></code></pre><p><code>test2()</code>返回的是静态变量<code>a</code>的引用，<code>ref2</code>同理，和静态变量<code>a</code>指向同一块内存，因此<code>test2()</code>作为左值表示的是<code>a</code>的引用。</p><h3 id="引用的本质"><a class="markdownIt-Anchor" href="#引用的本质"></a> 引用的本质</h3><p>本质：引用的本质是一个<strong>指针常量</strong></p><p>编译器会把引用转换为指针常量</p><pre class="highlight"><code class="cpp"><span class="hljs-type">int</span> a = <span class="hljs-number">10</span>;<span class="hljs-type">int</span>&amp; ref = a;<span class="hljs-comment">// 转换为 int* const ref = &amp;a;</span>ref = <span class="hljs-number">100</span>;<span class="hljs-comment">// 转换为 *ref = 100;</span></code></pre><h3 id="常量引用"><a class="markdownIt-Anchor" href="#常量引用"></a> 常量引用</h3><p>作用：常量引用主要修饰形参，防止误操作。在函数的形参列表中，可以加<code>const</code>修饰形参<strong>防止形参改变实参</strong>。</p><pre class="highlight"><code class="cpp"><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">test1</span><span class="hljs-params">(<span class="hljs-type">int</span>&amp; val)</span></span>{    val = <span class="hljs-number">1000</span>; <span class="hljs-comment">// 误操作，修改了外部的实参</span>    cout &lt;&lt; val &lt;&lt; endl;}<span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">test2</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">int</span>&amp; val)</span></span>{    val = <span class="hljs-number">1000</span>; <span class="hljs-comment">// 代码报错</span>    cout &lt;&lt; val &lt;&lt; endl;}<span class="hljs-type">int</span> a = <span class="hljs-number">10</span>;<span class="hljs-built_in">test1</span>(a); <span class="hljs-comment">// 导致变量a被误修改</span><span class="hljs-built_in">test2</span>(a); <span class="hljs-comment">// const修饰之后使其无法修改</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深度学习中的图像操作</title>
      <link href="/2023/10/27/pytorch-ji-chu-zhi-shi/tu-xiang-du-qu/"/>
      <url>/2023/10/27/pytorch-ji-chu-zhi-shi/tu-xiang-du-qu/</url>
      
        <content type="html"><![CDATA[<h1 id="深度学习中的图像操作"><a class="markdownIt-Anchor" href="#深度学习中的图像操作"></a> 深度学习中的图像操作</h1><p>计算机视觉中图像增强是很实用的trick，下面介绍一下深度学习中常用的图像增强操作。</p><h2 id="图像读取和保存"><a class="markdownIt-Anchor" href="#图像读取和保存"></a> 图像读取和保存</h2><p>在Python中常用的图像处理的库有OpenCV和PIL，这里简单介绍一下这两个库的最基本用法。</p><h3 id="opencv"><a class="markdownIt-Anchor" href="#opencv"></a> opencv</h3><p><code>cv2.imread()</code>读取图像的代码示例如下，该方法返回得到的img数据类型是<code>np.ndarray</code>类型，使用<code>img.shape</code>可读取数组的维度，该维度的物理含义为<code>(Height, Width, Channel)</code>。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">import</span> cv2img = cv2.imread(<span class="hljs-string">&quot;xxxxx.jpg&quot;</span>)<span class="hljs-comment"># flags是可选的读入模式，如灰度图等，默认为None</span>img = cv2.imread(<span class="hljs-string">&quot;xxxxx.jpg&quot;</span>, flages=cv2.IMREAD_GRAYSCALE)     </code></pre><p><code>img = cv2.imread(&quot;xxxxx.jpg&quot;)</code>读取图像的通道顺序为BGR，即使图片是RGBA四通道，<code>cv2.imread()</code>方法仍然读取的是BGR三通道。可以通过使用<code>cv2.split(img)</code>分别得到图像img的BGR通道值。</p><pre class="highlight"><code class="python">b,g,r = cv2.split(img)</code></pre><p>如果图像路径中存在中文、或是图像文件名含有中文，有时使用<code>cv2.imread()</code>是无法正常读取图像的，因此可以使用下面的方式读取和写入。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">import</span> cv2<span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<span class="hljs-comment"># 读取图像</span>img = cv2.imdecode(np.fromfile(img_path, dtype=np.uint8), cv2.IMREAD_COLOR)<span class="hljs-comment"># 保存图像</span>cv2.imencode(<span class="hljs-string">&quot;.jpg&quot;</span>, img)[<span class="hljs-number">1</span>].tofile(img_path)</code></pre><h3 id="pil"><a class="markdownIt-Anchor" href="#pil"></a> PIL</h3><p>使用PIL读取图像的代码示例如下，<code>Image.open()</code>返回的img数据类型是<code>PIL.Image</code>对象，不是普通的数组。使用<code>img.size</code>可读取图像的维度大小，该维度的物理含义为<code>(Width, Height)</code>，注意没有通道维度的大小。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<span class="hljs-comment"># 读取图像</span>img = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;xxx.jpg&quot;</span>)img = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;xxx.jpg&quot;</span>, mode=‘r’ ) <span class="hljs-comment"># mode只能且默认是‘r’</span><span class="hljs-comment"># 保存图像</span>img.save(<span class="hljs-string">&quot;xxx.jpg&quot;</span>)</code></pre><p><code>Image.open()</code>方法只是保持了图像被读取的状态，但是图像的真实数据并未被读取，因此如果需要操作图像每个元素，如输出某个像素的RGB值等，需要执行对象的load()方法读取数据。具体如下：</p><pre class="highlight"><code class="python">img = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;xxx.jpg&quot;</span>)img = img.load()<span class="hljs-built_in">print</span>(img[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>])<span class="hljs-comment"># result：(255, 201, 166)</span></code></pre><p><code>Image.open()</code>方法返回的默认彩色图像读取通道顺序为RGB，同时当图像格式为RGBA时，<code>Image.open(‘xxx.jpg’)</code>读取的格式为RGBA（其中A表示图像的alpha通道，即RGBA共四个通道），可以使用<code>convert()</code>函数转换为RGB</p><pre class="highlight"><code class="python">Image.<span class="hljs-built_in">open</span>(x).convert(<span class="hljs-string">&#x27;RGB&#x27;</span>)</code></pre><h3 id="opencv和pil的格式转换"><a class="markdownIt-Anchor" href="#opencv和pil的格式转换"></a> opencv和PIL的格式转换</h3><p><code>np.ndarray</code>格式转换为<code>PIL.Image</code>格式</p><pre class="highlight"><code class="python">img = cv2.imread(path)img_Image = Image.fromarray(np.uint8(img))</code></pre><p><code>PIL.Image</code>格式转换为<code>np.ndarray</code>格式</p><pre class="highlight"><code class="python">img = Image.<span class="hljs-built_in">open</span>(path)img_array = np.array(img)</code></pre><h2 id="torchvision中的图像预处理"><a class="markdownIt-Anchor" href="#torchvision中的图像预处理"></a> torchvision中的图像预处理</h2><p>torchvision是一个计算机视觉工具包，包含了常用的模型、数据集和图像预处理方法：</p><ul><li><code>torchvision.transforms</code> ：常用的图像预处理方法</li><li><code>torchvision.datasets</code>：常用数据集的dataset实现，如MNIST，CIFAR-10等</li><li><code>torchvision.model</code>：常用的模型预训练，AlexNet，VGG， ResNet等</li></ul><h3 id="基本操作"><a class="markdownIt-Anchor" href="#基本操作"></a> 基本操作</h3><p>图像预处理的基本操作如下：</p><ol><li><p><code>transforms.Tensor()</code>：将PIL图像或<code>np.ndarray</code>转换为<code>torch.Tensor</code>，并进行数值缩放。首先在数据格式上形如<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo>∗</mo><mi>W</mi><mo>∗</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">H*W*C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>的PIL图像和numpy数组转换为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo>∗</mo><mi>H</mi><mo>∗</mo><mi>W</mi></mrow><annotation encoding="application/x-tex">C*H*W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span>，并将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>255</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[0,255]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">5</span><span class="mord">5</span><span class="mclose">]</span></span></span></span>的数值缩放到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[0,1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span>，最后返回<code>torch.FloatTensor</code>的张量。</p></li><li><p><code>transforms.Normalize()</code>：对图像逐通道进行标准化操作，传入的参数有<code>mean</code>、<code>std</code>，分别表示均值和方差。输入是<code>torch.Tensor</code>，不支持直接对PIL图像进行操作。</p></li><li><p><code>transforms.PILToTensor()</code>：将PIL图像（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo>∗</mo><mi>W</mi><mo>∗</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">H*W*C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>）转换为<code>torch.Tensor</code>（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo>∗</mo><mi>H</mi><mo>∗</mo><mi>W</mi></mrow><annotation encoding="application/x-tex">C*H*W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span>），该操作不会进行数值缩放。</p></li><li><p><code>transforms.ToPILImage()</code>：将<code>torch.Tensor</code>形如（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo>∗</mo><mi>H</mi><mo>∗</mo><mi>W</mi></mrow><annotation encoding="application/x-tex">C*H*W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span>）或<code>np.ndarray</code>形如（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo>∗</mo><mi>W</mi><mo>∗</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">H*W*C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>）转换为PIL图像。该方法常用作张量的可视化。</p></li></ol><h3 id="裁剪"><a class="markdownIt-Anchor" href="#裁剪"></a> 裁剪</h3><pre class="highlight"><code class="python">path = <span class="hljs-string">&quot;lena_example/lena.jpg&quot;</span>image = Image.<span class="hljs-built_in">open</span>(path)<span class="hljs-built_in">print</span>(image.size) <span class="hljs-comment"># (474, 474)</span></code></pre><p><code>transforms.CenterCrop()</code>：将PIL图像或是<code>torch.Tensor</code>进行中心裁剪。传入参数<code>size</code>是int整数或序列，表示裁剪的图像大小；如果输入数据的维度小于裁剪图像的大小，则会进行补0操作。</p><pre class="highlight"><code class="python">crop1 = transforms.CenterCrop(<span class="hljs-number">224</span>)(image)crop2 = transforms.CenterCrop((<span class="hljs-number">474</span>,<span class="hljs-number">500</span>))(image)plt.subplot(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>)plt.imshow(crop1)plt.subplot(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>)plt.imshow(crop2)crop1 = transforms.CenterCrop(<span class="hljs-number">224</span>)(image)crop2 = transforms.CenterCrop((<span class="hljs-number">474</span>,<span class="hljs-number">500</span>))(image)</code></pre><p><img src="/images/centercrop.png" alt></p><p><code>transforms.RandomCrop()</code>：将PIL图像或是<code>torch.Tensor</code>进行随机位置裁剪。传入参数<code>size</code>是int整数或序列，表示裁剪的图像大小；该方法的其余参数都是填充相关的，如下：</p><ul><li><code>padding</code>参数表示填充大小，当输入为a时表示上下左右均填充a个像素；当输入为(a, b)时，上下填充b个像素，左右填充a个像素；当输入为(a, b, c, d)时，表示左，上，右，下分别填充a, b, c, d个像素</li><li><code>pad_if_need</code>参数表示如果裁剪图像小于<code>size</code>则进行填充。</li><li><code>padding_mode</code>参数表示填充模式：“constant”、“edge”、“reflect”、“symmetric”，区别见下文<code>Pad()</code>。</li><li><code>fill</code>参数表示填充的元素（当填充模式是constant时）</li></ul><pre class="highlight"><code class="python">crop1 = transforms.RandomCrop(<span class="hljs-number">224</span>)(image)crop2 = transforms.RandomCrop((<span class="hljs-number">474</span>,<span class="hljs-number">500</span>), padding=<span class="hljs-number">50</span>)(image)crop3 = transforms.RandomCrop((<span class="hljs-number">474</span>,<span class="hljs-number">500</span>), pad_if_needed=<span class="hljs-literal">True</span>, padding_mode=<span class="hljs-string">&quot;edge&quot;</span>)(image)fig = plt.figure(figsize=(<span class="hljs-number">10</span>, <span class="hljs-number">6</span>))plt.subplot(<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>)plt.imshow(crop1) plt.title(<span class="hljs-string">&quot;random&quot;</span>)plt.subplot(<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">2</span>)plt.imshow(crop2)plt.title(<span class="hljs-string">&quot;padding&quot;</span>)plt.subplot(<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>)plt.imshow(crop3)plt.title(<span class="hljs-string">&quot;padding_mode&quot;</span>)</code></pre><p><img src="/images/randomcrop.png" alt></p><p><code>transforms.RandomResizedCrop()</code>：将PIL图像或是<code>torch.Tensor</code>进行随机大小、长宽比的裁剪，并进行指定尺寸的缩放。第一个参数<code>size</code>表示裁剪图像的大小，第二个参数<code>scale</code>表示随机裁剪的面积比例，默认值是(0.08, 1.0)；第三个参数<code>ratio</code>表示长宽比，默认值是(3/4, 4/3)，第四个参数<code>interpolation</code>表示插值算法。</p><pre class="highlight"><code class="python">crop1 = transforms.RandomResizedCrop(<span class="hljs-number">224</span>)(image)crop2 = transforms.RandomResizedCrop((<span class="hljs-number">474</span>,<span class="hljs-number">500</span>))(image)plt.subplot(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>)plt.imshow(crop1) plt.subplot(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>)plt.imshow(crop2)</code></pre><p><img src="/images/randomresizecrop.png" alt></p><p><code>transforms.FiveCrop()</code>：图像的上下左右以及中心裁剪出尺寸为size的5张图片。返回值是一个元组，包含5张图像。</p><p><code>transforms.FiveCrop()</code>：图像的上下左右以及中心裁剪出尺寸为size的5张图片，对这5张图片进行水平或者垂直镜像获得10张图片。返回值是一个元组，包含10张图像。</p><h3 id="翻转"><a class="markdownIt-Anchor" href="#翻转"></a> 翻转</h3><p><code>transforms.RandomHorizontalFlip()</code>：依概率水平（左右）翻转图片，传入参数<code>p</code>表示概率。</p><p><code>transforms.RandomVerticalFlip()</code>：依概率垂直（上下）翻转图片，传入参数<code>p</code>表示概率。</p><p><code>transforms.RandomRotation()</code>：随机旋转图片，传入参数<code>degrees</code>表示旋转角度范围，当为a时，在（-a，a）之间选择旋转角度，当为(a, b)时，在(a, b)之间选择旋转角度。</p><h3 id="图像变换"><a class="markdownIt-Anchor" href="#图像变换"></a> 图像变换</h3><p><code>transforms.Pad()</code>：对图片边缘进行填充。</p><ul><li><p>参数<code>padding</code>表示设置填充大小，当为a时，上下左右均填充a个像素，当为(a, b)时，上下填充b个像素，左右填充a个像素，当为(a, b, c, d)时，左，上，右，下分别填充a, b, c, d个像素。</p></li><li><p>参数<code>padding_mode</code>：填充模式，有4种模式</p><ul><li>constant：填充的像素值由<code>fill</code>参数设定</li><li>edge：像素值由图像边缘像素决定</li><li>reflect：镜像填充，最后一个像素不镜像，例如[1,2,3,4] → [3,2,1,2,3,4,3,2]</li><li>symmetric：镜像填充，最后一个像素也会镜像，例如[1,2,3,4] → [2,1,1,2,3,4,4,3]</li></ul></li><li><p>参数<code>fill</code>：设置填充的像素值。</p></li></ul><pre class="highlight"><code class="python">crop1 = transforms.Pad(<span class="hljs-number">100</span>)(image)crop2 = transforms.Pad(<span class="hljs-number">100</span>, padding_mode=<span class="hljs-string">&quot;edge&quot;</span>)(image)crop3 = transforms.Pad(<span class="hljs-number">100</span>, padding_mode=<span class="hljs-string">&quot;reflect&quot;</span>)(image)fig = plt.figure(figsize=(<span class="hljs-number">10</span>, <span class="hljs-number">6</span>))plt.subplot(<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>)plt.imshow(crop1) plt.title(<span class="hljs-string">&quot;pure&quot;</span>)plt.subplot(<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">2</span>)plt.imshow(crop2)plt.title(<span class="hljs-string">&quot;edge&quot;</span>)plt.subplot(<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>)plt.imshow(crop3)plt.title(<span class="hljs-string">&quot;reflect&quot;</span>)</code></pre><p><img src="/images/Pad.png" alt></p><p><code>transforms.ColorJitter()</code>：调整图像的亮度、对比度、饱和度和色相</p><ul><li><code>brightness</code>参数：亮度调整因子当为a时，从[max(0, 1-a), 1+a]中随机选择；当为(a, b)时，从[a, b]中随机选择。</li><li><code>contrast</code>参数：对比度参数，同brightness</li><li><code>saturation</code>参数：饱和度参数，同brightness</li><li><code>hue</code>参数：色相参数，当为a时，从[-a, a]中选择参数，注： 0&lt;= a &lt;= 0.5；当为(a, b)时，从[a, b]中选择参数，注：-0.5 &lt;= a &lt;= b &lt;= 0.5</li></ul><pre class="highlight"><code class="python">img1 = transforms.ColorJitter(brightness=<span class="hljs-number">0.5</span>, contrast=<span class="hljs-number">0</span>, saturation=<span class="hljs-number">0</span>, hue=<span class="hljs-number">0</span>)(image)img2 = transforms.ColorJitter(brightness=<span class="hljs-number">0</span>, contrast=<span class="hljs-number">0.5</span>, saturation=<span class="hljs-number">0</span>, hue=<span class="hljs-number">0</span>)(image)img3 = transforms.ColorJitter(brightness=<span class="hljs-number">0</span>, contrast=<span class="hljs-number">0</span>, saturation=<span class="hljs-number">0.5</span>, hue=<span class="hljs-number">0</span>)(image)img4 = transforms.ColorJitter(brightness=<span class="hljs-number">0</span>, contrast=<span class="hljs-number">0</span>, saturation=<span class="hljs-number">0</span>, hue=<span class="hljs-number">0.5</span>)(image)fig = plt.figure(figsize=(<span class="hljs-number">8</span>, <span class="hljs-number">8</span>))plt.subplot(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>)plt.imshow(img1) plt.title(<span class="hljs-string">&quot;brightness&quot;</span>)plt.subplot(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>)plt.imshow(img2)plt.title(<span class="hljs-string">&quot;contrast&quot;</span>)plt.subplot(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>)plt.imshow(img3) plt.title(<span class="hljs-string">&quot;saturation&quot;</span>)plt.subplot(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">4</span>)plt.imshow(img4)plt.title(<span class="hljs-string">&quot;hue&quot;</span>)</code></pre><p><img src="/images/color_jitter.png" alt></p><p><code>transforms.Grayscale()</code>：灰度化图像，传入参数<code>num_output_channels</code>表示输出图像的通道数，只能为1或3。</p><p><code>transforms.RandomGrayscale()</code>：随机灰度化图像，传入参数<code>num_output_channels</code>表示输出图像的通道数，只能为1或3，参数<code>p</code>表示转换为灰度图的概率。</p><p><code>transforms.RandomAffine()</code>：对图像进行仿射变换，仿射变换是二维的线性变换，由五种基本原子变换构成，分别是旋转、平移、缩放、错切和翻转。该方法有如下参数，</p><ul><li><code>degrees</code>表示图像旋转角度</li><li><code>translate</code>表示图像平移区间，如(a, b)，a设置宽，b设置高。图像在宽维度平移的区间为 -img_width * a &lt; dx &lt; img_width * a。</li><li><code>scale</code>表示图像缩放比例（以面积为单位）</li><li><code>shear</code>表示图像错切</li><li><code>fill_color</code>表示填充颜色设置</li></ul><pre class="highlight"><code class="python">img1 = transforms.RandomAffine(degrees=(-<span class="hljs-number">45</span>,<span class="hljs-number">45</span>))(image)img2 = transforms.RandomAffine(degrees=(-<span class="hljs-number">45</span>,<span class="hljs-number">45</span>), translate=(<span class="hljs-number">0.3</span>,<span class="hljs-number">0.8</span>))(image)img3 = transforms.RandomAffine(degrees=(-<span class="hljs-number">45</span>,<span class="hljs-number">45</span>),scale=(<span class="hljs-number">0.5</span>,<span class="hljs-number">1</span>))(image)img4 = transforms.RandomAffine(degrees=(-<span class="hljs-number">45</span>,<span class="hljs-number">45</span>),shear=(-<span class="hljs-number">45</span>,<span class="hljs-number">45</span>))(image)fig = plt.figure(figsize=(<span class="hljs-number">8</span>, <span class="hljs-number">8</span>))plt.subplot(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">1</span>)plt.imshow(img1) plt.title(<span class="hljs-string">&quot;rotate&quot;</span>)plt.subplot(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>)plt.imshow(img2)plt.title(<span class="hljs-string">&quot;translate&quot;</span>)plt.subplot(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>)plt.imshow(img3) plt.title(<span class="hljs-string">&quot;scale&quot;</span>)plt.subplot(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">4</span>)plt.imshow(img4)plt.title(<span class="hljs-string">&quot;shear&quot;</span>)</code></pre><p><img src="/images/randomAffine.png" alt></p><p><code>transforms.RandomErasing()</code>：对图像进行随机擦除。参数<code>p</code>表示概率值，执行随机擦除的概率；参数<code>scale</code>表示擦除区域的面积；参数<code>ratio</code>表示擦除区域的长宽比；参数<code>value</code>表示设置遮挡区域的像素值(R, G, B)或(Gray)。<strong>该操作不支持PIL图像</strong>。</p><pre class="highlight"><code class="python">image_tensor = transforms.PILToTensor()(image)img1 = transforms.RandomErasing(p=<span class="hljs-number">1.0</span>)(image_tensor)img2 = transforms.RandomErasing(p=<span class="hljs-number">1.0</span>, value=<span class="hljs-number">127</span>)(image_tensor)img3 = transforms.RandomErasing(p=<span class="hljs-number">1.0</span>, value=(<span class="hljs-number">255</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>))(image_tensor)fig = plt.figure(figsize=(<span class="hljs-number">10</span>, <span class="hljs-number">6</span>))plt.subplot(<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">1</span>)plt.imshow(transforms.ToPILImage()(img1)) plt.title(<span class="hljs-string">&quot;pure&quot;</span>)plt.subplot(<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">2</span>)plt.imshow(transforms.ToPILImage()(img2))plt.title(<span class="hljs-string">&quot;value=127&quot;</span>)plt.subplot(<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>)plt.imshow(transforms.ToPILImage()(img3))plt.title(<span class="hljs-string">&quot;rgb&quot;</span>)</code></pre><p><img src="/images/randomerase.png" alt></p><h3 id="transforms的操作"><a class="markdownIt-Anchor" href="#transforms的操作"></a> transforms的操作</h3><p><code>transforms.Compose()</code>：把一系列transforms方法集成到一起，并顺序执行transforms方法。</p><pre class="highlight"><code class="python">transforms.Compose([transforms1, transforms2, transforms3])</code></pre><p><code>transforms.RandomChoice()</code>：从一系列transforms方法中随机挑选一个。</p><pre class="highlight"><code class="python">transforms.RandomChoice([transforms1, transforms2, transforms3])</code></pre><p><code>transforms.RandomApply()</code>：依据概率执行一组transforms方法。</p><pre class="highlight"><code class="python">transforms.RandomApply([transforms1, transforms2, transforms3], p=<span class="hljs-number">0.5</span>)</code></pre><p><code>transforms.RandomOrder()</code>：将一组transforms方法的操作顺序打乱。</p><pre class="highlight"><code class="python">transforms.RandomOrder([transforms1, transforms2, transforms3])</code></pre><p><code>transforms.Lambda()</code>：用户自定义transforms方法，传入参数<code>lambda</code>是一个匿名函数。比如<code>FiveCrop()</code>返回的元组数据，和GT可能不匹配时，可以如下操作。</p><pre class="highlight"><code class="python">trans = transforms.Compose([    transforms.FiveCrop(size),    transforms.Lambda(<span class="hljs-keyword">lambda</span> crops: torch.stack([PILToTensor()(crop) <span class="hljs-keyword">for</span> crop <span class="hljs-keyword">in</span> crops]))])</code></pre><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p>上述就是深度学习中常用的图像操作，这里并没有介绍完torchvision中包含的所有图像增强方法，但是基本常用的都能涵盖，其他方法就在实践中探索吧。</p>]]></content>
      
      
      <categories>
          
          <category> Pytorch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pytorch </tag>
            
            <tag> 计算机视觉 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python的魔法方法(下)</title>
      <link href="/2023/10/16/python-zhi-shi/python-mo-fang-fang-fa-xia/"/>
      <url>/2023/10/16/python-zhi-shi/python-mo-fang-fang-fa-xia/</url>
      
        <content type="html"><![CDATA[<h1 id="python的魔法方法下"><a class="markdownIt-Anchor" href="#python的魔法方法下"></a> Python的魔法方法（下）</h1><p>本文是对B站UP主“码农高天”的《Python的魔法方法》系列视频的总结和整理，搭配视频食用本文效果更佳。</p><p>魔法方法：Python提供的让用户客制化一个类的方式，定义在类内的一些特殊方法，这些方法的名称前后会有两个下划线。</p><h2 id="与类的建立有关的方法"><a class="markdownIt-Anchor" href="#与类的建立有关的方法"></a> 与类的建立有关的方法</h2><h3 id="__-init_subclass__"><a class="markdownIt-Anchor" href="#__-init_subclass__"></a> __ init_subclass__</h3><p>这个魔法方法需要定义在基类里，当以这个类为基类，定义一个派生类的时候，这个方法就会被调用。运行下面的代码就会打印出类A。其中<code>cls</code>参数就是定义的派生类。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Base</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init_subclass__</span>(<span class="hljs-params">cls</span>):        <span class="hljs-built_in">print</span>(cls)        <span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>(<span class="hljs-title class_ inherited__">Base</span>):    <span class="hljs-keyword">pass</span><span class="hljs-comment"># 执行：</span>&lt;<span class="hljs-keyword">class</span> <span class="hljs-string">&#x27;__main__.A&#x27;</span>&gt;</code></pre><p>可以在该方法里定义一个空字典，如下所示。同时，该方法也可以传入参数。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Base</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init_subclass__</span>(<span class="hljs-params">cls, name</span>):        cls.x = {}        cls.name = name        <span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>(Base, name=<span class="hljs-string">&quot;Jack&quot;</span>):    <span class="hljs-keyword">pass</span><span class="hljs-built_in">print</span>(A.x) <span class="hljs-comment"># {}</span><span class="hljs-built_in">print</span>(A.name) <span class="hljs-comment"># Jack</span></code></pre><h3 id="__-set_name__"><a class="markdownIt-Anchor" href="#__-set_name__"></a> __ set_name__</h3><p>该方法更多是用在描述器里。当在某个类的定义内，去实例化该类的对象时，就会调用这个方法。执行下面的代码，发现owner参数是类A，即表示在哪个类内去实例化对象；而name表示实例化对象时所赋值的变量名。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">D</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__set_name__</span>(<span class="hljs-params">self, owner, name</span>):        <span class="hljs-built_in">print</span>(owner, name)<span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:    x = D()<span class="hljs-comment"># 执行：</span>&lt;<span class="hljs-keyword">class</span> <span class="hljs-string">&#x27;__main__.A&#x27;</span>&gt; x</code></pre><h3 id="__-class_getitem__-和__-mro_entries__"><a class="markdownIt-Anchor" href="#__-class_getitem__-和__-mro_entries__"></a> __ class_getitem__ 和__ mro_entries__</h3><p><code>__getitem__</code>：是当<strong>类实例化的对象</strong>使用<code>[]</code>进行取值时调用的方法。</p><p><code>__class_getitem__</code>：是当<strong>类</strong>使用<code>[]</code>进行取值时调用的方法。可以用来对type hint做增强。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__class_getitem__</span>(<span class="hljs-params">cls, item</span>):        <span class="hljs-built_in">print</span>(item)        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;abc&quot;</span><span class="hljs-built_in">print</span>(A[<span class="hljs-number">0</span>])<span class="hljs-comment"># 0</span><span class="hljs-comment"># abc</span></code></pre><p>如下的代码，在类型提示中<code>list[int]</code>表示一个由int组成的列表，可以将其赋给一个变量作为类型提示。</p><pre class="highlight"><code class="python">int_arr_type = <span class="hljs-built_in">list</span>[<span class="hljs-built_in">int</span>]list1: int_arr_type = []list2: int_arr_type = []</code></pre><p><code>__mro_entries__</code>：某个类在做继承的时候，大多数是<code>class B(A)</code>的形式，如果直接写做<code>class B(A())</code>的就会报错，报错是因为建立类B的时候寻找自己的基类出现了问题，因此<code>__mro_entries__</code>方法就是在建立类的过程中帮助寻找基类的，该方法会返回一个tuple，表示去哪里找基类。执行下面的代码则不会再报错并能运行了。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__mro_entries__</span>(<span class="hljs-params">self, bases</span>):        <span class="hljs-built_in">print</span>(base)        <span class="hljs-keyword">return</span> ()    <span class="hljs-keyword">class</span> <span class="hljs-title class_">B</span>(A()):    <span class="hljs-keyword">pass</span><span class="hljs-comment"># 执行：</span><span class="hljs-comment"># (&lt;__main__.A object at 0x7f87ab86a400&gt;,)</span></code></pre><p>从上面代码可以看到，<code>__mro_entries__</code>返回的是一个空tuple，因此在建立类B的过程中，类A的实例化对象提供不了类B的基类，如下面的代码打印结果是False。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__mro_entries__</span>(<span class="hljs-params">self, bases</span>):        <span class="hljs-built_in">print</span>(base)        <span class="hljs-keyword">return</span> ()    <span class="hljs-keyword">class</span> <span class="hljs-title class_">B</span>(A()):    <span class="hljs-keyword">pass</span><span class="hljs-built_in">print</span>(<span class="hljs-built_in">issubclass</span>(B, A)) <span class="hljs-comment"># False</span></code></pre><p>那再修改一下代码看看，说明B是A的子类，B成功找到了自己的基类。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__mro_entries__</span>(<span class="hljs-params">self, bases</span>):        <span class="hljs-built_in">print</span>(base)        <span class="hljs-keyword">return</span> (A,)    <span class="hljs-keyword">class</span> <span class="hljs-title class_">B</span>(A()):    <span class="hljs-keyword">pass</span><span class="hljs-built_in">print</span>(<span class="hljs-built_in">issubclass</span>(B, A)) <span class="hljs-comment"># True</span></code></pre><h2 id="与metaclass有关的方法"><a class="markdownIt-Anchor" href="#与metaclass有关的方法"></a> 与metaclass有关的方法</h2><p>待补充</p><h2 id="运算方法"><a class="markdownIt-Anchor" href="#运算方法"></a> 运算方法</h2><h3 id="常用的运算方法"><a class="markdownIt-Anchor" href="#常用的运算方法"></a> 常用的运算方法</h3><p>在Python中，如果直接对一个对象做数学运算，Python会报错。如下面的代码中的两个向量相加。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Vector</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, x, y</span>):        self.x = x        self.y = y    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__repr__</span>(<span class="hljs-params">self</span>):        <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;Vector(<span class="hljs-subst">{self.x}</span>, <span class="hljs-subst">{self.y}</span>)&quot;</span>    v1 = Vector(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>)v2 = Vector(<span class="hljs-number">2</span>,<span class="hljs-number">3</span>)<span class="hljs-built_in">print</span>(v1+v2) <span class="hljs-comment"># 报错</span></code></pre><p>这个时候可以在类Vector中定义<code>__add__</code>方法，帮助自定义的向量对象做加法操作。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Vector</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, x, y</span>):        self.x = x        self.y = y    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__repr__</span>(<span class="hljs-params">self</span>):        <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;Vector(<span class="hljs-subst">{self.x}</span>, <span class="hljs-subst">{self.y}</span>)&quot;</span>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__add__</span>(<span class="hljs-params">self, other</span>):        <span class="hljs-keyword">return</span> Vector(self.x + other.x, self.y + other.y)    v1 = Vector(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>)v2 = Vector(<span class="hljs-number">2</span>,<span class="hljs-number">3</span>)<span class="hljs-built_in">print</span>(v1+v2) <span class="hljs-comment"># Vector(2, 4)</span></code></pre><p>在Python中可以定义的与数值运算相关的魔法方法如下，这也是对Python中的运算符号(<code>+</code>、<code>-</code>、<code>*</code>、<code>/</code>等)进行重写：</p><p>加法<code>__add__</code>、减法<code>__sub__</code>、乘法<code>__mul__</code>、矩阵乘法<code>__matmul__</code>、除法<code>__truediv__</code>、整除<code>__floordiv__</code>、取余<code>__mod__</code>、既拿到商也拿到余数<code>__divmod__</code>、乘方<code>__pow__</code>。</p><p>左移<code>lshift</code>、右移<code>rshift</code>。</p><p>逻辑计算与<code>__and__</code>、逻辑计算异或<code>__xor__</code>、逻辑计算或<code>__or__</code>，注意这里不是对Python的关键字<code>and</code>和<code>or</code>的重写，是对符号<code>&amp;</code>和<code>|</code>的重写。</p><p>这里的魔法方法除了乘方比较特殊外，其余的魔法方法定义形式基本相同。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__xxx__</span>(<span class="hljs-params">self, other</span>):        <span class="hljs-comment"># self和other做定义的运算</span></code></pre><p>乘方的魔法方法的定义如下，相比于其他方法多了一个参数mod，该参数是指在做完乘方运算后可以再进行取余操作。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__pow__</span>(<span class="hljs-params">self, other, mod=<span class="hljs-literal">None</span></span>):        <span class="hljs-keyword">pass</span>        <span class="hljs-comment"># pow(v1, v2, mod) =&gt; (v1**v2)%mod</span></code></pre><p>这里有几个注意的地方：首先，<code>self</code>和<code>other</code>并不一定是相同的类型，比如self是一个Vector对象，而other是一个int整数。可以在这个方法里实现数乘和点乘的功能。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Vector</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__mul__</span>(<span class="hljs-params">self, other</span>):        <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(other, <span class="hljs-built_in">int</span>)            <span class="hljs-keyword">return</span> Vector(self.x * other, self.y * other)       <span class="hljs-keyword">elif</span> <span class="hljs-built_in">isinstance</span>(other, Vector):            <span class="hljs-keyword">return</span> Vector(self.x * other.x, self.y * other.y)</code></pre><p>另外，使用魔法方法只是借用这个符号，并不一定要符合原来的定义，比如在C++ 中将左移运算符重新定义为<code>cout.print</code>，因此在使用<code>&lt;&lt;</code>符号时本质是在执行打印功能。</p><p>最后看一个例子，我们在下面的代码中执行<code>print(v1*2)</code>时本质是<code>v1.__mul__(2)</code>，可以正确得到结果，那么如果是执行<code>print(2*v1)</code>则会报错，对于这种情况应该怎么办呢？</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Vector</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, x, y</span>):        self.x = x        self.y = y    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__repr__</span>(<span class="hljs-params">self</span>):        <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;Vector(<span class="hljs-subst">{self.x}</span>, <span class="hljs-subst">{self.y}</span>)&quot;</span>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">__mul__</span>(<span class="hljs-params">self, other</span>):        <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(other, <span class="hljs-built_in">int</span>)            <span class="hljs-keyword">return</span> Vector(self.x * other, self.y * other)       <span class="hljs-keyword">elif</span> <span class="hljs-built_in">isinstance</span>(other, Vector):            <span class="hljs-keyword">return</span> Vector(self.x * other.x, self.y * other.y)v1 = Vector(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>)<span class="hljs-built_in">print</span>(v1*<span class="hljs-number">2</span>) <span class="hljs-comment"># 等价于 v1.__mul__(2)</span><span class="hljs-built_in">print</span>(<span class="hljs-number">2</span>*v1) <span class="hljs-comment"># 报错</span></code></pre><p>此时，可以定义方法<code>__rmul__</code>来解决：如果操作符左侧的对象没有定义运算操作怎么完成时，就会尝试去找操作符右侧的数据对象的<strong>r版本</strong>的运算方法，也即执行<code>other*self</code>时，<code>other</code>不知道怎么做乘法时，就会调用<code>self</code>的<code>__rmul__</code>方法，然后把<code>other</code>作为参数传入，方法内部的实现与<code>__mul__</code>方法完全相同。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Vector</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, x, y</span>):        self.x = x        self.y = y    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__repr__</span>(<span class="hljs-params">self</span>):        <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;Vector(<span class="hljs-subst">{self.x}</span>, <span class="hljs-subst">{self.y}</span>)&quot;</span>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">__mul__</span>(<span class="hljs-params">self, other</span>):        <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(other, <span class="hljs-built_in">int</span>):            <span class="hljs-keyword">return</span> Vector(self.x * other, self.y * other)       <span class="hljs-keyword">elif</span> <span class="hljs-built_in">isinstance</span>(other, Vector):            <span class="hljs-keyword">return</span> Vector(self.x * other.x, self.y * other.y)    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__rmul__</span>(<span class="hljs-params">self, other</span>):        <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(other, <span class="hljs-built_in">int</span>):            <span class="hljs-keyword">return</span> Vector(self.x * other, self.y * other)       <span class="hljs-keyword">elif</span> <span class="hljs-built_in">isinstance</span>(other, Vector):            <span class="hljs-keyword">return</span> Vector(self.x * other.x, self.y * other.y)        v1 = Vector(<span class="hljs-number">0</span>,<span class="hljs-number">1</span>)<span class="hljs-built_in">print</span>(v1*<span class="hljs-number">2</span>) <span class="hljs-comment"># Vector(0, 2)</span><span class="hljs-built_in">print</span>(<span class="hljs-number">2</span>*v1) <span class="hljs-comment"># Vector(0, 2)</span></code></pre><p>这里提到的所有和数值计算有关的魔法方法，都有对应的r版本，也即在方法名前加一个字母“r”。比如加法<code>__add__</code>和<code>__radd__</code>。</p><p>除了魔法方法的<strong>r 版本</strong>外，还有一个<strong>i版本</strong>，这是指原地（in-place）进行运算操作，修改self自身：相比于上述方法，不是返回一个新的内存数据，而是修改自身的内存数据。对应的运算符号是原来的操作符后面加一个等号，比如加法，<code>v1 += v2</code>就会调用<code>__iadd__</code>方法：<code>v1.__iadd__(v2)</code>。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, x, y</span>):        self.x = x        self.y = y    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__repr__</span>(<span class="hljs-params">self</span>):        <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;Vector(<span class="hljs-subst">{self.x}</span>, <span class="hljs-subst">{self.y}</span>)&quot;</span>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">__iadd__</span>(<span class="hljs-params">self, other</span>):        <span class="hljs-comment"># v1 += v2</span>        self.x += other.x        self.y += other.y        <span class="hljs-keyword">return</span> self</code></pre><p>在所有<strong>使用运算符号</strong>的操作中，都有对应的<strong>i版本</strong>，比如<code>+=</code>、<code>-=</code>、<code>*=</code>、<code>/=</code>等操作，对应的i版本方法在方法名前加一个字母“i”。</p><h3 id="其他的一元运算"><a class="markdownIt-Anchor" href="#其他的一元运算"></a> 其他的一元运算</h3><p><code>__pos__</code>：对应的操作是在数据对象之前加一个正号</p><p><code>__neg__</code>：对应的操作是在数据对象之前加一个负号</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Vector</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, x, y</span>):        self.x = x        self.y = y    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__repr__</span>(<span class="hljs-params">self</span>):        <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;Vector(<span class="hljs-subst">{self.x}</span>, <span class="hljs-subst">{self.y}</span>)&quot;</span>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">__pos__</span>(<span class="hljs-params">self</span>):        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Pos&quot;</span>)        <span class="hljs-keyword">return</span> Vector(self.x, self.y)    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__neg__</span>(<span class="hljs-params">self</span>):        <span class="hljs-keyword">return</span> Vector(-self.x, -self.y)    v1 = Vector(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>)<span class="hljs-built_in">print</span>(+v1)<span class="hljs-comment"># Pos</span><span class="hljs-comment"># Vector(1,2)</span></code></pre><p><code>__abs__</code>：求绝对值操作，对应的运算符是<code>abs</code>，在Python中使用<code>abs(xxx)</code>会调用<code>__abs__</code>方法。</p><p><code>__invert__</code>：取反操作，对应的运算符号是<code>~</code>，一般用作位运算。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Vector</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, x, y</span>):        self.x = x        self.y = y    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__repr__</span>(<span class="hljs-params">self</span>):        <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;Vector(<span class="hljs-subst">{self.x}</span>, <span class="hljs-subst">{self.y}</span>)&quot;</span>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">__abs__</span>(<span class="hljs-params">self</span>):        <span class="hljs-keyword">return</span> Vector(<span class="hljs-built_in">abs</span>(self.x), <span class="hljs-built_in">abs</span>(self.y))    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__neg__</span>(<span class="hljs-params">self</span>):<span class="hljs-comment"># 这里自定义顺序取反</span>        <span class="hljs-keyword">return</span> Vector(self.y, self.x)</code></pre><p><code>__int__</code>：使用Python的内置函数<code>int()</code>时，调用该方法</p><p><code>__float__</code>：使用Python的内置函数<code>float()</code>时，调用该方法</p><p><code>__complex__</code>：使用Python的内置函数<code>complex()</code>时，调用该方法</p><p>这三个魔法方法规定，方法的返回值必须是它们对应的数据结构。假如想定义<code>int()</code>操作是对Vector里的x和y都进行<code>int</code>操作，如下代码定义，则执行这段代码会报错。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Vector</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, x, y</span>):        self.x = x        self.y = y    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__repr__</span>(<span class="hljs-params">self</span>):        <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;Vector(<span class="hljs-subst">{self.x}</span>, <span class="hljs-subst">{self.y}</span>)&quot;</span>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">__int__</span>(<span class="hljs-params">self</span>):        <span class="hljs-keyword">return</span> Vector(<span class="hljs-built_in">int</span>(self.x), <span class="hljs-built_in">int</span>(self.y))</code></pre><p><code>__index__</code>：表示当把数据对象当作索引使用时，它产生的行为功能是什么。</p><p>当定义了<code>__index__</code>方法，且<code>__int__</code>、<code>__complex__</code>和<code>__float__</code>没有被定义时，使用Python的内置方法<code>int()</code>、<code>float()</code>和<code>complex()</code>时会默认执行<code>__index__</code>方法。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Vector</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, x, y</span>):        self.x = x        self.y = y    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__repr__</span>(<span class="hljs-params">self</span>):        <span class="hljs-keyword">return</span> <span class="hljs-string">f&quot;Vector(<span class="hljs-subst">{self.x}</span>, <span class="hljs-subst">{self.y}</span>)&quot;</span>        <span class="hljs-keyword">def</span> <span class="hljs-title function_">__index__</span>(<span class="hljs-params">self</span>):        <span class="hljs-keyword">return</span> <span class="hljs-built_in">int</span>(self.x)    v = Vector(<span class="hljs-number">1.5</span>, <span class="hljs-number">2.5</span>)lst = [<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>]<span class="hljs-built_in">print</span>(lst[v]) <span class="hljs-comment"># 1</span></code></pre><h3 id="取整操作"><a class="markdownIt-Anchor" href="#取整操作"></a> 取整操作</h3><p><code>__round__</code>：对应Python的内置函数<code>round</code>，四舍五入，取最近的整数</p><p><code>__trunc__</code>：math库内的<code>trunc</code>函数，小数点后面不要，即向0取整</p><p><code>__floor__</code>：math库内的<code>floor</code>函数，向下取整，即向负无穷取整</p><p><code>__ceil__</code>：math库内的<code>ceil</code>函数，向上取整，即向正无穷取整</p><h2 id="模拟行为的方法"><a class="markdownIt-Anchor" href="#模拟行为的方法"></a> 模拟行为的方法</h2><h3 id="__-call__"><a class="markdownIt-Anchor" href="#__-call__"></a> __ call__</h3><p><code>__call__</code>：该方法可以以函数调用的形式使用对象。</p><p>如下面代码所示，定义了一个乘法器，乘法倍数是3，该类实例化得到对象o。因为定义了<code>__call__</code>方法，则对象o可以以函数形式被使用。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Multiplier</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, mul</span>):        self.mul = mul    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__call__</span>(<span class="hljs-params">self, arg</span>):        <span class="hljs-keyword">return</span> self.mul*arg    o = Multiplier(<span class="hljs-number">3</span>)<span class="hljs-built_in">print</span>(o(<span class="hljs-number">4</span>)) <span class="hljs-comment"># 12</span></code></pre><h3 id="__-len__"><a class="markdownIt-Anchor" href="#__-len__"></a> __ len__</h3><p><code>__len__</code>：描述该对象（容器）的长度。</p><p>如下代码所示，自定义一个列表容器，这里使用Python内置的list的<code>__len__</code>实现，返回<code>self.data</code>的长度。<code>__len__</code>会被Python内置方法<code>len()</code>调用</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyList</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, data</span>):        self.data = data    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__len__</span>(<span class="hljs-params">self</span>):        <span class="hljs-keyword">return</span> <span class="hljs-built_in">len</span>(self.data)    x = MyList([<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>])<span class="hljs-built_in">print</span>(<span class="hljs-built_in">len</span>(x)) <span class="hljs-comment"># 3</span></code></pre><p>如果自定义的类内没有定义<code>__bool__</code>方法，而且又把该类的对象当作条件去做判断时，该对象就会尝试调用<code>__len__</code>方法，在<code>__len__</code>被定义的情况下，如果返回长度为0则认为False，否则认为True。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyList</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, data</span>):        self.data = data    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__len__</span>(<span class="hljs-params">self</span>):        <span class="hljs-keyword">return</span> <span class="hljs-built_in">len</span>(self.data)    x = MyList([<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>])<span class="hljs-keyword">if</span> x:    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Hello&quot;</span>)<span class="hljs-comment"># Hello</span></code></pre><p>该特性和所有Python内置的容器是一样的。比如下面的代码：</p><pre class="highlight"><code class="python">x = <span class="hljs-built_in">list</span>()d = <span class="hljs-built_in">dict</span>()<span class="hljs-keyword">if</span> x <span class="hljs-keyword">and</span> d:    ......</code></pre><h3 id="__-getitem__-__-setitem-__-和-__-delitem__"><a class="markdownIt-Anchor" href="#__-getitem__-__-setitem-__-和-__-delitem__"></a> __ getitem__ 、 __ setitem __ 和 __ delitem__</h3><p>这三个方法都是在描述对象使用<code>[]</code>时具体的行为功能。</p><p><code>__getitem__</code>：对象使用<code>[]</code>去读取数据时会调用该方法。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyList</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, data</span>):        self.data = data    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__getitem__</span>(<span class="hljs-params">self, index</span>):        <span class="hljs-keyword">return</span> self.data[index]    x = MyList([<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>])<span class="hljs-built_in">print</span>(x[<span class="hljs-number">1</span>]) <span class="hljs-comment"># 2</span></code></pre><p><code>__setitem__</code>：对象使用<code>[]</code>去赋值数据时会调用该方法。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyList</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, data</span>):        self.data = data    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__getitem__</span>(<span class="hljs-params">self, index</span>):        <span class="hljs-keyword">return</span> self.data[index]            <span class="hljs-keyword">def</span> <span class="hljs-title function_">__setitem__</span>(<span class="hljs-params">self, index, value</span>):        self.data[index] = value    x = MyList([<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>])x[<span class="hljs-number">1</span>] = <span class="hljs-number">10</span><span class="hljs-built_in">print</span>(x[<span class="hljs-number">1</span>]) <span class="hljs-comment"># 10</span></code></pre><p><code>__delitem__</code>：对象使用<code>[]</code>去删除数据时会调用该方法：即被关键字<code>del</code>触发。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyList</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, data</span>):        self.data = data    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__getitem__</span>(<span class="hljs-params">self, index</span>):        <span class="hljs-keyword">return</span> self.data[index]            <span class="hljs-keyword">def</span> <span class="hljs-title function_">__delitem__</span>(<span class="hljs-params">self, index</span>):        self.data = self.data[<span class="hljs-number">0</span>:index] + self.data[index+<span class="hljs-number">1</span>:]    x = MyList([<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>])<span class="hljs-built_in">print</span>(x[<span class="hljs-number">1</span>]) <span class="hljs-comment"># 2</span><span class="hljs-keyword">del</span> x[<span class="hljs-number">1</span>]<span class="hljs-built_in">print</span>(x[<span class="hljs-number">1</span>]) <span class="hljs-comment"># 3</span></code></pre><h3 id="__-reversed__"><a class="markdownIt-Anchor" href="#__-reversed__"></a> __ reversed__</h3><p><code>__reversed__</code>：将对象（容器）里的数据翻转，会被Python内置的<code>reversed()</code>函数调用。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyList</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, data</span>):        self.data = data    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__reversed__</span>(<span class="hljs-params">self</span>):        <span class="hljs-keyword">return</span> MyList(self.data[::-<span class="hljs-number">1</span>])    x = MyList([<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>])<span class="hljs-built_in">print</span>(<span class="hljs-built_in">reversed</span>(x).data)<span class="hljs-comment"># [3,2,1]</span></code></pre><h3 id="__-contains__"><a class="markdownIt-Anchor" href="#__-contains__"></a> __ contains__</h3><p><code>__contains__</code>：描述对象在使用<code>in</code>操作时的功能行为，即对象在使用<code>in</code>会调用该方法。</p><p>如下代码所示，自定义一个列表容器，这里使用Python内置的list的<code>__contains__</code>实现：<code>item in self.data</code>。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyList</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, data</span>):        self.data = data    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__contains__</span>(<span class="hljs-params">self, item</span>):        <span class="hljs-keyword">return</span> item <span class="hljs-keyword">in</span> self.data   x = MyList([<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>])<span class="hljs-built_in">print</span>(<span class="hljs-number">2</span> <span class="hljs-keyword">in</span> x) <span class="hljs-comment"># True</span><span class="hljs-built_in">print</span>(<span class="hljs-number">5</span> <span class="hljs-keyword">in</span> x) <span class="hljs-comment"># False</span></code></pre><h3 id="__-iter__"><a class="markdownIt-Anchor" href="#__-iter__"></a> __ iter__</h3><p><code>__iter__</code>：返回该对象（容器）的一个迭代器，会被Python内置的<code>iter()</code>函数调用。</p><p>如下代码所示，自定义一个列表容器，这里使用Python内置的list的<code>__iter__</code>实现：<code>iter(self.data)</code>。注意：在使用for循环时，Python会隐性调用<code>iter()</code>函数，所以<code>for i in x</code>其实是<code>for i in iter(x)</code>。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyList</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, data</span>):        self.data = data    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__iter__</span>(<span class="hljs-params">self</span>):        <span class="hljs-keyword">return</span> <span class="hljs-built_in">iter</span>(self.data)  x = MyList([<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>])<span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> x:    <span class="hljs-built_in">print</span>(i)</code></pre><h3 id="上下文__-enter__-和__-exit__"><a class="markdownIt-Anchor" href="#上下文__-enter__-和__-exit__"></a> 上下文__ enter__ 和__ exit__</h3><p>平时的代码<code>with open(xxxx) as f</code>中，<code>with</code>后面的部分就是上下文，要想定义一个上下文，需要定义两个魔法方法：<code>__enter__</code>和<code>__exit__</code>。</p><p><code>__enter__</code>：与大于运算<code>__gt__</code>方法类似，greater than  or equal to</p><p><code>__exit__</code>：与小于运算<code>__lt__</code>方法类似，less than  or equal to</p><p>如下的代码，自定义一个计时器，执行代码<code>with Timer():</code>，这时会显示花费的时间。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">import</span> time<span class="hljs-keyword">class</span> <span class="hljs-title class_">Timer</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__enter__</span>(<span class="hljs-params">self</span>):        self.start = time.time()    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__exit__</span>(<span class="hljs-params">self, exc_type, exc_value, traceback</span>):        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Time: <span class="hljs-subst">{time.time() - self.start}</span>&quot;</span>)<span class="hljs-keyword">with</span> Timer():    x = <span class="hljs-number">1000</span>*<span class="hljs-number">10</span><span class="hljs-comment"># 执行</span><span class="hljs-comment"># Time: 1.4342545363673e-06</span><span class="hljs-keyword">with</span> Timer() <span class="hljs-keyword">as</span> t:    x = <span class="hljs-number">1000</span>*<span class="hljs-number">10</span></code></pre><p>一般的代码是<code>with open() as f</code>，如同下面的代码，执行代码<code>with Timer() as t:</code>，这个<code>as t</code>就是将<code>__enter__</code>的返回值保存在t里，一般常见的操作是将对象本身<code>self</code>返回。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Timer</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__enter__</span>(<span class="hljs-params">self</span>):        self.start = time.time()        <span class="hljs-keyword">return</span> self    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__exit__</span>(<span class="hljs-params">self, exc_type, exc_value, traceback</span>):        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Time: <span class="hljs-subst">{time.time() - self.start}</span>&quot;</span>)<span class="hljs-keyword">with</span> Timer() <span class="hljs-keyword">as</span> t:    <span class="hljs-built_in">print</span>(t.start)    x = <span class="hljs-number">1000</span>*<span class="hljs-number">10</span><span class="hljs-comment"># 执行</span><span class="hljs-comment"># 1231423426.45353</span><span class="hljs-comment"># Time: 1.4342545363673e-05</span></code></pre><p><code>__exit__</code>方法里的几个参数，都是和异常相关的，比如下面的代码，值的注意的是，程序依然得出了花费的时间。即即使代码抛出了异常，<code>__exit__</code>方法内的代码依然被执行了，比如在文件操作中，常常使用<code>with open() as f</code>的代码，而不是<code>f = open()</code>，就可以防止忘记关闭文件，同时就算程序报错，也可以成功把文件关闭</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Timer</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__enter__</span>(<span class="hljs-params">self</span>):        self.start = time.time()        <span class="hljs-keyword">return</span> self    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__exit__</span>(<span class="hljs-params">self, exc_type, exc_value, traceback</span>):        <span class="hljs-built_in">print</span>(exc_type, exc_value, traceback)        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Time: <span class="hljs-subst">{time.time() - self.start}</span>&quot;</span>)<span class="hljs-keyword">with</span> Timer() <span class="hljs-keyword">as</span> t:    x = <span class="hljs-number">1000</span> / <span class="hljs-number">0</span><span class="hljs-comment"># 执行</span><span class="hljs-comment"># &lt;class &#x27;ZeroDivisionError&#x27;&gt; division by zero &lt;traceback object at 0x7f6961387800&gt;</span><span class="hljs-comment"># Time:6.103745625e-05</span><span class="hljs-comment"># Traceback (most recent call last):</span><span class="hljs-comment">#   File &quot;&lt;stdin&gt;&quot;, line 2, in &lt;module&gt;</span><span class="hljs-comment"># ZeroDivisionError: division by zero</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础知识 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python的魔法方法(上)</title>
      <link href="/2023/10/15/python-zhi-shi/python-mo-fang-fang-fa-shang/"/>
      <url>/2023/10/15/python-zhi-shi/python-mo-fang-fang-fa-shang/</url>
      
        <content type="html"><![CDATA[<h1 id="python的魔法方法上"><a class="markdownIt-Anchor" href="#python的魔法方法上"></a> Python的魔法方法（上）</h1><p>本文是对B站UP主“码农高天”的《Python的魔法方法》系列视频的总结和整理，搭配视频食用本文效果更佳。</p><p>魔法方法：Python提供的让用户客制化一个类的方式，定义在类内的一些特殊方法，这些方法的名称前后会有两个下划线。</p><h2 id="基础方法"><a class="markdownIt-Anchor" href="#基础方法"></a> 基础方法</h2><h3 id="__-init__-和__-new__"><a class="markdownIt-Anchor" href="#__-init__-和__-new__"></a> __ init__ 和__ new__</h3><p>这两个魔法方法能够<strong>改变一个类实例化对象时的行为</strong>。</p><p><code>__new__</code>：是描述从一个class建立一个object的过程</p><p><code>__init__</code>：是描述当存在一个object后，对其进行初始化的过程</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__new__</span>(<span class="hljs-params">cls, x</span>):        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;__new__&quot;</span>)        <span class="hljs-keyword">return</span> <span class="hljs-built_in">super</span>().__new__(cls)        <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, x</span>):        self.x = x        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;__init__&quot;</span>)        o = A(xxx)<span class="hljs-comment"># 等价于</span><span class="hljs-comment"># 1. obj = __new__(A, xxx)</span><span class="hljs-comment"># 2. __init__(obj, xxx)</span></code></pre><p>如果在建立object的过程中传入了若干参数，则这些参数既会被传入到<code>__new__</code>中，也会被传入到<code>__ini__</code>中。<code>__new__</code>因为是建立object，所以是有返回值的。</p><h3 id="__-del__"><a class="markdownIt-Anchor" href="#__-del__"></a> __ del__</h3><p><code>__del__</code>可以粗略的认为是一个析构函数，是描述一个object被释放的过程。但是由于Python的对象释放过程较为复杂，因此该方法不可控。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__del__</span>(<span class="hljs-params">self</span>):        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;__del__&quot;</span>)o = A()</code></pre><p><strong>注意</strong>：这里的<code>__del__</code>和关键字<code>del</code>没有关系，<code>del o</code>并不一定会触发<code>__del__</code>方法，只是让对象的引用-1。</p><h3 id="__-repr__-__-str__-和__-format__"><a class="markdownIt-Anchor" href="#__-repr__-__-str__-和__-format__"></a> __ repr__ , __ str__ 和__ format__</h3><p><code>__repr__</code>和<code>__str__</code>这两个方法的功能是相似的，都是返回一个object的字符串表示，这两个方法主要是语义的不同。</p><p><code>__repr</code>：representation，一般要有更详细的信息，可以通过<code>repr()</code>内置函数调用该方法。</p><p><code>__str__</code>：注重可读性，可以通过<code>str()</code>内置函数调用该方法，<code>print</code>内部就是使用了<code>str()</code>方法。</p><p><code>__format__</code>：使用某种格式打印object时，会调用该方法。</p><pre class="highlight"><code class="python"><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;{}&quot;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-number">15</span>)) <span class="hljs-comment"># 10进制</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;{:b}&quot;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-number">15</span>)) <span class="hljs-comment"># 2进制</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;{:x}&quot;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-number">15</span>)) <span class="hljs-comment"># 16进制</span><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">{<span class="hljs-number">15</span>}</span>&quot;</span>) <span class="hljs-comment"># 10进制</span><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">{<span class="hljs-number">15</span>:b}</span>&quot;</span>) <span class="hljs-comment"># 2进制</span><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">{<span class="hljs-number">15</span>:x}</span>&quot;</span>) <span class="hljs-comment"># 16进制</span></code></pre><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__format__</span>(<span class="hljs-params">self, spec</span>):        <span class="hljs-keyword">if</span> spec == <span class="hljs-string">&quot;x&quot;</span>:            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;0xA&quot;</span>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;&lt;A&gt;&quot;</span><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">{A()}</span>&quot;</span>) <span class="hljs-comment"># &lt;A&gt;</span><span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;<span class="hljs-subst">{A():x}</span>&quot;</span>) <span class="hljs-comment"># 0xA</span></code></pre><h3 id="__-bytes__"><a class="markdownIt-Anchor" href="#__-bytes__"></a> __ bytes__</h3><p><code>__bytes__</code>：通过class去建立bytes时的行为，客制化object的bytes表示。通过内置方法<code>bytes()</code>调用该魔法方法。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__bytes__</span>(<span class="hljs-params">self</span>):        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;__bytes__&quot;</span>)        <span class="hljs-keyword">return</span> <span class="hljs-built_in">bytes</span>([<span class="hljs-number">0</span>,<span class="hljs-number">1</span>])    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">bytes</span>(A())) <span class="hljs-comment"># b&#x27;\x00\x01&#x27;</span></code></pre><h2 id="比较方法"><a class="markdownIt-Anchor" href="#比较方法"></a> 比较方法</h2><h3 id="等于-__-eq__-和不等于__-ne__"><a class="markdownIt-Anchor" href="#等于-__-eq__-和不等于__-ne__"></a> 等于 __ eq__ 和不等于__ ne__</h3><p><code>__eq__</code>：描述两个object进行比较时的过程，判断两个object是否相等。</p><p><code>__ne__</code>：描述两个object进行比较时的过程，判断两个object是否不相等。</p><p>上述两个方法，等于和不等于，是有默认实现的，如果没有自定义的等于和不等于，会使用<code>is</code>进行比较。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Date</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, year, month, day</span>):        self.year = year        self.month = month        self.day = day    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__eq__</span>(<span class="hljs-params">self, other</span>):        <span class="hljs-keyword">return</span> (self.year == other.year <span class="hljs-keyword">and</span> self.month == other.month                 <span class="hljs-keyword">and</span> self.day = other.day)x = Date(<span class="hljs-number">2023</span>, <span class="hljs-number">2</span>, <span class="hljs-number">24</span>)y = Date(<span class="hljs-number">2023</span>, <span class="hljs-number">2</span>, <span class="hljs-number">24</span>)<span class="hljs-built_in">print</span>(x == y) <span class="hljs-comment"># True</span>z = Date(<span class="hljs-number">2023</span>, <span class="hljs-number">5</span>, <span class="hljs-number">14</span>)<span class="hljs-built_in">print</span>(x != z) <span class="hljs-comment"># True</span></code></pre><p><strong>注意</strong>：当没有定义不等于的方法时，使用不等于运算符Python会对<code>__eq__</code>等于方法进行取反，所以通常情况下定义<code>__eq__</code>方法足够处理等于和不等于的运算了。当然也可以定义不等于的魔法方法<code>__ne__</code>。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Date</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, year, month, day</span>):        self.year = year        self.month = month        self.day = day    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__eq__</span>(<span class="hljs-params">self, other</span>):        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;__eq__&quot;</span>)        <span class="hljs-keyword">return</span> (self.year == other.year <span class="hljs-keyword">and</span> self.month == other.month                 <span class="hljs-keyword">and</span> self.day == other.day)        <span class="hljs-keyword">def</span> <span class="hljs-title function_">__ne__</span>(<span class="hljs-params">self, other</span>):        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;__ne__&quot;</span>)        <span class="hljs-keyword">return</span> (self.year != other.year <span class="hljs-keyword">and</span> self.month != other.month                 <span class="hljs-keyword">and</span> self.day != other.day)    x = Date(<span class="hljs-number">2023</span>, <span class="hljs-number">2</span>, <span class="hljs-number">24</span>)y = Date(<span class="hljs-number">2023</span>, <span class="hljs-number">2</span>, <span class="hljs-number">24</span>)<span class="hljs-built_in">print</span>(x == y) <span class="hljs-comment"># __eq__</span><span class="hljs-comment"># True</span>z = Date(<span class="hljs-number">2023</span>, <span class="hljs-number">5</span>, <span class="hljs-number">14</span>)<span class="hljs-built_in">print</span>(x != z) <span class="hljs-comment"># __ne__</span><span class="hljs-comment"># True</span></code></pre><h3 id="大于-__-gt__-和小于__-lt__"><a class="markdownIt-Anchor" href="#大于-__-gt__-和小于__-lt__"></a> 大于 __ gt__ 和小于__ lt__</h3><p><code>__gt__</code>：描述两个object进行比较时的过程，判断一个object是否大于另一个object。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Date</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, year, month, day</span>):        self.year = year        self.month = month        self.day = day    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__gt__</span>(<span class="hljs-params">self, other</span>):        <span class="hljs-keyword">if</span> self.year &gt; other.year:            <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span>       <span class="hljs-keyword">if</span> self.year == other.year:            <span class="hljs-keyword">if</span> self.month &gt; other.month:                <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span>            <span class="hljs-keyword">if</span> self.month == other.month:                <span class="hljs-keyword">return</span> self.day &gt; other.day            x = Date(<span class="hljs-number">2023</span>, <span class="hljs-number">2</span>, <span class="hljs-number">22</span>)y = Date(<span class="hljs-number">2023</span>, <span class="hljs-number">2</span>, <span class="hljs-number">24</span>)<span class="hljs-built_in">print</span>(x &gt; y) <span class="hljs-comment"># False</span><span class="hljs-built_in">print</span>(x &lt; y) <span class="hljs-comment"># True</span></code></pre><p>当调用<code>&gt;</code>大于运算符时，即 <code>x &gt; y</code> 可以看作是<code>x.__gt__(y)</code>的运算。<br><strong>注意</strong>：当没有实现小于运算却调用<code>&lt;</code>小于运算符时，也可以正常返回结果，是因为<code>x &lt; y</code>就对应<code>y &gt; x</code>，所以可以认为进行了<code>y.__gt__(x)</code>的运算。</p><p><code>__lt__</code>：描述两个object进行比较时的过程，判断一个object是否小于另一个object。当一个类里同时实现了<code>__gt__</code>和<code>__lt__</code>时，使用<code>&lt;</code>运算符会优先调用<code>__lt__</code>。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Date</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, year, month, day</span>):        self.year = year        self.month = month        self.day = day    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__gt__</span>(<span class="hljs-params">self, other</span>):        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;__gt__&quot;</span>)        <span class="hljs-keyword">if</span> self.year &gt; other.year:            <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span>       <span class="hljs-keyword">if</span> self.year == other.year:            <span class="hljs-keyword">if</span> self.month &gt; other.month:                <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span>            <span class="hljs-keyword">if</span> self.month == other.month:                <span class="hljs-keyword">return</span> self.day &gt; other.day    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__lt__</span>(<span class="hljs-params">self, other</span>):        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;__lt__&quot;</span>)        <span class="hljs-keyword">if</span> self.year &lt; other.year:            <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span>       <span class="hljs-keyword">if</span> self.year == other.year:            <span class="hljs-keyword">if</span> self.month &lt; other.month:                <span class="hljs-keyword">return</span> <span class="hljs-literal">True</span>            <span class="hljs-keyword">if</span> self.month == other.month:                <span class="hljs-keyword">return</span> self.day &lt; other.day  x = Date(<span class="hljs-number">2023</span>, <span class="hljs-number">2</span>, <span class="hljs-number">22</span>)y = Date(<span class="hljs-number">2023</span>, <span class="hljs-number">2</span>, <span class="hljs-number">24</span>)<span class="hljs-built_in">print</span>(x &lt; y) <span class="hljs-comment"># __lt__</span><span class="hljs-comment"># True</span></code></pre><p>因为<code>x &lt; y</code>就对应<code>y &gt; x</code>，<code>x &lt; y</code>既可以通过<code>x.__lt__(y)</code>，也可以通过<code>y.__gt__(x)</code>，那么使用<code>&gt;</code>或<code>&lt;</code>到底调用哪个魔法方法呢？</p><p>调用原则：</p><ul><li>当x和y是同一个类的不同object，则优先使用运算符左侧的比较方法，当左侧object没有定义时，才会去使用右侧object的比较方法（不限于大于小于，还有等于不等于）。</li><li>如果y是x的类的子类object，则优先使用y的<strong>比较方法</strong>（不限于大于小于，还有等于不等于）。</li></ul><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">NewDate</span>(<span class="hljs-title class_ inherited__">Date</span>):    <span class="hljs-keyword">pass</span>x = Date(<span class="hljs-number">2023</span>, <span class="hljs-number">2</span>, <span class="hljs-number">22</span>)y = NewDate(<span class="hljs-number">2023</span>, <span class="hljs-number">2</span>, <span class="hljs-number">24</span>)<span class="hljs-built_in">print</span>(x &lt; y)<span class="hljs-comment"># __gt__</span><span class="hljs-comment"># True</span></code></pre><h3 id="大于等于-__-ge__-和小于等于__-le__"><a class="markdownIt-Anchor" href="#大于等于-__-ge__-和小于等于__-le__"></a> 大于等于 __ ge__ 和小于等于__ le__</h3><p><code>__ge__</code>：与大于运算<code>__gt__</code>方法类似，greater than  or equal to</p><p><code>__le__</code>：与小于运算<code>__lt__</code>方法类似，less than  or equal to</p><h3 id="__-hash__"><a class="markdownIt-Anchor" href="#__-hash__"></a> __ hash__</h3><p><code>__hash__</code>：求某个数据结构（自定义）的哈希值，一个自定义的数据结构，是有其默认的hash算法的，使用<code>hash()</code>可以直接拿到其哈希值。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Date</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, year, month, day</span>):        self.year = year        self.month = month        self.day = day        x = Date(<span class="hljs-number">2023</span>, <span class="hljs-number">2</span>,<span class="hljs-number">22</span>)<span class="hljs-built_in">print</span>(<span class="hljs-built_in">hash</span>(x)) <span class="hljs-comment"># 8771107107837</span></code></pre><p>如果要自定义hash算法，则一般也要定义<code>__eq__</code>方法，定义<code>__hash__</code>的要求如下：</p><ol><li>返回值必须是整数</li><li>对于两个相等的object，其哈希值必须相同</li></ol><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Date</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, year, month, day</span>):        self.year = year        self.month = month        self.day = day    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__eq__</span>(<span class="hljs-params">self, other</span>):        <span class="hljs-keyword">return</span> (self.year == other.year <span class="hljs-keyword">and</span> self.month == other.month         <span class="hljs-keyword">and</span> self.day == other.day)    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__hash</span>(<span class="hljs-params">self</span>):        <span class="hljs-keyword">return</span> <span class="hljs-number">2</span></code></pre><h3 id="__-bool___"><a class="markdownIt-Anchor" href="#__-bool___"></a> __ bool___</h3><p><code>__bool__</code>：描述object在条件判断语句中的行为。所有的object出现在条件判断语句中时，都会被判定为True，如果想要改变条件判断的结果，可以使用该方法。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Date</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, year, month, day</span>):        self.year = year        self.month = month        self.day = daya = Date(<span class="hljs-number">2023</span>,<span class="hljs-number">2</span>,<span class="hljs-number">23</span>)<span class="hljs-keyword">if</span> a:    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hello&quot;</span>)<span class="hljs-comment"># hello</span><span class="hljs-keyword">class</span> <span class="hljs-title class_">Date</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, year, month, day</span>):        self.year = year        self.month = month        self.day = day    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__bool__</span>(<span class="hljs-params">self</span>):        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;__bool__&quot;</span>)        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span>a = Date(<span class="hljs-number">2023</span>,<span class="hljs-number">2</span>,<span class="hljs-number">23</span>)<span class="hljs-built_in">print</span>(<span class="hljs-built_in">bool</span>(a)) <span class="hljs-comment"># 当把object转变为bool时也会调用该方法</span><span class="hljs-keyword">if</span> a:    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;hello&quot;</span>)<span class="hljs-comment"># __bool__</span><span class="hljs-comment"># False</span><span class="hljs-comment"># __bool__</span></code></pre><h2 id="对象属性相关的方法"><a class="markdownIt-Anchor" href="#对象属性相关的方法"></a> 对象属性相关的方法</h2><h3 id="__-getattr__-和-__-getattribute__"><a class="markdownIt-Anchor" href="#__-getattr__-和-__-getattribute__"></a> __ getattr__ 和 __ getattribute__</h3><p><code>__getattr__</code>：尝试访问object的属性时，描述该属性不存在时object的行为。默认情况下如果访问一个object里不存在的属性时，会抛出<code>AttributeError</code>。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):        self.exist = <span class="hljs-string">&quot;abc&quot;</span>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__getattr__</span>(<span class="hljs-params">self, name</span>):        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;getting <span class="hljs-subst">{name}</span>&quot;</span>)o = A()<span class="hljs-built_in">print</span>(o.exist) <span class="hljs-comment"># abc</span><span class="hljs-built_in">print</span>(o.test) <span class="hljs-comment"># getting test</span></code></pre><p><strong>注意</strong>：访问的该属性，会以字符串的形式传入到<code>__getattr__</code>里。只有在读取一个不存在的属性时才会调用该魔法方法。</p><p><code>__getattribute__</code>：尝试访问object的属性时，不论该属性是否存在，都会调用该方法。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):        self.exist = <span class="hljs-string">&quot;abc&quot;</span>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__getattribute__</span>(<span class="hljs-params">self, name</span>):        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;getting <span class="hljs-subst">{name}</span>&quot;</span>)        <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span>o = A()<span class="hljs-built_in">print</span>(o.exist) <span class="hljs-comment"># getting exist</span><span class="hljs-comment"># None</span><span class="hljs-built_in">print</span>(o.test) <span class="hljs-comment"># getting test</span><span class="hljs-comment"># None</span></code></pre><h3 id="__-setattr__-和-__-delattr__"><a class="markdownIt-Anchor" href="#__-setattr__-和-__-delattr__"></a> __ setattr__ 和 __ delattr__</h3><p><code>__setattr__</code>：尝试写入object的属性时，描述该过程中object的行为。该方法有两个参数：一是属性名，二是属性值。一般情况下调用<code>super().__setattr__()</code>执行该方法的默认行为。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):        self.data = <span class="hljs-string">&quot;abc&quot;</span>        self.counter = <span class="hljs-number">0</span>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__setatter__</span>(<span class="hljs-params">self, name, val</span>):        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;set<span class="hljs-subst">{name}</span>&quot;</span>)        <span class="hljs-built_in">super</span>().__setattr__(name, val)o = A()<span class="hljs-built_in">print</span>(o.data)<span class="hljs-comment"># set data</span><span class="hljs-comment"># set counter</span><span class="hljs-comment"># abc</span></code></pre><p><code>__delattr__</code>：与<code>__del__</code>不同，在一个object正常产生和消亡的过程中，不会调用<code>__delattr__</code>方法，而在尝试删除一个object的属性时才会调用。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):        self.data = <span class="hljs-string">&quot;abc&quot;</span>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__delatter__</span>(<span class="hljs-params">self, name</span>):        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;del<span class="hljs-subst">{name}</span>&quot;</span>)        <span class="hljs-built_in">super</span>().__<span class="hljs-built_in">delattr</span>(name)        o = A()<span class="hljs-keyword">del</span> o.data <span class="hljs-comment"># del data</span></code></pre><h3 id="__-dir__"><a class="markdownIt-Anchor" href="#__-dir__"></a> __ dir__</h3><p><code>__dir__</code>：列出object的所有属性名和方法名，Python规定该方法必须返回一个sequence（如列表list）。通过内置函数<code>dir()</code>调用该魔法方法。</p><pre class="highlight"><code class="python">&gt;&gt;&gt;<span class="hljs-built_in">dir</span>()   <span class="hljs-comment">#  获得当前模块的属性列表</span>[<span class="hljs-string">&#x27;__builtins__&#x27;</span>, <span class="hljs-string">&#x27;__doc__&#x27;</span>, <span class="hljs-string">&#x27;__name__&#x27;</span>, <span class="hljs-string">&#x27;__package__&#x27;</span>, <span class="hljs-string">&#x27;arr&#x27;</span>, <span class="hljs-string">&#x27;myslice&#x27;</span>]a = <span class="hljs-built_in">list</span>()<span class="hljs-built_in">print</span>(<span class="hljs-built_in">dir</span>(a))    <span class="hljs-comment"># 查看列表的方法</span>[<span class="hljs-string">&#x27;__add__&#x27;</span>, <span class="hljs-string">&#x27;__class__&#x27;</span>, <span class="hljs-string">&#x27;__contains__&#x27;</span>, <span class="hljs-string">&#x27;__delattr__&#x27;</span>, <span class="hljs-string">&#x27;__delitem__&#x27;</span>, <span class="hljs-string">&#x27;__delslice__&#x27;</span>, <span class="hljs-string">&#x27;__doc__&#x27;</span>, <span class="hljs-string">&#x27;__eq__&#x27;</span>, <span class="hljs-string">&#x27;__format__&#x27;</span>, <span class="hljs-string">&#x27;__ge__&#x27;</span>, <span class="hljs-string">&#x27;__getattribute__&#x27;</span>, <span class="hljs-string">&#x27;__getitem__&#x27;</span>, <span class="hljs-string">&#x27;__getslice__&#x27;</span>, <span class="hljs-string">&#x27;__gt__&#x27;</span>, <span class="hljs-string">&#x27;__hash__&#x27;</span>, <span class="hljs-string">&#x27;__iadd__&#x27;</span>, <span class="hljs-string">&#x27;__imul__&#x27;</span>, <span class="hljs-string">&#x27;__init__&#x27;</span>, <span class="hljs-string">&#x27;__iter__&#x27;</span>, <span class="hljs-string">&#x27;__le__&#x27;</span>, <span class="hljs-string">&#x27;__len__&#x27;</span>, <span class="hljs-string">&#x27;__lt__&#x27;</span>, <span class="hljs-string">&#x27;__mul__&#x27;</span>, <span class="hljs-string">&#x27;__ne__&#x27;</span>, <span class="hljs-string">&#x27;__new__&#x27;</span>, <span class="hljs-string">&#x27;__reduce__&#x27;</span>, <span class="hljs-string">&#x27;__reduce_ex__&#x27;</span>, <span class="hljs-string">&#x27;__repr__&#x27;</span>, <span class="hljs-string">&#x27;__reversed__&#x27;</span>, <span class="hljs-string">&#x27;__rmul__&#x27;</span>, <span class="hljs-string">&#x27;__setattr__&#x27;</span>, <span class="hljs-string">&#x27;__setitem__&#x27;</span>, <span class="hljs-string">&#x27;__setslice__&#x27;</span>, <span class="hljs-string">&#x27;__sizeof__&#x27;</span>, <span class="hljs-string">&#x27;__str__&#x27;</span>, <span class="hljs-string">&#x27;__subclasshook__&#x27;</span>, <span class="hljs-string">&#x27;append&#x27;</span>, <span class="hljs-string">&#x27;count&#x27;</span>, <span class="hljs-string">&#x27;extend&#x27;</span>, <span class="hljs-string">&#x27;index&#x27;</span>, <span class="hljs-string">&#x27;insert&#x27;</span>, <span class="hljs-string">&#x27;pop&#x27;</span>, <span class="hljs-string">&#x27;remove&#x27;</span>, <span class="hljs-string">&#x27;reverse&#x27;</span>, <span class="hljs-string">&#x27;sort&#x27;</span>]</code></pre><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):        self.data = <span class="hljs-string">&quot;abc&quot;</span>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__dir__</span>(<span class="hljs-params">self, name</span>):        <span class="hljs-keyword">return</span> []    o = A()<span class="hljs-built_in">print</span>(<span class="hljs-built_in">dir</span>(o)) <span class="hljs-comment"># []</span></code></pre><h2 id="描述器"><a class="markdownIt-Anchor" href="#描述器"></a> 描述器</h2><p>描述器的定义：在Python代码层面，如果一个类的内部定义了<code>__get__()</code>、<code>__set__()</code>或<code>__delete__()</code>这三个方法中的其中一个，则这个类被称为描述器。</p><p>如下代码是描述器最简单的用法，其中类<code>Name</code>就是一个描述器，内部定义了一个<code>__get__()</code>方法，该方的两个参数<code>obj</code>和<code>objtype</code>是必须的。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Name</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__get__</span>(<span class="hljs-params">self, obj, objtype</span>):        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Peter&quot;</span>    <span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:    name = Name()o = A()<span class="hljs-built_in">print</span>(o.name)<span class="hljs-comment"># Peter</span><span class="hljs-built_in">print</span>(A.name)<span class="hljs-comment"># Peter</span></code></pre><p>从上面代码的运行结果可以推断出，调用<code>o.name</code>实际上是执行类<code>Name</code>的<code>__get__</code>方法，同样调用<code>A.name</code>也是执行类<code>Name</code>的<code>__get__</code>方法。这里的执行原理和Python内部关于描述器的机制有关，暂且不展开了。</p><h3 id="__-get-__"><a class="markdownIt-Anchor" href="#__-get-__"></a> __ get __</h3><p>上述的代码中，描述器方法的<code>self</code>参数是描述器对象本身，也就是name，<code>obj</code>是对应类A的对象，也就是o，<code>objtype</code>是对象o的类型。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Name</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__get__</span>(<span class="hljs-params">self, obj, objtype</span>):        <span class="hljs-built_in">print</span>(obj, objtype)        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;Peter&quot;</span>    <span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:    name = Name()o = A()<span class="hljs-built_in">print</span>(o.name)<span class="hljs-comment"># &lt;__main__.A object at 0x7f87ab86a400&gt; &lt;class &#x27;__main__.A&#x27;&gt;</span><span class="hljs-comment"># Peter</span></code></pre><h3 id="__-set-__"><a class="markdownIt-Anchor" href="#__-set-__"></a> __ set __</h3><p>通过<code>__get__</code>和<code>__set__</code>可以实现一个设置属性和读取属性的功能，与上述<code>__setattr_</code>和<code>__getattr__</code>相同的功能。不过描述器是class级别的(见下面代码的o2)。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">D</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):        self.val = <span class="hljs-number">0</span>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__get__</span>(<span class="hljs-params">self, obj, objtype</span>):        <span class="hljs-keyword">return</span> self.val    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__set__</span>(<span class="hljs-params">self, obj, value</span>):        self.val = value<span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:    x = D()    o = A()o2 = A()<span class="hljs-built_in">print</span>(o.x) <span class="hljs-comment"># 0</span>o.x = <span class="hljs-number">1</span><span class="hljs-built_in">print</span>(o.x) <span class="hljs-comment"># 1</span><span class="hljs-built_in">print</span>(o2.x) <span class="hljs-comment"># 1</span></code></pre><h3 id="__-delete-__"><a class="markdownIt-Anchor" href="#__-delete-__"></a> __ delete __</h3><p>当调用<code>del o.x</code>时会执行<code>__delete__</code>方法</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">D</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):        self.val = <span class="hljs-number">0</span>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__get__</span>(<span class="hljs-params">self, obj, objtype</span>):        <span class="hljs-keyword">return</span> self.val    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__set__</span>(<span class="hljs-params">self, obj, value</span>):        self.val = value    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__delete__</span>(<span class="hljs-params">self, obj</span>):        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;delete&quot;</span>)<span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:    x = D()    o = A()<span class="hljs-keyword">del</span> o.x <span class="hljs-comment"># delete</span></code></pre><h2 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h2><h3 id="__-slots-__"><a class="markdownIt-Anchor" href="#__-slots-__"></a> __ slots __</h3><p><code>__slots__</code>不是一个方法，但是是一个有特殊含义的变量。它规定了当前这个类的对象可以有哪些自定义的属性，是一个类的白名单。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:    __slots__ = [<span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>]o = A()o.x = <span class="hljs-number">1</span> <span class="hljs-comment"># 报错</span>o.a = <span class="hljs-number">1</span> <span class="hljs-comment"># 正常</span></code></pre><h2 id="迭代器__-iter__-和__-next__"><a class="markdownIt-Anchor" href="#迭代器__-iter__-和__-next__"></a> 迭代器：__ iter__ 和__ next__</h2><p>迭代器就是重复地做一些事情，可以简单的理解为循环。</p><ul><li>迭代是访问集合元素的一种方式。</li><li>迭代器是一个可以<strong>记住遍历的位置</strong>的对象。</li><li>迭代器对象从集合的第一个元素开始访问，直到所有的元素被访问完结束。<strong>迭代器只能往前不会后退</strong>。</li><li>迭代器有两个基本的方法：iter() 和 next()。</li></ul><p>Python中<strong>实现了__iter__方法的对象是可迭代的，实现了__next__方法的对象是迭代器</strong>。实际上要想让一个迭代器工作，至少要实现__iter__方法和__next__方法。<br>常见的就是我们在使用<code>for</code>语句的时候，python内部其实在<code>for</code>后面的对象上使用了内建函数<code>iter()</code>：</p><pre class="highlight"><code class="python">a = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>]<span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:    do_something()    <span class="hljs-comment"># 其实内部做了如下转换</span><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">iter</span>(a):    do_something()</code></pre><p>下面引入两个概念：</p><ol><li>Iterable: 有迭代能力的对象。一个类实现了__iter__，那么就认为它有迭代能力，通常此函数<strong>必须</strong>返回一个实现了__next__方法的对象，<strong>如果自己实现了，则可以返回</strong><code>self</code>，当然这个返回值不是必须的；</li><li>Iterator: 迭代器(当然也是Iterable)。同时实现了__iter__和__next__的对象，缺少任何一个都不算是Iterator，比如下面例子中，A()可以是一个Iterable，但是A()和B()都不能算是和Iterator，因为A只实现了__iter__，而B只实现了__next__()。</li></ol><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">B</span>(<span class="hljs-title class_ inherited__">object</span>):    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__next__</span>(<span class="hljs-params">self</span>):        <span class="hljs-keyword">raise</span> StopIteration<span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>(<span class="hljs-title class_ inherited__">object</span>):    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__iter__</span>(<span class="hljs-params">self</span>):        <span class="hljs-keyword">return</span> B()<span class="hljs-keyword">from</span> collections.abc <span class="hljs-keyword">import</span> *a = A()b = B()<span class="hljs-built_in">print</span>(<span class="hljs-built_in">isinstance</span>(a, Iterable)) <span class="hljs-comment"># True</span><span class="hljs-built_in">print</span>(<span class="hljs-built_in">isinstance</span>(a, Iterator)) <span class="hljs-comment"># False</span><span class="hljs-built_in">print</span>(<span class="hljs-built_in">isinstance</span>(b, Iterable)) <span class="hljs-comment"># False</span><span class="hljs-built_in">print</span>(<span class="hljs-built_in">isinstance</span>(b, Iterator)) <span class="hljs-comment"># False</span></code></pre><h3 id="创建一个迭代器"><a class="markdownIt-Anchor" href="#创建一个迭代器"></a> 创建一个迭代器</h3><p>把一个类作为一个迭代器使用需要在类中实现两个方法**<strong>iter</strong><strong>与</strong><strong>next</strong><strong>。<br>__iter__方法</strong>返回一个迭代对象**， 这个迭代对象<strong>实现了__next__方法</strong>并<strong>通过StopIteration异常</strong>来标识迭代的完成。<br>__next__方法会返回下一个迭代器对象。就可以通过<code>next()</code>函数访问这个对象的下一个元素了，并且在你不想继续有迭代的情况下抛出一个StopIteration的异常（for语句会捕获这个异常，并且自动结束for）</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyRange</span>(<span class="hljs-title class_ inherited__">object</span>):    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, end</span>):        self.start = <span class="hljs-number">0</span>        self.end = end    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__iter__</span>(<span class="hljs-params">self</span>):        <span class="hljs-keyword">return</span> self    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__next__</span>(<span class="hljs-params">self</span>):        <span class="hljs-keyword">if</span> self.start &lt; self.end:            ret = self.start            self.start += <span class="hljs-number">1</span>            <span class="hljs-keyword">return</span> ret        <span class="hljs-keyword">else</span>:            <span class="hljs-keyword">raise</span> StopIterationa = MyRange(<span class="hljs-number">5</span>)<span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:    <span class="hljs-built_in">print</span>(i) <span class="hljs-comment"># 0 1 2 3 4</span></code></pre><h3 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h3><ul><li>可以使用<code>collection.abs</code>里面的<code>Iterator</code>和<code>Iterable</code>配合<code>isinstance</code>函数来判断一个对象是否是可迭代的，是否是迭代器对象</li><li>iter()实际是映射到了__iter__函数</li><li>只要实现了__iter__的对象就是可迭代对象(Iterable)，正常情况下应该返回一个实现了__next__的对象（<strong>强制要求</strong>，否则报错），如果自己实现了__next__，也可以返回自己。</li><li>同时实现了__iter__和__next__的是迭代器(Iterator)，当然也是一个可迭代对象了，其中__next__应该在迭代完成后，抛出一个StopIteration异常</li><li>for语句会自动处理这个StopIteration异常以便结束for循环</li></ul><h2 id="生成器yield表达式"><a class="markdownIt-Anchor" href="#生成器yield表达式"></a> 生成器(yield表达式)</h2><p><code>str</code>，<code>list</code>，<code>tuple</code>，<code>dict</code>，<code>set</code>这些都是可迭代的，就是可用for来访问里面的每一个元素。但他们并不是迭代器。<br><strong>生成器是一个可以快速创建迭代器的工具</strong>。生成器是可迭代的，更准确的说法是它就是个迭代器。<br>我们可以用列表生成式来初始化一个列表：</p><pre class="highlight"><code class="python">list1 = [x <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5</span>)]<span class="hljs-built_in">print</span>(list1) <span class="hljs-comment"># [0,1,2,3,4]</span>gen = (x <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">5</span>)) <span class="hljs-comment"># 生成器表达式</span><span class="hljs-built_in">print</span>(gen) <span class="hljs-comment"># generator object &lt;genexpr&gt; at 0x000000ADEF</span><span class="hljs-comment"># 调用gen的方法和迭代器一模一样</span><span class="hljs-comment"># 方法一</span><span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> gen:    <span class="hljs-built_in">print</span>(x)<span class="hljs-comment"># 方法二</span><span class="hljs-built_in">print</span>(<span class="hljs-built_in">next</span>(gen))</code></pre><p>在 Python 中，使用了<code>yield</code>的函数被称为生成器（generator）。生成器是一个返回迭代器的函数，只能用于迭代操作，更简单点理解生成器就是一个迭代器。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">MyRange</span>(<span class="hljs-params">end</span>):    start = <span class="hljs-number">0</span>    <span class="hljs-keyword">while</span> start &lt; end:        <span class="hljs-keyword">yield</span> start        start += <span class="hljs-number">1</span><span class="hljs-keyword">from</span> collections.abc <span class="hljs-keyword">import</span> *a = MyRange(<span class="hljs-number">2</span>)<span class="hljs-built_in">print</span>(<span class="hljs-built_in">isinstance</span>(a, Iterator)) <span class="hljs-comment"># True</span><span class="hljs-built_in">print</span>(<span class="hljs-built_in">isinstance</span>(a, Iterable)) <span class="hljs-comment"># True</span><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:    <span class="hljs-built_in">print</span>(i) <span class="hljs-comment"># 0 1</span></code></pre><p>可以看见，函数MyRange里面使用了yield语句，结果变成了generator，也是Iterator，我们在使用for语句的时候，执行步骤如下：</p><ol><li>start = 0， while 0 &lt; 2，遇到了yield语句，返回start的值0，然后print这值；</li><li>第二次for的时候，执行yield后面的语句，start = 1，while 1&lt;2，遇到了yield语句，返回start的值1，然后print；</li><li>第三次for的时候，执行yield后面的语句，start = 2，while 2&lt;2不成立，此时函数结束运行，会抛出StopIterator的异常(这个是自动抛出的，不需要显示的调用raise语句，可以使用下面的next方法来查看这个异常)。</li></ol><p><strong>在调用生成器运行的过程中，每次遇到 yield 时函数会暂停并保存当前所有的运行信息，返回 yield 的值, 并在下一次执行 next() 方法时从当前位置继续运行</strong>。</p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础知识 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python中的MRO</title>
      <link href="/2023/10/10/python-zhi-shi/python-zhong-de-mro/"/>
      <url>/2023/10/10/python-zhi-shi/python-zhong-de-mro/</url>
      
        <content type="html"><![CDATA[<h1 id="python中的mro"><a class="markdownIt-Anchor" href="#python中的mro"></a> Python中的MRO</h1><p>面向对象的编程语言有三大特性：封装、继承和多态，在继承中不仅涉及到数据变量，还有方法的继承，因此关于继承的方法的执行顺序问题，称为MRO(Method Resolution Order)，方法解析顺序。</p><p>MRO是对于每个类，会把它的所有父类和自己做一个线性序列化，即把它所有继承的类和它自己做一个优先级的排序，当它想要调用某个方法时，会从这个优先级序列中去找。</p><p>Python从2.3版本开始，使用C3算法来求解MRO，C3算法可以满足三个性质：扩展优先图、局部优先、单调性。</p><h2 id="一个继承的简单例子"><a class="markdownIt-Anchor" href="#一个继承的简单例子"></a> 一个继承的简单例子</h2><p>如下面的代码，类B继承了类A，因此在实例化类B的一个对象后，可以调用类A的<code>say()</code>方法，即使类B没有定义<code>say()</code>方法。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">say</span>(<span class="hljs-params">self</span>):        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;AAA&quot;</span>)<span class="hljs-keyword">class</span> <span class="hljs-title class_">B</span>(<span class="hljs-title class_ inherited__">A</span>):    <span class="hljs-keyword">pass</span>b = B()b.say() <span class="hljs-comment"># AAA</span></code></pre><p>但是在一般项目中，类之间的继承关系不可能这么简单，比如下面的两段代码，区别仅仅是类B是否继承了类A，代码的执行结果就出现了变化。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">say</span>(<span class="hljs-params">self</span>):        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;AAA&quot;</span>)<span class="hljs-keyword">class</span> <span class="hljs-title class_">B</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">say</span>(<span class="hljs-params">self</span>):        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;BBB&quot;</span>)<span class="hljs-keyword">class</span> <span class="hljs-title class_">C</span>(<span class="hljs-title class_ inherited__">A</span>):    <span class="hljs-keyword">pass</span><span class="hljs-keyword">class</span> <span class="hljs-title class_">D</span>(C,B):    <span class="hljs-keyword">pass</span>d = D()d.say() <span class="hljs-comment">### AAA</span></code></pre><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">say</span>(<span class="hljs-params">self</span>):        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;AAA&quot;</span>)<span class="hljs-keyword">class</span> <span class="hljs-title class_">B</span>(<span class="hljs-title class_ inherited__">A</span>):    <span class="hljs-keyword">def</span> <span class="hljs-title function_">say</span>(<span class="hljs-params">self</span>):        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;BBB&quot;</span>)<span class="hljs-keyword">class</span> <span class="hljs-title class_">C</span>(<span class="hljs-title class_ inherited__">A</span>):    <span class="hljs-keyword">pass</span><span class="hljs-keyword">class</span> <span class="hljs-title class_">D</span>(C,B):    <span class="hljs-keyword">pass</span>d = D()d.say() <span class="hljs-comment">### BBB</span></code></pre><p>Python提供了两种方式供我们查看类的MRO，即类的继承的优先级顺序，在上面的代码中，使用<code>D.__mro__</code>或者<code>D.mro()</code>会返回类D的MRO。</p><h2 id="局部优先顺序"><a class="markdownIt-Anchor" href="#局部优先顺序"></a> 局部优先顺序</h2><p>局部优先顺序：顾名思义，局部优先。当一个类继承了多个类的时候，它会优先使用你写在前面的类的方法。如下面的代码所示</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">say</span>(<span class="hljs-params">self</span>):        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;AAA&quot;</span>)<span class="hljs-keyword">class</span> <span class="hljs-title class_">B</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">say</span>(<span class="hljs-params">self</span>):        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;BBB&quot;</span>)        <span class="hljs-keyword">class</span> <span class="hljs-title class_">C</span>(A,B):    <span class="hljs-keyword">pass</span><span class="hljs-built_in">print</span>(C.mro()) <span class="hljs-comment"># [&lt;class &#x27;__main__.C&#x27;&gt;, &lt;class &#x27;__main__.A&#x27;&gt;, &lt;class &#x27;__main__.B&#x27;&gt;, &lt;class &#x27;object&#x27;&gt;]</span>c = C()c.say() <span class="hljs-comment"># AAA</span></code></pre><p>局部优先的特性，不仅仅针对类C，也针对C的所有子类，即如果有任何类继承了类C，则该类也满足局部优先的特性。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">say</span>(<span class="hljs-params">self</span>):        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;AAA&quot;</span>)<span class="hljs-keyword">class</span> <span class="hljs-title class_">B</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">say</span>(<span class="hljs-params">self</span>):        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;BBB&quot;</span>)  <span class="hljs-keyword">class</span> <span class="hljs-title class_">C</span>(A,B):    <span class="hljs-keyword">pass</span><span class="hljs-keyword">class</span> <span class="hljs-title class_">D</span>(<span class="hljs-title class_ inherited__">C</span>):    <span class="hljs-keyword">pass</span><span class="hljs-built_in">print</span>(D.mro()) <span class="hljs-comment"># [&lt;class &#x27;__main__.D&#x27;&gt;, &lt;class &#x27;__main__.C&#x27;&gt;, &lt;class &#x27;__main__.A&#x27;&gt;, &lt;class &#x27;__main__.B&#x27;&gt;, &lt;class &#x27;object&#x27;&gt;]</span></code></pre><p>局部优先特性更专业的表述是：MRO里任意两个类的相对顺序和继承图里所有直接继承自这两个类的类在程序中声明的相对顺序一致。</p><h2 id="单调性"><a class="markdownIt-Anchor" href="#单调性"></a> 单调性</h2><p>单调性：是指任何一个类，所使用的方法需要来自于它的直接父类。</p><p>我们回到最开始的“简单”例子，如下面的代码，D的对象调用<code>say()</code>方法执行的是类B的方法，根据单调性的含义，类D执行的方法<code>say()</code>来自于它的直接父类C或B，根据局部优先原则现在C里面找，找不到接着去B里找，找到之后开始执行。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">say</span>(<span class="hljs-params">self</span>):        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;AAA&quot;</span>)<span class="hljs-keyword">class</span> <span class="hljs-title class_">B</span>(<span class="hljs-title class_ inherited__">A</span>):    <span class="hljs-keyword">def</span> <span class="hljs-title function_">say</span>(<span class="hljs-params">self</span>):        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;BBB&quot;</span>)<span class="hljs-keyword">class</span> <span class="hljs-title class_">C</span>(<span class="hljs-title class_ inherited__">A</span>):    <span class="hljs-keyword">pass</span><span class="hljs-keyword">class</span> <span class="hljs-title class_">D</span>(C,B):    <span class="hljs-keyword">pass</span>d = D()d.say() <span class="hljs-comment"># BBB </span><span class="hljs-built_in">print</span>(D.mro())<span class="hljs-comment"># [&lt;class &#x27;__main__.D&#x27;&gt;, &lt;class &#x27;__main__.C&#x27;&gt;, &lt;class &#x27;__main__.B&#x27;&gt;, &lt;class &#x27;__main__.A&#x27;&gt;, &lt;class &#x27;object&#x27;&gt;]</span></code></pre><p>更专业的表述是：MRO里任意两个类的相对顺序和自己所有父类的MRO里这两个类的相对顺序一致。</p><p>观察上面的代码，类C和类B都继承了类A，类D又同时继承了C和B，因此根据局部优先原则，在类D的MRO中C的优先级高于B，根据单调性原则，类D的MRO中任意两个类的顺序和自己所有父类（C和B）的MRO中这两个类的顺序一致，C的MRO中C优先于A，B的MRO中B优先于A，又已知C优先于B，因此D的MRO中优先级是C、B、A。</p><pre class="highlight"><code class="python"><span class="hljs-built_in">print</span>(C.mro())<span class="hljs-built_in">print</span>(B.mro())<span class="hljs-comment"># [&lt;class &#x27;__main__.C&#x27;&gt;, &lt;class &#x27;__main__.A&#x27;&gt;, &lt;class &#x27;object&#x27;&gt;]</span><span class="hljs-comment"># [&lt;class &#x27;__main__.B&#x27;&gt;, &lt;class &#x27;__main__.A&#x27;&gt;, &lt;class &#x27;object&#x27;&gt;]</span></code></pre><p>当类B中没有<code>say()</code>方法会怎么样呢？如下面的代码，此时D的直接父类C和B均没有<code>say()</code>方法，但是看到结果执行了类A的方法，因此上文的单调性含义“调用直接父类”不是必须的，找不到就沿着优先级序列继续往上找。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">say</span>(<span class="hljs-params">self</span>):        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;AAA&quot;</span>)<span class="hljs-keyword">class</span> <span class="hljs-title class_">B</span>(<span class="hljs-title class_ inherited__">A</span>):    <span class="hljs-keyword">def</span> <span class="hljs-title function_">see</span>(<span class="hljs-params">self</span>):        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;see&quot;</span>)<span class="hljs-keyword">class</span> <span class="hljs-title class_">C</span>(<span class="hljs-title class_ inherited__">A</span>):    <span class="hljs-keyword">pass</span><span class="hljs-keyword">class</span> <span class="hljs-title class_">D</span>(C,B):    <span class="hljs-keyword">pass</span>d = D()d.say() <span class="hljs-comment"># AAA</span></code></pre><h2 id="扩展优先图"><a class="markdownIt-Anchor" href="#扩展优先图"></a> 扩展优先图</h2><p>扩展优先图：如果两个类不具有直接的继承关系，那么找到两个类的最小公共子类，这个最小公共子类的多继承顺序靠前的分支上的类具有高优先级。</p><p>继续再来看开头的“简单”例子。如下面的代码，类C继承了类A，类D又同时继承了C和B，此时类D的对象调用<code>say()</code>方法会执行A中的方法。在D的mro中因为局部优先原则，C的优先级高于B，但是A和B的顺序关系还没有确定。此时我们应用扩展优先图的原则，A和B不具有直接的继承关系，且最小公共子类是D，则在D的继承中靠前的分支是类C，具有高优先级，此分支上还有类A，所以类A的优先级高于B。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">say</span>(<span class="hljs-params">self</span>):        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;AAA&quot;</span>)<span class="hljs-keyword">class</span> <span class="hljs-title class_">B</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">say</span>(<span class="hljs-params">self</span>):        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;BBB&quot;</span>)<span class="hljs-keyword">class</span> <span class="hljs-title class_">C</span>(<span class="hljs-title class_ inherited__">A</span>):    <span class="hljs-keyword">pass</span><span class="hljs-keyword">class</span> <span class="hljs-title class_">D</span>(C,B):    <span class="hljs-keyword">pass</span>d = D()d.say() <span class="hljs-built_in">print</span>(D.mro())</code></pre>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础知识 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pytorch|张量的特殊操作</title>
      <link href="/2023/10/04/pytorch-ji-chu-zhi-shi/zhang-liang-de-te-shu-cao-zuo/"/>
      <url>/2023/10/04/pytorch-ji-chu-zhi-shi/zhang-liang-de-te-shu-cao-zuo/</url>
      
        <content type="html"><![CDATA[<h1 id="张量的特殊操作"><a class="markdownIt-Anchor" href="#张量的特殊操作"></a> 张量的特殊操作</h1><p>在阅读别人的代码时，会遇到一些针对张量的特殊操作的方法，这些方法的具体使用在Pytorch的官方文档有解释，但是阅读官方文档往往更加迷惑，因此在这里对这些方法进行详细的解释。</p><h2 id="torchscatter方法"><a class="markdownIt-Anchor" href="#torchscatter方法"></a> torch.scatter方法</h2><p><code>torch.scatter()</code>方法正如字面含义“放置”，如代码<code>torch.scatter(B, dim, index, A)</code>，就是将张量A，根据参数dim和index填充到张量B中去；也可以写作<code>B.scatter(dim, index, A)</code>。</p><pre class="highlight"><code class="python"><span class="hljs-meta">&gt;&gt;&gt; </span>x = torch.rand((<span class="hljs-number">2</span>,<span class="hljs-number">5</span>))<span class="hljs-meta">&gt;&gt;&gt; </span>xtensor([[<span class="hljs-number">0.9026</span>, <span class="hljs-number">0.3278</span>, <span class="hljs-number">0.4902</span>, <span class="hljs-number">0.6585</span>, <span class="hljs-number">0.1589</span>],        [<span class="hljs-number">0.3596</span>, <span class="hljs-number">0.5294</span>, <span class="hljs-number">0.6111</span>, <span class="hljs-number">0.5385</span>, <span class="hljs-number">0.2100</span>]])<span class="hljs-meta">&gt;&gt;&gt; </span>torch.zeros(<span class="hljs-number">3</span>,<span class="hljs-number">5</span>).scatter_(<span class="hljs-number">0</span>, torch.tensor([[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">2</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>]]), x)tensor([[<span class="hljs-number">0.9026</span>, <span class="hljs-number">0.5294</span>, <span class="hljs-number">0.6111</span>, <span class="hljs-number">0.6585</span>, <span class="hljs-number">0.1589</span>],        [<span class="hljs-number">0.0000</span>, <span class="hljs-number">0.3278</span>, <span class="hljs-number">0.0000</span>, <span class="hljs-number">0.5385</span>, <span class="hljs-number">0.0000</span>],        [<span class="hljs-number">0.3596</span>, <span class="hljs-number">0.0000</span>, <span class="hljs-number">0.4902</span>, <span class="hljs-number">0.0000</span>, <span class="hljs-number">0.2100</span>]])</code></pre><h3 id="参数解释"><a class="markdownIt-Anchor" href="#参数解释"></a> 参数解释</h3><p>在代码<code>torch.scatter(B, dim, index, A)</code>中，该方法有几个重要的参数：目标张量(B)、dim、index和源张量(A)，其中各变量及参数的说明如下：</p><ul><li>目标张量：将在该张量上进行数据的填充，如上述代码的张量<code>B</code></li><li>源张量：将把该张量上的元素逐个填充到目标张量上，如上述代码的张量<code>A</code></li><li>dim：指定轴的方向，即指定<strong>沿着目标张量的哪个轴</strong>进行填充。对于二维张量，dim=0表示逐列进行行填充，而dim=1表示逐行进行填充</li><li>index：指定<strong>源张量的每个元素将要填充到目标张量的位置</strong>。按照轴方向，在target张量中需要填充的位置</li></ul><p>上述参数的本质即：dim参数指明沿着目标张量的哪个轴进行填充，而index参数指明源张量的每个元素将会填充的位置。为了保证scatter填充的有效性，需要注意：</p><ol><li>index的形状大小必须和源张量保持一致。因为index参数指明源张量的每个元素的填充位置，index的元素和源张量的元素是一一对应的。</li></ol><p>借用网上一张图片来理解上述的内容。</p><p><img src="/images/scatter.jpg" alt></p><p>如上图所示，因为指定了<code>dim=0</code>，所以是按照目标张量的列方向进行填充，即填充时逐列去填充数据。然后逐列的观察index参数（因为dim=0），index的第一列是0和2，上述说明了index参数指明源张量的每个元素将会填充的位置，对应源张量的元素0.3992和0.5735，因此这两个元素放在目标张量的第一列的第一行和第三行（第一行和第三行对应0和2，0和2表示索引）。继续逐列填充，假设进行到第三列，index的第三列是2和0，对应源张量的元素0.9044和0.6797，因此这两个元素放在目标张量的第三列的第三行和第一行。</p><p>下面的举例将对<code>dim=1</code>进行解释，<code>dim=1</code>按照目标张量的行方向进行填充，即填充时逐行去填充数据。逐行观察index参数，index的第一行是0, 1, 2, 0, 0，对应源张量的0.9026, 0.3278, 0.4902, 0.6585, 0.1589，因此0.3287放在第一行的第二列，0.4902放在第一行的第三列，0.9026,  0.6585, 0.1589这三个数据放在第一行的第一列(index均是0)，因为填充时是逐个元素进行填充的，最后一个元素0.1589把前两个元素0.9026,  0.6585都给覆盖了，最后目标张量的第一行第一列是0.1589。</p><pre class="highlight"><code class="python"><span class="hljs-meta">&gt;&gt;&gt; </span>x = torch.rand((<span class="hljs-number">2</span>,<span class="hljs-number">5</span>))<span class="hljs-meta">&gt;&gt;&gt; </span>xtensor([[<span class="hljs-number">0.9026</span>, <span class="hljs-number">0.3278</span>, <span class="hljs-number">0.4902</span>, <span class="hljs-number">0.6585</span>, <span class="hljs-number">0.1589</span>],        [<span class="hljs-number">0.3596</span>, <span class="hljs-number">0.5294</span>, <span class="hljs-number">0.6111</span>, <span class="hljs-number">0.5385</span>, <span class="hljs-number">0.2100</span>]])<span class="hljs-meta">&gt;&gt;&gt; </span>torch.zeros(<span class="hljs-number">3</span>,<span class="hljs-number">5</span>).scatter_(<span class="hljs-number">1</span>,torch.tensor([[<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">2</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>]]),x)tensor([[<span class="hljs-number">0.1589</span>, <span class="hljs-number">0.3278</span>, <span class="hljs-number">0.4902</span>, <span class="hljs-number">0.0000</span>, <span class="hljs-number">0.0000</span>],        [<span class="hljs-number">0.6111</span>, <span class="hljs-number">0.5385</span>, <span class="hljs-number">0.2100</span>, <span class="hljs-number">0.0000</span>, <span class="hljs-number">0.0000</span>],        [<span class="hljs-number">0.0000</span>, <span class="hljs-number">0.0000</span>, <span class="hljs-number">0.0000</span>, <span class="hljs-number">0.0000</span>, <span class="hljs-number">0.0000</span>]])</code></pre><p>这个例子可以再分析一下，看看为什么目标张量的第二行第三列是0.2100。具体过程和上述分析是一样的。</p><h3 id="官方文档的说明"><a class="markdownIt-Anchor" href="#官方文档的说明"></a> 官方文档的说明</h3><p>官方文档是张量为3维的情况下进行说明，在3维和3维以上的更高维度下，做法和我们上述的描述是类似的。先来看看官方文档：</p><pre class="highlight"><code class="python">target[index[i][j][k]][j][k] = src[i][j][k] <span class="hljs-comment"># dim=0</span>target[i][index[i][j][k]][k] = src[i][j][k] <span class="hljs-comment"># dim=1</span>target[i][j][index[i][j][k]] = src[i][j][k] <span class="hljs-comment"># dim=2</span></code></pre><p>当dim=0时沿着张量的列方向，所以index出现在第0维度的位置；以此类推，dim=1沿着张量的行方向，所以index出现在第1维度的位置；dim=2沿着张量的通道方向，所以index出现在第2维度的位置。这样理解起来官方文档的解释就清晰明了。</p><h2 id="torchgather方法"><a class="markdownIt-Anchor" href="#torchgather方法"></a> torch.gather方法</h2><p><code>torch.gather()</code>正如字面意思“收集”，即取出张量中对应的某些索引下的具体的元素。如代码<code>torch.gather(data, dim ,index)</code>表示按照dim和index参数从data张量中取出数值。也可以写作<code>data.gather(dim, index)</code>。</p><pre class="highlight"><code class="python"><span class="hljs-meta">&gt;&gt;&gt; </span>data = torch.arange(<span class="hljs-number">3</span>, <span class="hljs-number">12</span>).view(<span class="hljs-number">3</span>, <span class="hljs-number">3</span>)<span class="hljs-meta">&gt;&gt;&gt; </span>datatensor([[ <span class="hljs-number">3</span>,  <span class="hljs-number">4</span>,  <span class="hljs-number">5</span>],        [ <span class="hljs-number">6</span>,  <span class="hljs-number">7</span>,  <span class="hljs-number">8</span>],        [ <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">11</span>]])<span class="hljs-meta">&gt;&gt;&gt; </span>index = torch.tensor([[<span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>]])<span class="hljs-meta">&gt;&gt;&gt; </span>out = data.gather(<span class="hljs-number">0</span>, index)<span class="hljs-meta">&gt;&gt;&gt; </span>outtensor([[<span class="hljs-number">9</span>, <span class="hljs-number">7</span>, <span class="hljs-number">5</span>]])</code></pre><p>gather的操作，其实包含在scatter中。scatter是先根据index和dim找到data中的这些值，然后使用src去替换；而gather就是根据dim和index来找到data中的值，然后把这些值取出来构成新的张量。</p><p>因此，可以先搞明白scatter的操作机制，再来看gather的操作。</p><p>下面是一些代码示例，当传入的index是行向量时，</p><pre class="highlight"><code class="python"><span class="hljs-meta">&gt;&gt;&gt; </span>data = torch.arange(<span class="hljs-number">3</span>, <span class="hljs-number">12</span>).view(<span class="hljs-number">3</span>, <span class="hljs-number">3</span>)<span class="hljs-meta">&gt;&gt;&gt; </span>datatensor([[ <span class="hljs-number">3</span>,  <span class="hljs-number">4</span>,  <span class="hljs-number">5</span>],        [ <span class="hljs-number">6</span>,  <span class="hljs-number">7</span>,  <span class="hljs-number">8</span>],        [ <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">11</span>]])<span class="hljs-meta">&gt;&gt;&gt; </span>index = torch.tensor([[<span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>]])<span class="hljs-meta">&gt;&gt;&gt; </span>out = data.gather(<span class="hljs-number">0</span>, index)<span class="hljs-meta">&gt;&gt;&gt; </span>outtensor([[<span class="hljs-number">9</span>, <span class="hljs-number">7</span>, <span class="hljs-number">5</span>]])<span class="hljs-meta">&gt;&gt;&gt; </span>out = data.gather(<span class="hljs-number">1</span>, index)<span class="hljs-meta">&gt;&gt;&gt; </span>outtensor([[<span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span>]])</code></pre><p>当传入的index是列向量时，</p><pre class="highlight"><code class="python"><span class="hljs-meta">&gt;&gt;&gt; </span>data = torch.arange(<span class="hljs-number">3</span>, <span class="hljs-number">12</span>).view(<span class="hljs-number">3</span>, <span class="hljs-number">3</span>)<span class="hljs-meta">&gt;&gt;&gt; </span>datatensor([[ <span class="hljs-number">3</span>,  <span class="hljs-number">4</span>,  <span class="hljs-number">5</span>],        [ <span class="hljs-number">6</span>,  <span class="hljs-number">7</span>,  <span class="hljs-number">8</span>],        [ <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">11</span>]])<span class="hljs-meta">&gt;&gt;&gt; </span>index = torch.tensor([[<span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">0</span>]]).t()<span class="hljs-meta">&gt;&gt;&gt; </span>indextensor([[<span class="hljs-number">2</span>],        [<span class="hljs-number">1</span>],        [<span class="hljs-number">0</span>]])<span class="hljs-meta">&gt;&gt;&gt; </span>out = data.gather(<span class="hljs-number">1</span>, index)<span class="hljs-meta">&gt;&gt;&gt; </span>outtensor([[<span class="hljs-number">5</span>],        [<span class="hljs-number">7</span>],        [<span class="hljs-number">9</span>]])<span class="hljs-meta">&gt;&gt;&gt; </span>out = data.gather(<span class="hljs-number">0</span>, index)<span class="hljs-meta">&gt;&gt;&gt; </span>outtensor([[<span class="hljs-number">9</span>],        [<span class="hljs-number">6</span>],        [<span class="hljs-number">3</span>]])</code></pre><p>当传入的index是矩阵时，</p><pre class="highlight"><code class="python"><span class="hljs-meta">&gt;&gt;&gt; </span>data = torch.arange(<span class="hljs-number">3</span>, <span class="hljs-number">12</span>).view(<span class="hljs-number">3</span>, <span class="hljs-number">3</span>)<span class="hljs-meta">&gt;&gt;&gt; </span>datatensor([[ <span class="hljs-number">3</span>,  <span class="hljs-number">4</span>,  <span class="hljs-number">5</span>],        [ <span class="hljs-number">6</span>,  <span class="hljs-number">7</span>,  <span class="hljs-number">8</span>],        [ <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">11</span>]])<span class="hljs-meta">&gt;&gt;&gt; </span>index = torch.tensor([[<span class="hljs-number">0</span>, <span class="hljs-number">2</span>],                           [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>]])<span class="hljs-meta">&gt;&gt;&gt; </span>out = data.gather(<span class="hljs-number">1</span>, index)<span class="hljs-meta">&gt;&gt;&gt; </span>outtensor([[<span class="hljs-number">3</span>, <span class="hljs-number">5</span>],        [<span class="hljs-number">7</span>, <span class="hljs-number">8</span>]])<span class="hljs-meta">&gt;&gt;&gt; </span>out = data.gather(<span class="hljs-number">0</span>, index)<span class="hljs-meta">&gt;&gt;&gt; </span>outtensor([[ <span class="hljs-number">3</span>, <span class="hljs-number">10</span>],        [ <span class="hljs-number">6</span>, <span class="hljs-number">10</span>]])</code></pre>]]></content>
      
      
      <categories>
          
          <category> Pytorch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础知识 </tag>
            
            <tag> Pytorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vim命令的基本使用</title>
      <link href="/2023/08/19/ji-suan-ji-ji-chu/vim-shi-yong-jian-yi-jiao-cheng/"/>
      <url>/2023/08/19/ji-suan-ji-ji-chu/vim-shi-yong-jian-yi-jiao-cheng/</url>
      
        <content type="html"><![CDATA[<h1 id="vim命令的基本使用"><a class="markdownIt-Anchor" href="#vim命令的基本使用"></a> vim命令的基本使用</h1><p>vim 是一个全屏幕纯文本编辑器，是 vi 编辑器的增强版。</p><p>vim的工作模式</p><p><img src="/images/vim%E5%B7%A5%E4%BD%9C%E6%A8%A1%E5%BC%8F.jpg" alt></p><p>命令模式：是主要输入快捷键的模式。命名模式要想进入输入模式，可以使用<code>a, i, o</code>等快捷键来进入。</p><p>输入模式：主要用于文本编辑，和记事本类似。</p><p>末行模式（编辑模式）：</p><ul><li><code>:w</code>：保存不退出</li><li><code>:w 新文件名</code>：把文件另存为新文件</li><li><code>:q</code>：不保存退出</li><li><code>:wq</code>：保存退出</li><li><code>:!</code>：强制</li><li><code>:q!</code>：强制不保存退出，用于修改文件之后，不保存数据退出</li><li><code>:wq!</code>：强制保存退出，当文件的所有者或 root 用户，对文件没有写权限的时候，强制写入数据使用</li></ul><h2 id="插入模式"><a class="markdownIt-Anchor" href="#插入模式"></a> 插入模式</h2><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td><code>a</code></td><td>在光标所在字符后插入</td></tr><tr><td><code>A</code></td><td>在光标所在行尾插入</td></tr><tr><td><code>i</code></td><td>在光标所在字符前插入</td></tr><tr><td><code>I</code></td><td>在光标所在行首插入</td></tr><tr><td><code>o</code></td><td>在光标下插入新行</td></tr><tr><td><code>O</code></td><td>在光标上插入新行</td></tr></tbody></table><h2 id="命令模式操作"><a class="markdownIt-Anchor" href="#命令模式操作"></a> 命令模式操作</h2><h3 id="移动光标"><a class="markdownIt-Anchor" href="#移动光标"></a> 移动光标</h3><p>1)上下左右移动光标</p><blockquote><p>上、下、左、右方向键 移动光标<br><code>h</code>（左）<code>j</code>（下）<code>k</code>（上） <code>l</code>（右） 移动光标</p></blockquote><p>2)光标移动到文件头或文件尾</p><blockquote><p><code>gg</code> 移动到文件头<br><code>G</code> 移动到文件尾（shift + g）</p></blockquote><p>3)光标移动到行首或行尾</p><blockquote><p><code>^</code> 移动到行首<br><code>$</code> 移动到行尾</p></blockquote><p>4)移动到指定行</p><blockquote><p><code>:n</code> 移动到第几行（这里的 n 是数字）</p></blockquote><h3 id="删除或剪切"><a class="markdownIt-Anchor" href="#删除或剪切"></a> 删除或剪切</h3><p>1)删除字母</p><blockquote><p><code>x</code> 删除单个字母<br><code>nx</code> 删除 n 个字母（n 是数字，如果打算从光标位置连续删除 10 个字母，可以使用 10x 即可）</p></blockquote><p>2)删除整行或剪切</p><blockquote><p><code>dd</code> 删除单行<br><code>ndd</code> 删除多行<br><code>:n1,n2d</code> 删除指定范围的行</p></blockquote><p>删除行或多行，是比较常用的删除方法。这里的 dd 快捷键既是删除也是剪切。删除内容放入了剪切板，如果不粘贴就是删除，粘贴就是剪切。粘贴方法：</p><blockquote><p><code>p</code> 粘贴到光标下面一行<br><code>P</code> 粘贴到光标上面一行（shift+p）</p></blockquote><p>3)从光标所在行删除到文件尾</p><blockquote><p><code>dG</code> 从光标所在行删除到文件尾（d 是删除行，G 是文件尾，连起来就是从光标行删除到文件尾）</p></blockquote><h3 id="复制"><a class="markdownIt-Anchor" href="#复制"></a> 复制</h3><blockquote><p><code>yy</code> 复制单行<br><code>nyy</code> 复制多行</p></blockquote><p>复制之后的粘贴依然可以使用 p 键或 P 键</p><h3 id="撤销"><a class="markdownIt-Anchor" href="#撤销"></a> 撤销</h3><blockquote><p><code>u</code> 撤销<br><code>ctrl + r</code> 反撤销</p></blockquote><p>u 键能一直撤销到文件打开时的状态，ctrl + r 能一直反撤销到最后一次操作状态</p><h3 id="替换"><a class="markdownIt-Anchor" href="#替换"></a> 替换</h3><blockquote><p><code>r</code> 替换光标所在处的字符<br><code>R</code> 从光标所在处开始替换字符，按 esc 键结束</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 计算机基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础知识 </tag>
            
            <tag> vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深度学习中的正则化</title>
      <link href="/2023/07/19/suan-fa/shen-du-xue-xi-zheng-ze-hua/"/>
      <url>/2023/07/19/suan-fa/shen-du-xue-xi-zheng-ze-hua/</url>
      
        <content type="html"><![CDATA[<h1 id="深度学习中的正则化"><a class="markdownIt-Anchor" href="#深度学习中的正则化"></a> 深度学习中的正则化</h1><p>先来看一个python实现的最简单的单参数线性回归模型。</p><h2 id="简单的线性回归"><a class="markdownIt-Anchor" href="#简单的线性回归"></a> 简单的线性回归</h2><pre class="highlight"><code class="python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<span class="hljs-keyword">import</span> randomx = np.array([<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>], dtype=np.float32)y = np.array([<span class="hljs-number">1.8</span>, <span class="hljs-number">2.1</span>, <span class="hljs-number">2.3</span>, <span class="hljs-number">2.3</span>, <span class="hljs-number">2.85</span>, <span class="hljs-number">3.0</span>, <span class="hljs-number">3.3</span>, <span class="hljs-number">4.9</span>, <span class="hljs-number">5.45</span>, <span class="hljs-number">5.0</span>], dtype=np.float32)k = random.random()  <span class="hljs-comment"># 0-1</span>b = <span class="hljs-number">0</span>lr = <span class="hljs-number">1e-2</span>  <span class="hljs-comment"># 学习率</span><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">100</span>):    predict = x * k + b    loss = <span class="hljs-number">0.5</span> * np.<span class="hljs-built_in">sum</span>((y - predict) ** <span class="hljs-number">2</span>)    <span class="hljs-keyword">if</span> i % <span class="hljs-number">100</span> == <span class="hljs-number">0</span>:        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;loss = &quot;</span>, loss)    <span class="hljs-comment"># 梯度</span>    delta_b = np.mean(predict - y)    delta_k = np.mean((predict - y) * x)    <span class="hljs-comment"># 更新参数</span>    k = k - lr * delta_k    b = b - lr * delta_bk b</code></pre><p><img src="/images/LinearRegression.png" alt></p><h2 id="复杂的线性回归"><a class="markdownIt-Anchor" href="#复杂的线性回归"></a> 复杂的线性回归</h2><p>下面我们写一个稍微复杂些的模型，因为对房价预测模型用直线会使得误差较大，对于输入和输出接近线性相关的问题，这些线性函数是很有用的，但对于非线性它们则不太有效。在这里增加模型复杂度，代码如下：<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><msub><mi>k</mi><mrow><mi>i</mi><mi>d</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>t</mi><mi>y</mi></mrow></msub><mi>x</mi><mo>+</mo><msub><mi>k</mi><mrow><mi>s</mi><mi>i</mi><mi>n</mi></mrow></msub><mi>sin</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mi>k</mi><mrow><mi>c</mi><mi>o</mi><mi>s</mi></mrow></msub><mi>cos</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">y=k_{identity}x+k_{sin} \sin(x) +k_{cos}  \cos(x) + b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">sin</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">cos</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span></p><pre class="highlight"><code class="python"><span class="hljs-string">&#x27;&#x27;&#x27;对数据进行减去均值除以标准差，使得均值为0，标准差为1数据加载，并执行标准化，使得数据服从正态分布 &#x27;&#x27;&#x27;</span>xm, ym = np.mean(data, axis=<span class="hljs-number">0</span>)xs, ys  = np.std(data, axis=<span class="hljs-number">0</span>)x = (x - xm) / xsy = (y - ym) / ys<span class="hljs-string">&#x27;&#x27;&#x27;一般而言，k的初始值不适合设置为0而b的初始值更适合设置为0，由于数据做了标准化，所以学习率可以给更大的值&#x27;&#x27;&#x27;</span>k_identity = <span class="hljs-number">0.1</span>k_sin      = <span class="hljs-number">0.1</span>k_cos      = <span class="hljs-number">0.1</span>b          = <span class="hljs-number">0</span>lr         = <span class="hljs-number">0.01</span><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1000</span>):    predict = x * k_identity + np.sin(x) * k_sin + np.cos(x) * k_cos + b    loss = <span class="hljs-number">0.5</span> * ((predict - y) ** <span class="hljs-number">2</span>).<span class="hljs-built_in">sum</span>()    <span class="hljs-keyword">if</span> i % <span class="hljs-number">100</span> == <span class="hljs-number">0</span>:        <span class="hljs-built_in">print</span>(<span class="hljs-string">f&quot;Iter: <span class="hljs-subst">{i}</span>, Loss: <span class="hljs-subst">{loss:<span class="hljs-number">.3</span>f}</span>&quot;</span>)    dk_identity = ((predict - y) * x).<span class="hljs-built_in">sum</span>()    dk_sin      = ((predict - y) * np.sin(x)).<span class="hljs-built_in">sum</span>()    dk_cos      = ((predict - y) * np.cos(x)).<span class="hljs-built_in">sum</span>()    db          = (predict - y).<span class="hljs-built_in">sum</span>()    k_identity = k_identity - dk_identity * lr    k_sin      = k_sin      - dk_sin * lr    k_cos      = k_cos      - dk_cos * lr    b          = b - db * lrrestore_x = x * xs + xmrestore_y = predict * ys + ym</code></pre><ul><li>注意：我们在求导数时是累加，在样本数量少的时候没有区别，样本数量大的时候常用平均值。</li></ul><p>看看训练效果，拟合了出我们希望的结果。<br><img src="/images/fit.png" alt><br>这里再看下使用的线性回归公式，对于复杂度，由于多引入了2个k，使得模型比直线更加复杂：<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><msub><mi>k</mi><mrow><mi>i</mi><mi>d</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>t</mi><mi>y</mi></mrow></msub><mi>x</mi><mo>+</mo><msub><mi>k</mi><mrow><mi>s</mi><mi>i</mi><mi>n</mi></mrow></msub><mi>sin</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mi>k</mi><mrow><mi>c</mi><mi>o</mi><mi>s</mi></mrow></msub><mi>cos</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">y=k_{identity}x+k_{sin} \sin(x) +k_{cos}  \cos(x) + b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">sin</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">cos</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span><br>上述训练过程的损失函数如下：<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">[</mo><msub><mi>k</mi><mrow><mi>i</mi><mi>d</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>t</mi><mi>y</mi></mrow></msub><mi>x</mi><mo>+</mo><msub><mi>k</mi><mrow><mi>s</mi><mi>i</mi><mi>n</mi></mrow></msub><mi>sin</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mi>k</mi><mrow><mi>c</mi><mi>o</mi><mi>s</mi></mrow></msub><mi>cos</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><mi>b</mi><mo>−</mo><mi>y</mi><msup><mo stretchy="false">]</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">L=\frac{1}{2}[k_{identity}x+k_{sin} \sin(x) +k_{cos}  \cos(x) + b - y]^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">sin</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">cos</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><br>但是，也可以定义如下损失函数：<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">[</mo><msub><mi>k</mi><mrow><mi>i</mi><mi>d</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>t</mi><mi>y</mi></mrow></msub><mi>x</mi><mo>+</mo><msub><mi>k</mi><mrow><mi>s</mi><mi>i</mi><mi>n</mi></mrow></msub><mi>sin</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mi>k</mi><mrow><mi>c</mi><mi>o</mi><mi>s</mi></mrow></msub><mi>cos</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><mi>b</mi><mo>−</mo><mi>y</mi><msup><mo stretchy="false">]</mo><mn>2</mn></msup><mo>+</mo><mi>λ</mi><mo stretchy="false">(</mo><msubsup><mi>k</mi><mrow><mi>i</mi><mi>d</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>t</mi><mi>y</mi></mrow><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>k</mi><mrow><mi>s</mi><mi>i</mi><mi>n</mi></mrow><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>k</mi><mrow><mi>c</mi><mi>o</mi><mi>s</mi></mrow><mn>2</mn></msubsup><mo>+</mo><msup><mi>b</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L=\frac{1}{2}[k_{identity}x+k_{sin} \sin(x) +k_{cos}  \cos(x) + b - y]^2 + \lambda(k_{identity}^2+k_{sin}^2 + k_{cos}^2 + b^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">sin</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">cos</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2333239999999999em;vertical-align:-0.4192159999999999em;"></span><span class="mord mathnormal">λ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4168920000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4192159999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.072772em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.061108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">s</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">λ</span></span></span></span>是提前挑好的值，控制我们偏好小范数权重的程度，取一个比较小的数字，例如1e-5。当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\lambda = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">λ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>时，我们没有任何偏好，越大的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">λ</span></span></span></span>偏好越小的权重。可以使用不同的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">λ</span></span></span></span>来训练回归模型，看一下结果：<br><img src="/images/%E6%AD%A3%E5%88%99%E5%8C%96.png" alt></p><p>这里增加的约束，称之为对<strong>模型的正则化(Regularization)</strong>，相当于对模型的参数做了约束，要求其越简单越好，最小化模型参数，也称为：结构风险最小化(Structural Risk Minimization，SRM)。</p><h2 id="正则化"><a class="markdownIt-Anchor" href="#正则化"></a> 正则化</h2><p>正则化也称之为对参数的<strong>惩罚项</strong>，也有称之为<strong>权重衰减</strong>，即Penalty、WeightDecay。<br>对于如下平方和，称之为<strong>L2正则化</strong>，也叫(ridge回归，岭回归)：<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">[</mo><msub><mi>k</mi><mrow><mi>i</mi><mi>d</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>t</mi><mi>y</mi></mrow></msub><mi>x</mi><mo>+</mo><msub><mi>k</mi><mrow><mi>s</mi><mi>i</mi><mi>n</mi></mrow></msub><mi>sin</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mi>k</mi><mrow><mi>c</mi><mi>o</mi><mi>s</mi></mrow></msub><mi>cos</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><mi>b</mi><mo>−</mo><mi>y</mi><msup><mo stretchy="false">]</mo><mn>2</mn></msup><mo>+</mo><mi>λ</mi><mo stretchy="false">(</mo><msubsup><mi>k</mi><mrow><mi>i</mi><mi>d</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>t</mi><mi>y</mi></mrow><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>k</mi><mrow><mi>s</mi><mi>i</mi><mi>n</mi></mrow><mn>2</mn></msubsup><mo>+</mo><msubsup><mi>k</mi><mrow><mi>c</mi><mi>o</mi><mi>s</mi></mrow><mn>2</mn></msubsup><mo>+</mo><msup><mi>b</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L=\frac{1}{2}[k_{identity}x+k_{sin} \sin(x) +k_{cos}  \cos(x) + b - y]^2 + \lambda(k_{identity}^2+k_{sin}^2 + k_{cos}^2 + b^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">sin</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">cos</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2333239999999999em;vertical-align:-0.4192159999999999em;"></span><span class="mord mathnormal">λ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4168920000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4192159999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.072772em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.441336em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.061108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">s</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><br>对于如下绝对值和，称之为<strong>L1正则化</strong>，也叫(lasso回归)：<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">[</mo><msub><mi>k</mi><mrow><mi>i</mi><mi>d</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>t</mi><mi>y</mi></mrow></msub><mi>x</mi><mo>+</mo><msub><mi>k</mi><mrow><mi>s</mi><mi>i</mi><mi>n</mi></mrow></msub><mi>sin</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mi>k</mi><mrow><mi>c</mi><mi>o</mi><mi>s</mi></mrow></msub><mi>cos</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><mi>b</mi><mo>−</mo><mi>y</mi><msup><mo stretchy="false">]</mo><mn>2</mn></msup><mo>+</mo><mi>λ</mi><mo stretchy="false">(</mo><mi mathvariant="normal">∣</mi><msub><mi>k</mi><mrow><mi>i</mi><mi>d</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>i</mi><mi>t</mi><mi>y</mi></mrow></msub><mi mathvariant="normal">∣</mi><mo>+</mo><mi mathvariant="normal">∣</mi><msub><mi>k</mi><mrow><mi>s</mi><mi>i</mi><mi>n</mi></mrow></msub><mi mathvariant="normal">∣</mi><mo>+</mo><mi mathvariant="normal">∣</mi><msub><mi>k</mi><mrow><mi>c</mi><mi>o</mi><mi>s</mi></mrow></msub><mi mathvariant="normal">∣</mi><mo>+</mo><mi mathvariant="normal">∣</mi><mi>b</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L=\frac{1}{2}[k_{identity}x+k_{sin} \sin(x) +k_{cos}  \cos(x) + b - y]^2 + \lambda(|k_{identity}|+|k_{sin}| + |k_{cos}| + |b|)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">sin</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">cos</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">]</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathnormal">λ</span><span class="mopen">(</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">n</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">t</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03148em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal">b</span><span class="mord">∣</span><span class="mclose">)</span></span></span></span><br>带正则化的模型表示如下：<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo>=</mo><msub><mi>L</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><mi>λ</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>θ</mi><mi mathvariant="normal">∣</mi><msubsup><mi mathvariant="normal">∣</mi><mi>p</mi><mi>p</mi></msubsup></mrow><annotation encoding="application/x-tex">L=L_{\theta}(x) + \lambda || \theta ||_p^p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.133108em;vertical-align:-0.383108em;"></span><span class="mord mathnormal">λ</span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span><br>此时表示最小化经验风险和最小化结构风险。<br><strong>正则化是增加了对模型复杂度的约束</strong>，<strong>要求模型使用更少的参数</strong>表示问题，<strong>抑制过拟合的现象</strong>发生的一种常见手段，但是要注意，正则化是指修改学习算法，使其降低泛化误差，而非训练误差。</p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础知识 </tag>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python的argparse模块</title>
      <link href="/2023/07/17/python-zhi-shi/argparse-xiang-jie/"/>
      <url>/2023/07/17/python-zhi-shi/argparse-xiang-jie/</url>
      
        <content type="html"><![CDATA[<h1 id="python中的argparse模块"><a class="markdownIt-Anchor" href="#python中的argparse模块"></a> Python中的argparse模块</h1><p>argparse 模块是 Python 内置的用于命令项选项与参数解析的模块，argparse 模块可以让人轻松编写用户友好的命令行接口，能够帮助程序员为模型定义参数。<br>本质上是用sys.argv从命令行语句中解析出命令行参数，然后自动生成帮助和使用信息。<br>argparse定义四个步骤</p><ul><li>导入argparse包 ——import argparse</li><li>创建一个命令行解析器对象 ——创建 ArgumentParser() 对象</li><li>给解析器添加命令行参数 ——调用add_argument() 方法添加参数</li><li>解析命令行的参数 ——使用 parse_args() 解析添加的参数</li></ul><h2 id="基本用法"><a class="markdownIt-Anchor" href="#基本用法"></a> 基本用法</h2><p>argparse的使用非常简单，代码示例如下。</p><pre class="highlight"><code class="python"><span class="hljs-comment"># 导入库</span><span class="hljs-keyword">import</span> argparse <span class="hljs-comment"># 1. 定义命令行解析器对象</span>parser = argparse.ArgumentParser(description=<span class="hljs-string">&#x27;Demo of argparse&#x27;</span>) <span class="hljs-comment"># 2. 添加命令行参数</span>parser.add_argument(<span class="hljs-string">&#x27;--epochs&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">int</span>, default=<span class="hljs-number">30</span>)parser.add_argument(<span class="hljs-string">&#x27;--batch&#x27;</span>, <span class="hljs-built_in">type</span>=<span class="hljs-built_in">int</span>, default=<span class="hljs-number">4</span>) <span class="hljs-comment"># 3. 从命令行中结构化解析参数</span>args = parser.parse_args()<span class="hljs-built_in">print</span>(args)epochs = args.epochsbatch = args.batch<span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;show {}  {}&#x27;</span>.<span class="hljs-built_in">format</span>(epochs, batch))</code></pre><h2 id="参数详解"><a class="markdownIt-Anchor" href="#参数详解"></a> 参数详解</h2><h3 id="add_argument-方法"><a class="markdownIt-Anchor" href="#add_argument-方法"></a> add_argument() 方法</h3><p>添加命令行参数。给一个 ArgumentParser 对象添加程序参数信息，是通过调用 add_argument() 方法完成的。通常，这些调用指定 ArgumentParser 对象获取命令行字符串并将其转换为对象。这些信息在 parse_args() 调用时被存储在ArgumentParser实例化对象中，以供后续使用。</p><h3 id="parse_args方法"><a class="markdownIt-Anchor" href="#parse_args方法"></a> parse_args()方法</h3><p>ArgumentParser对象通过 parse_args() 方法解析命令行的参数。它将检查命令行中每个参数，转换为适当的数据类型，然后调用相应的操作，并把参数结构化后存放在对象args中。</p><pre class="highlight"><code class="python">args = parser.parse_args()</code></pre><p>在脚本中，通常 parse_args() 会被不带参数调用，而 ArgumentParser 将自动从 sys.argv 中确定命令行参数。</p><h2 id="add_argument-参数解析"><a class="markdownIt-Anchor" href="#add_argument-参数解析"></a> add_argument() 参数解析</h2><p>每个参数解释如下:</p><ul><li><strong>name or flags: <strong>一个命名或者一个选项字符串的列表。可以传</strong>位置参数名</strong>或者<strong>可选参数标识符</strong>，它必须作为add_argument()方法的第一个参数。例如 epochs 或者 -e, --epochs。当<code>parse_args()</code>被调用，选项会以<code>-</code>前缀识别，剩下的参数则会被假定为位置参数。</li></ul><pre class="highlight"><code class="python"><span class="hljs-comment"># 可选参数</span>parser.add_argument(<span class="hljs-string">&#x27;-f&#x27;</span>, <span class="hljs-string">&#x27;--foo&#x27;</span>)<span class="hljs-comment"># 位置参数</span>parser.add_argument(<span class="hljs-string">&#x27;bar&#x27;</span>)</code></pre><ul><li><strong>action:</strong> 命令行遇到flags参数（可选参数）时的动作。有两个常见的动作：</li></ul><blockquote><p>store_true：设定flag参数为true；<br>store_false：设定flag参数为False。<br>注意：如果直接运行程序，默认不读取该变量，要使用必须要进行传参，例如：python <a href="http://try.py" target="_blank" rel="noopener">try.py</a> --epochs</p></blockquote><ul><li>nargs: 应该读取的命令行参数个数，</li></ul><blockquote><p>可以是具体的数字，<br>或者是 ? 号，当不指定值时对于 位置参数 使用 default，对于 可选参数 使用 const；<br>或者是 * 号，表示 0 或多个参数；<br>或者是 + 号，表示 1 或多个参数。</p></blockquote><ul><li><strong>default:</strong> 不指定参数时该参数的默认值。</li><li><strong>type:</strong> 命令行参数应该被转换成的数据类型。</li><li>required: 是否为必选参数或可选参数。</li><li><strong>help:</strong> 参数的帮助信息。</li><li>metavar： 在 usage 说明中的参数名称，对于必选参数，默认就是参数名称，对于可选参数默认是全大写的参数名称。</li><li>dest： 解析后的参数名称，默认情况下，对于可选参数选取最长的名称，中划线转换为下划线。</li><li>choices： 参数可允许的值的一个容器。</li><li>const： action 和 nargs 所需要的常量值。</li><li>store_const：表示赋值为const；</li><li>append：将遇到的值存储成列表，也就是如果参数重复则会保存多个值;</li><li>append_const：将参数规范中定义的一个值保存到一个列表；</li><li>count：存储遇到的次数；此外，也可以继承 argparse.Action 自定义参数解析；</li></ul><h2 id="参数示例说明"><a class="markdownIt-Anchor" href="#参数示例说明"></a> 参数示例说明</h2><h3 id="位置参数"><a class="markdownIt-Anchor" href="#位置参数"></a> 位置参数</h3><p>位置参数是<code>XXX</code>。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">import</span> argparseparse = argparse.ArgumentParser(<span class="hljs-string">&#x27;This script is for argparse learning&#x27;</span>)parse.add_argument(<span class="hljs-string">&#x27;echo&#x27;</span>,<span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;this option where return what you input&#x27;</span>)opt = parser.parse_args() <span class="hljs-built_in">print</span>(opt.echo)python opt.py hello&gt;&gt;&gt;Output:hello</code></pre><p>type参数用来指定输入该参数的类型</p><pre class="highlight"><code class="python">parse.add_argument(<span class="hljs-string">&#x27;echo&#x27;</span>,<span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;this option where return what you input&#x27;</span>,                   <span class="hljs-built_in">type</span>=<span class="hljs-built_in">int</span>)</code></pre><h3 id="可选参数"><a class="markdownIt-Anchor" href="#可选参数"></a> 可选参数</h3><h4 id="指定参数"><a class="markdownIt-Anchor" href="#指定参数"></a> 指定参数</h4><p>使用<code>--XXX</code>或<code>-XXX</code>来指定可选参数，参数类型可以由type指定，如果使用可选参数则必须有一个参数，如下错误</p><pre class="highlight"><code class="python">parse.add_argument(<span class="hljs-string">&#x27;--input&#x27;</span>,<span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;this will return what you input&#x27;</span>,<span class="hljs-built_in">type</span> = <span class="hljs-built_in">int</span>)arg = parse.parse_args()<span class="hljs-built_in">print</span>(arg.<span class="hljs-built_in">input</span>)python opt.py --<span class="hljs-built_in">input</span>&gt;&gt;&gt;Output:usage: This script <span class="hljs-keyword">is</span> <span class="hljs-keyword">for</span> argparse learning [-h] [--<span class="hljs-built_in">input</span> INPUT]This script <span class="hljs-keyword">is</span> <span class="hljs-keyword">for</span> argparse learning: error: argument --<span class="hljs-built_in">input</span>: expected one argument</code></pre><h4 id="标值参数"><a class="markdownIt-Anchor" href="#标值参数"></a> 标值参数</h4><p><code>action = 'store_true'</code>或者<code>action='store_false'</code></p><pre class="highlight"><code class="python">parse.add_argument(<span class="hljs-string">&#x27;--flag&#x27;</span>,<span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;this is test for flag&#x27;</span>,action=<span class="hljs-string">&#x27;store_true&#x27;</span>)arg = parse.parse_args()<span class="hljs-built_in">print</span>(arg.<span class="hljs-built_in">input</span>)python opt.py  --flag&gt;&gt;&gt;Output:<span class="hljs-literal">True</span>python opt.py&gt;&gt;&gt;Output:<span class="hljs-literal">False</span></code></pre><p>当你为其指定一个值的时候，也会报错，说明这个标志只有存在和不存在的区别，不可以对其赋值。<br>也可以使用<code>action='store_const'</code>来指定一个const参数。</p><pre class="highlight"><code class="python">parse.add_argument(<span class="hljs-string">&#x27;--store_con&#x27;</span>,action=<span class="hljs-string">&#x27;store_const&#x27;</span>,const=<span class="hljs-number">12</span>)arg = parse.parse_args()<span class="hljs-built_in">print</span>(arg.store_con)python opt.py --store_con&gt;&gt;&gt;Output:<span class="hljs-number">12</span></code></pre><h4 id="限制参数的选项"><a class="markdownIt-Anchor" href="#限制参数的选项"></a> 限制参数的选项</h4><p>使用choices来限制参数的选项</p><pre class="highlight"><code class="python">parse.add_argument(<span class="hljs-string">&#x27;--choice&#x27;</span>,choices=[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>],<span class="hljs-built_in">type</span>=<span class="hljs-built_in">int</span>,                   <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;the choice only can be used in [1,2,3]&#x27;</span>)arg = parse.parse_args()<span class="hljs-built_in">print</span>(arg.choice)</code></pre><p>使用不在choices中的参数会报错</p><h4 id="计数某一可选参数出现次数"><a class="markdownIt-Anchor" href="#计数某一可选参数出现次数"></a> 计数某一可选参数出现次数</h4><p>使用count动作来计数某一可选参数出现的次数</p><pre class="highlight"><code class="python">parse.add_argument(<span class="hljs-string">&#x27;--num&#x27;</span>,<span class="hljs-string">&#x27;-n&#x27;</span>,action=<span class="hljs-string">&#x27;count&#x27;</span>,<span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;this option is used for count&#x27;</span>)arg = parse.parse_args()<span class="hljs-keyword">if</span> arg.num == <span class="hljs-literal">None</span>:    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;count is 0&#x27;</span>)<span class="hljs-keyword">if</span> arg.num == <span class="hljs-number">1</span>:    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;count is 1&#x27;</span>)<span class="hljs-keyword">if</span> arg.num == <span class="hljs-number">2</span>:    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;count is 2&#x27;</span>)python opt.py  -n&gt;&gt;&gt;Output:count <span class="hljs-keyword">is</span> <span class="hljs-number">1</span>————————————————————————————————python opt.py  -nn&gt;&gt;&gt;Output:count <span class="hljs-keyword">is</span> <span class="hljs-number">2</span>————————————————————————————————python opt.py  -n -n&gt;&gt;&gt;Output:count <span class="hljs-keyword">is</span> <span class="hljs-number">2</span>————————————————————————————————python opt.py  -n --num&gt;&gt;&gt;Output:count <span class="hljs-keyword">is</span> <span class="hljs-number">2</span>————————————————————————————————python opt.py&gt;&gt;&gt;Output:count <span class="hljs-keyword">is</span> <span class="hljs-number">0</span></code></pre><h4 id="使用default指定默认参数"><a class="markdownIt-Anchor" href="#使用default指定默认参数"></a> 使用default指定默认参数</h4><p>可以在添加参数的时候使用default来指定默认的参数</p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础知识 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深度学习中的损失函数</title>
      <link href="/2023/07/14/suan-fa/shen-du-xue-xi-chang-yong-sun-shi-han-shu/"/>
      <url>/2023/07/14/suan-fa/shen-du-xue-xi-chang-yong-sun-shi-han-shu/</url>
      
        <content type="html"><![CDATA[<h1 id="深度学习中常用的损失函数"><a class="markdownIt-Anchor" href="#深度学习中常用的损失函数"></a> 深度学习中常用的损失函数</h1><p>机器学习中的监督学习本质是给定一系列训练样本<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_i, y_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，尝试学习<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>→</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x \rightarrow y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>的映射关系，使得给定一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>，即便这个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>不在训练样本中，也能够得到尽量接近真实<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>的输出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>y</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span>。而损失函数（Loss Function）则是这个过程中关键的一个组成部分，用来<strong>衡量模型的输出</strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>y</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span><strong>与真实的</strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span><strong>之间的差距</strong>，给模型的优化指明方向。<br>本文将介绍分类与回归常用的几种损失函数，包括</p><ol><li>均方差损失 Mean Squared Loss</li><li>平均绝对误差损失 Mean Absolute Error Loss</li><li>Huber Loss</li><li>分位数损失 Quantile Loss</li><li>交叉熵损失函数 Cross Entropy Loss</li><li>Hinge 损失 Hinge Loss</li></ol><h2 id="几个概念的区分"><a class="markdownIt-Anchor" href="#几个概念的区分"></a> 几个概念的区分</h2><p>在正文开始之前，先说下关于<strong>Loss Function</strong>、<strong>Cost Function</strong>和<strong>Objective Function</strong>的区别和联系。在机器学习的语境下这三个术语经常被交叉使用。</p><ul><li>损失函数 Loss Function 通常是<strong>针对单个训练样本而言</strong>，给定一个模型输出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>y</mi><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{y}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span>和一个真实<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>，损失函数输出一个实值损失<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo separator="true">,</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L=f(y_i, \hat{y_i})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li><li>代价函数 Cost Function 通常是<strong>针对整个训练集</strong>（或者在使用 mini-batch gradient descent 时一个 mini-batch）的总损失<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><mi>f</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo separator="true">,</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J=\frac{1}{N} \sum_{i=1}^{N} f(y_i, \hat{y_i})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.326231em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose">)</span></span></span></span>。<strong>代价函数是损失函数的期望（总和的平均）</strong>。</li><li>目标函数 Objective Function 是一个更通用的术语，表示任意希望被优化的函数，用于机器学习领域和非机器学习领域（比如运筹优化）</li></ul><p>一句话总结三者的关系就是：A loss function is a part of a cost function which is a type of an objective function.<br>由于损失函数和代价函数只是在针对样本集上有区别，因此在本文中统一使用了损失函数这个术语，但下文的相关公式实际上采用的是代价函数 Cost Function 的形式。</p><h2 id="均方差损失mean-squared-error-loss"><a class="markdownIt-Anchor" href="#均方差损失mean-squared-error-loss"></a> 均方差损失(Mean Squared Error Loss)</h2><h3 id="基本形式与原理"><a class="markdownIt-Anchor" href="#基本形式与原理"></a> 基本形式与原理</h3><p>均方差（MSE）损失是机器学习、深度学习回归任务中最常用的一种损失函数，也称为 L2 Loss。其基本形式如下</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>J</mi><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">J=\frac {1}{N} \sum_{i=1}^{N} (y_i- \hat{y_i})^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p>从直觉上理解均方差损失，这个损失函数的最小值为 0（当预测等于真实值时），最大值为无穷大。下图是对于真实值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">y=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，不同的预测值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo>−</mo><mn>1.5</mn><mo separator="true">,</mo><mn>1.5</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[-1.5,1.5]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord">1</span><span class="mord">.</span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">5</span><span class="mclose">]</span></span></span></span>的均方差损失的变化图。横轴是不同的预测值，纵轴是均方差损失，可以看到随着预测与真实值绝对误差<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>y</mi><mo>−</mo><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|y-\hat{y}|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mord">∣</span></span></span></span>的增加，均方差损失呈二次方地增加。<br><img src="/images/MSE.jpg" alt></p><h3 id="背后的假设"><a class="markdownIt-Anchor" href="#背后的假设"></a> 背后的假设</h3><p>实际上在一定的假设下，我们可以使用<strong>最大化似然</strong>得到均方差损失的形式。假设<strong>模型预测值与真实值之间的误差服从标准高斯分布</strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>μ</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mi>σ</mi><mo>=</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\mu=0, \sigma=1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">μ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，则给定一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>模型输出真实值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的概率为</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><msqrt><mrow><mn>2</mn><mi>π</mi></mrow></msqrt></mfrac><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy="false">(</mo><mo>−</mo><mfrac><mrow><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mn>2</mn></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(y_i|x_i)=\frac{1}{\sqrt{2 \pi}} exp(- \frac{(y_i - \hat{y_i})^2}{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.4211080000000003em;vertical-align:-0.93em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.2027799999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></span></p><p>进一步我们假设数据集中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>个样本点之间相互独立，则给定所有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>输出所有真实值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>的概率，即似然（Likelihood），为所有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(y_i|x_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>的累乘</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mfrac><mn>1</mn><msqrt><mrow><mn>2</mn><mi>π</mi></mrow></msqrt></mfrac><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy="false">(</mo><mo>−</mo><mfrac><mrow><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mn>2</mn></mfrac><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(x,y)=\prod_{i=1}^N \frac{1}{\sqrt{2 \pi}} exp(- \frac{(y_i - \hat{y_i})^2}{2})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.2027799999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.90722em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span></span></span><span style="top:-2.86722em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.13278em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.93em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span></span></p><p>通常为了计算方便，我们通常最大化对数似然（Log-Likelihood）</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mi>L</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>L</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><mfrac><mi>N</mi><mn>2</mn></mfrac><mi>log</mi><mo>⁡</mo><mn>2</mn><mi>π</mi><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">LL(x,y)=\log(L(x,y))=-\frac{N}{2} \log2\pi-\frac{1}{2} \sum_{i=1}^N (y_i - \hat{y_i})^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.04633em;vertical-align:-0.686em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.36033em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p>去掉与<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{y_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span>无关的第一项，然后转化为最小化负对数似然（Negative Log-Likelihood）</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>N</mi><mi>L</mi><mi>L</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">NLL(x,y) = \frac{1}{2} \sum_{i=1}^N (y_i - \hat{y_i})^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal">L</span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p>可以看到这个实际上就是均方差损失的形式。也就是说<strong>在模型输出值与真实值的误差服从高斯分布的假设下，最小化均方差损失函数与极大似然估计本质上是一致的</strong>，因此在这个假设能被满足的场景中（比如回归），均方差损失是一个很好的损失函数选择；当这个假设没能被满足的场景中（比如分类），均方差损失不是一个好的选择。</p><h2 id="平均绝对误差损失mean-absolute-error-loss"><a class="markdownIt-Anchor" href="#平均绝对误差损失mean-absolute-error-loss"></a> 平均绝对误差损失(Mean Absolute Error Loss)</h2><h3 id="基本形式与原理-2"><a class="markdownIt-Anchor" href="#基本形式与原理-2"></a> 基本形式与原理</h3><p>平均绝对误差（MAE）是另一类常用的损失函数，也称为 L1 Loss。其基本形式如下：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>J</mi><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi mathvariant="normal">∣</mi><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">J = \frac {1}{N} \sum_{i=1}^{N} |y_i - \hat{y_i}|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mord">∣</span></span></span></span></span></p><p>同样的我们可以对这个损失函数进行可视化如下图，MAE 损失的最小值为 0（当预测等于真实值时），最大值为无穷大。可以看到随着预测与真实值绝对误差<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>y</mi><mo>−</mo><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|y-\hat{y}|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mord">∣</span></span></span></span>的增加，MAE 损失呈线性增长。<br><img src="/images/MAE.jpg" alt></p><h3 id="背后的假设-2"><a class="markdownIt-Anchor" href="#背后的假设-2"></a> 背后的假设</h3><p>同样的我们可以在一定的假设下通过<strong>最大化似然</strong>得到MAE损失的形式，假设<strong>模型预测值与真实值之间的误差服从拉普拉斯分布（Laplace distribution）</strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>μ</mi><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mi>b</mi><mo>=</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\mu=0, b=1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">μ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，则给定一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>模型输出真实值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的概率为</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy="false">(</mo><mo>−</mo><mi mathvariant="normal">∣</mi><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><mi mathvariant="normal">∣</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p(y_i|x_i)=\frac{1}{2} exp(- |y_i - \hat{y_i}|)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord">−</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mord">∣</span><span class="mclose">)</span></span></span></span></span></p><p>与上面推导MSE时类似，我们可以得到的负对数似然实际上就是 MAE 损失的形式</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mfrac><mn>1</mn><mn>2</mn></mfrac><mi>e</mi><mi>x</mi><mi>p</mi><mo stretchy="false">(</mo><mo>−</mo><mi mathvariant="normal">∣</mi><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><mi mathvariant="normal">∣</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(x,y)=\prod_{i=1}^N \frac{1}{2} exp(- |y_i - \hat{y_i}|)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal">e</span><span class="mord mathnormal">x</span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord">−</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mord">∣</span><span class="mclose">)</span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mi>L</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>N</mi><mi>ln</mi><mo>⁡</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi mathvariant="normal">∣</mi><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">LL(x,y)=N \ln \frac{1}{2} - \sum_{i=1}^N |y_i - \hat{y_i}|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mord">∣</span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>N</mi><mi>L</mi><mi>L</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi mathvariant="normal">∣</mi><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">NLL(x,y) = \sum_{i=1}^N |y_i - \hat{y_i}|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal">L</span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mord">∣</span></span></span></span></span></p><h2 id="mae与mse的区别"><a class="markdownIt-Anchor" href="#mae与mse的区别"></a> MAE与MSE的区别</h2><p>MAE 和 MSE 作为损失函数的主要区别是：MSE 损失相比 MAE 通常可以更快地收敛，但 MAE 损失对于 outlier 更加健壮，即更加不易受到 outlier 影响。<br><strong>MSE 通常比 MAE 可以更快地收敛</strong>。当使用梯度下降算法时，MSE损失的梯度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">-\hat{y_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">−</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span>，而MAE的损失的梯度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>±</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\pm 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">±</span><span class="mord">1</span></span></span></span>，即 MSE 的梯度的 scale 会随误差大小变化，而 MAE 的梯度的 scale 则一直保持为 1，即便在绝对误差<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|y_i-\hat{y_i}|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mord">∣</span></span></span></span>很小的时候 MAE 的梯度 scale 也同样为 1，这实际上是非常不利于模型的训练的。当然你可以通过在训练过程中动态调整学习率缓解这个问题，但是总的来说，损失函数梯度之间的差异导致了 MSE 在大部分时候比 MAE 收敛地更快。这个也是 MSE 更为流行的原因。<br><strong>MAE 对于 outlier 更加 robust</strong>。我们可以从两个角度来理解这一点：</p><ul><li>第一个角度是直观地理解，下图是 MAE 和 MSE 损失画到同一张图里面，由于MAE 损失与绝对误差之间是线性关系，MSE 损失与误差是平方关系，当误差非常大的时候，MSE 损失会远远大于 MAE 损失。因此当数据中出现一个误差非常大的 outlier 时，MSE 会产生一个非常大的损失，对模型的训练会产生较大的影响。</li></ul><p><img src="/images/MSE_MAE1.jpg" alt></p><ul><li>第二个角度是从两个损失函数的假设出发，MSE 假设了误差服从高斯分布，MAE 假设了误差服从拉普拉斯分布。拉普拉斯分布本身对于 outlier 更加健壮。参考下图（来源：Machine Learning: A Probabilistic Perspective 2.4.3 The Laplace distribution Figure 2.8），当右图右侧出现了 outliers 时，拉普拉斯分布相比高斯分布受到的影响要小很多。因此以拉普拉斯分布为假设的 MAE 对 outlier 比高斯分布为假设的 MSE 更加 robust。</li></ul><p><img src="/images/MSE_MAE2.jpg" alt></p><h2 id="huber-loss"><a class="markdownIt-Anchor" href="#huber-loss"></a> Huber Loss</h2><h3 id="基本形式与原理-3"><a class="markdownIt-Anchor" href="#基本形式与原理-3"></a> 基本形式与原理</h3><p>上文我们分别介绍了 MSE 和 MAE 损失以及各自的优缺点，MSE 损失收敛快但容易受 outlier 影响，MAE 对 outlier 更加健壮但是收敛慢。Huber Loss 则是一种将 MSE 与 MAE 结合起来，取两者优点的损失函数，也被称作<strong>Smooth Mean Absolute Error Loss</strong>。<br>其原理很简单，就是在误差接近 0 时使用 MSE，误差较大时使用 MAE，公式为</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>J</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mn>1</mn><mi>N</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><mfrac><mrow><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mn>2</mn></mfrac></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">∣</mi><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><mi mathvariant="normal">∣</mi><mo>≤</mo><mi>δ</mi><mspace linebreak="newline"></mspace><mfrac><mn>1</mn><mi>N</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><mi>δ</mi><mi mathvariant="normal">∣</mi><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><mi mathvariant="normal">∣</mi><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msup><mi>δ</mi><mn>2</mn></msup></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">∣</mi><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><mi mathvariant="normal">∣</mi><mo>&gt;</mo><mi>δ</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">J = \begin{cases} \frac{1}{N} \sum_{i=1}^N \frac{(y_i - \hat{y_i})^2}{2} &amp; | y_i - \hat{y_i}| \leq \delta \newline \frac{1}{N} \sum_{i=1}^N \delta |y_i - \hat{y_i}| - \frac{1}{2} \delta^2 &amp; | y_i - \hat{y_i}| &gt; \delta \end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.02046em;"><span style="top:-3.02046em;"><span class="pstrut" style="height:3.10892em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10892em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord accent mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord mtight">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52046em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.02046em;"><span style="top:-3.02046em;"><span class="pstrut" style="height:3.10892em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mspace newline"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52046em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.02046em;"><span style="top:-3.02046em;"><span class="pstrut" style="height:3.10892em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52046em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>上式中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span>是 Huber Loss 的一个超参数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span>的值是 MSE 和 MAE 两个损失连接的位置。上式等号右边第一项是 MSE 的部分，第二项是 MAE 部分，在 MAE 的部分公式为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi><mi mathvariant="normal">∣</mi><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><mi mathvariant="normal">∣</mi><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msup><mi>δ</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\delta|y_i - \hat{y_i}| - \frac{1}{2} \delta^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>是为了保证误差<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>y</mi><mo>−</mo><mover accent="true"><mi>y</mi><mo>^</mo></mover><mi mathvariant="normal">∣</mi><mo>=</mo><mo>±</mo><mi>δ</mi></mrow><annotation encoding="application/x-tex">|y-\hat{y}|=\pm \delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord">±</span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span>时 MAE 和 MSE 的取值一致，进而保证 Huber Loss连续可导。<br>下图是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi><mo>=</mo><mn>1.0</mn></mrow><annotation encoding="application/x-tex">\delta = 1.0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">0</span></span></span></span>时的 Huber Loss，可以看到在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mo>−</mo><mi>δ</mi><mo separator="true">,</mo><mi>δ</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[-\delta, \delta]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mclose">]</span></span></span></span>的区间内实际上就是 MSE 损失，在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mo>−</mo><mi mathvariant="normal">∞</mi><mo separator="true">,</mo><mi>δ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(-\infty, \delta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">∞</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mclose">)</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>δ</mi><mo separator="true">,</mo><mi mathvariant="normal">∞</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\delta, \infty)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∞</span><span class="mclose">)</span></span></span></span>区间内为 MAE损失。<br><img src="/images/HuberLoss.jpg" alt></p><h3 id="特点"><a class="markdownIt-Anchor" href="#特点"></a> 特点</h3><p>Huber Loss 结合了 MSE 和 MAE 损失，在误差接近 0 时使用 MSE，使损失函数可导并且梯度更加稳定；在误差较大时使用 MAE 可以降低 outlier 的影响，使训练对 outlier 更加健壮。缺点是需要额外地设置一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span>超参数。</p><h2 id="分位数损失quantile-loss"><a class="markdownIt-Anchor" href="#分位数损失quantile-loss"></a> 分位数损失(Quantile Loss)</h2><p>分位数回归 Quantile Regression 是一类在实际应用中非常有用的回归算法，通常的回归算法是拟合目标值的期望或者中位数，而分位数回归可以通过给定不同的分位点，拟合目标值的不同分位数。例如我们可以分别拟合出多个分位点，得到一个置信区间，如下图所示。<br><img src="/images/%E5%88%86%E4%BD%8D%E6%95%B0%E5%9B%9E%E5%BD%92.jpg" alt><br>分位数回归是通过使用分位数损失 Quantile Loss 来实现这一点的，分位数损失形式如下，式中的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span>是分位数系数。</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>J</mi><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mn>1</mn><mi>N</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>r</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><mi mathvariant="normal">∣</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><mo>≥</mo><msub><mi>y</mi><mi>i</mi></msub><mspace linebreak="newline"></mspace><mfrac><mn>1</mn><mi>N</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><mi>r</mi><mi mathvariant="normal">∣</mi><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><mi mathvariant="normal">∣</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><mo>&lt;</mo><msub><mi>y</mi><mi>i</mi></msub></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">J = \begin{cases} \frac{1}{N}\sum_{i=1}^{N} (1-r)|y_i - \hat{y_i}| &amp;  \hat{y_i}\geq y_i \newline \frac{1}{N}\sum_{i=1}^{N} r|y_i-\hat{y_i}| &amp; \hat{y_i}&lt; y_i \end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.80002em;vertical-align:-0.65002em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9699999999999999em;"><span style="top:-2.9699999999999998em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">)</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4700000000000001em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9699999999999999em;"><span style="top:-2.9699999999999998em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace newline"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.981231em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4700000000000001em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9699999999999999em;"><span style="top:-2.9699999999999998em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4700000000000001em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>如何理解这个损失函数呢？这个损失函数是一个分段的函数 ，将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><mo>≥</mo><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\hat{y_i} \geq y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>（高估） 和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><mo>&lt;</mo><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\hat{y_i} &lt; y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>（低估） 两种情况分开来，并分别给予不同的系数。当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mo>&gt;</mo><mn>0.5</mn></mrow><annotation encoding="application/x-tex">r&gt;0.5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span></span></span></span>时，低估的损失要比高估的损失更大，反过来当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mo>&lt;</mo><mn>0.5</mn></mrow><annotation encoding="application/x-tex">r&lt;0.5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span></span></span></span>时，高估的损失比低估的损失大；分位数损失实现了<strong>分别用不同的系数控制高估和低估的损失，进而实现分位数回归</strong>。特别地，当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mo>=</mo><mn>0.5</mn></mrow><annotation encoding="application/x-tex">r=0.5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span></span></span></span>时，分位数损失退化为 MAE 损失，从这里可以看出 MAE 损失实际上是分位数损失的一个特例 — 中位数回归（这也可以解释为什么 MAE 损失对 outlier 更鲁棒：MSE 回归期望值，MAE 回归中位数，通常 outlier 对中位数的影响比对期望值的影响小）。</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>J</mi><mrow><mi>r</mi><mo>=</mo><mn>0.5</mn></mrow></msup><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi mathvariant="normal">∣</mi><msub><mi>y</mi><mi>i</mi></msub><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">J^{r=0.5} = \frac {1}{N} \sum_{i=1}^{N} |y_i- \hat{y_i}|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8641079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mrel mtight">=</span><span class="mord mtight">0</span><span class="mord mtight">.</span><span class="mord mtight">5</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mord">∣</span></span></span></span></span></p><p>下图是取不同的分位点 0.2、0.5、0.6 得到的三个不同的分位损失函数的可视化，可以看到 0.2 和 0.6 在高估和低估两种情况下损失是不同的，而 0.5 实际上就是 MAE。<br><img src="/images/%E5%88%86%E4%BD%8D%E6%95%B0%E6%8D%9F%E5%A4%B1.jpg" alt></p><h2 id="交叉熵损失cross-entropy-loss"><a class="markdownIt-Anchor" href="#交叉熵损失cross-entropy-loss"></a> 交叉熵损失(Cross Entropy Loss)</h2><p>对于分类问题，最常用的损失函数是交叉熵损失函数Cross Entropy Loss。</p><h3 id="二分类"><a class="markdownIt-Anchor" href="#二分类"></a> 二分类</h3><p>考虑二分类。在二分类中我们通常使用 Sigmoid 函数将模型的输出压缩到 (0, 1) 区间内<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><mo>∈</mo><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\hat{y_i} \in (0,1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，用来表示给定输入<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，模型判断为正类的概率。由于只有正负两类，因此同时也得到了负类的概率。</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">p(y_i = 1 | x_i) = \hat{y_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><mn>0</mn><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">p(y_i = 0 | x_i) = 1-\hat{y_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span></span></p><p>将两条式子合并成一条</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><msup><mo stretchy="false">)</mo><msub><mi>y</mi><mi>i</mi></msub></msup><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><msup><mo stretchy="false">)</mo><mrow><mn>1</mn><mo>−</mo><msub><mi>y</mi><mi>i</mi></msub></mrow></msup></mrow><annotation encoding="application/x-tex">p(y_i | x_i) = (\hat{y_i})^{y_i} (1-\hat{y_i})^{1-y_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714392em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>假设数据点之间独立同分布，则似然可以表示为</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mo stretchy="false">(</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><msup><mo stretchy="false">)</mo><msub><mi>y</mi><mi>i</mi></msub></msup><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><msup><mo stretchy="false">)</mo><mrow><mn>1</mn><mo>−</mo><msub><mi>y</mi><mi>i</mi></msub></mrow></msup></mrow><annotation encoding="application/x-tex">L(x,y)=\prod_{i=1}^N (\hat{y_i})^{y_i} (1-\hat{y_i})^{1-y_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714392em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1141079999999999em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.864108em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>对似然取对数，然后加负号变成最小化负对数似然，即为交叉熵损失函数的形式</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>N</mi><mi>L</mi><mi>L</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>J</mi><mrow><mi>C</mi><mi>E</mi></mrow></msub><mo>=</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mrow><mo fence="true">(</mo><msub><mi>y</mi><mi>i</mi></msub><mrow><mi mathvariant="double-struck">l</mi><mi mathvariant="double-struck">o</mi><mi mathvariant="double-struck">g</mi><mo stretchy="false">(</mo></mrow><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mrow><mi mathvariant="double-struck">l</mi><mi mathvariant="double-struck">o</mi><mi mathvariant="double-struck">g</mi></mrow><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">NLL(x, y)=J_{CE}=-\sum_{i=1}^N\left (y_i\mathbb{log(}\hat{y_i}) + (1- y_i)\mathbb{log}(1-\hat{y_i})\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal">L</span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.09618em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p><p>下图是对二分类的交叉熵损失函数的可视化，蓝线是目标值为 0 时输出不同输出的损失，黄线是目标值为 1 时的损失。可以看到约接近目标值损失越小，随着误差变差，损失呈指数增长。<br><img src="/images/CE_Loss.jpg" alt="CE Loss.jpg"></p><h3 id="多分类"><a class="markdownIt-Anchor" href="#多分类"></a> 多分类</h3><p>在多分类的任务中，交叉熵损失函数的推导思路和二分类是一样的，变化的地方是真实值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>现在是一个 One-hot 向量，同时模型输出的压缩由原来的 Sigmoid 函数换成 Softmax 函数。Softmax 函数将每个维度的输出范围都限定在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(0,1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>之间，同时所有维度的输出和为 1，用于表示一个概率分布。</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>p</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∏</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><mo stretchy="false">(</mo><msup><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><mi>k</mi></msup><msup><mo stretchy="false">)</mo><msubsup><mi>y</mi><mi>i</mi><mi>k</mi></msubsup></msup></mrow><annotation encoding="application/x-tex">p(y_i|x_i) = \prod_{k=1}^K(\hat{y_i}^k)^{y_i^k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">p</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1304490000000005em;vertical-align:-1.302113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9334479999999998em;"><span style="top:-3.1473400000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0619199999999998em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9270285714285713em;"><span style="top:-2.214em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi><mo>∈</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">k \in K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>表示<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>个类别中的一类，同样地，假设数据点之间独立同分布，可得到负对数似然为</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>N</mi><mi>L</mi><mi>L</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>J</mi><mrow><mi>C</mi><mi>E</mi></mrow></msub><mo>=</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><msubsup><mi>y</mi><mi>i</mi><mi>k</mi></msubsup><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><msup><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><mi>k</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">NLL(x,y) = J_{CE} = - \sum_{i=1}^N \sum_{k=1}^K y_i^k \log(\hat{y_i}^k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal">L</span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.09618em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1304490000000005em;vertical-align:-1.302113em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9334479999999998em;"><span style="top:-3.1473400000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>由于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是一个 one-hot 向量，除了目标类为 1 之外其他类别上的输出都为 0，因此上式也可以写为</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>J</mi><mrow><mi>C</mi><mi>E</mi></mrow></msub><mo>=</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msubsup><mi>y</mi><mi>i</mi><msub><mi>c</mi><mi>i</mi></msub></msubsup><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><msup><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><msub><mi>c</mi><mi>i</mi></msub></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J_{CE} = - \sum_{i=1}^N y_i^{c_i} \log(\hat{y_i}^{c_i})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.09618em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.746292em;"><span style="top:-2.4231360000000004em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1449em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.27686399999999994em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.748732em;"><span style="top:-3.1473400000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>c</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">c_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是样本<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的目标类。通常这个应用于多分类的交叉熵损失函数也被称为 Softmax Loss 或者 Categorical Cross Entropy Loss。</p><h3 id="背后的假设-3"><a class="markdownIt-Anchor" href="#背后的假设-3"></a> 背后的假设</h3><p>分类中为什么不用均方差损失？上文在介绍均方差损失的时候讲到实际上均方差损失假设了误差服从高斯分布，在分类任务下这个假设没办法被满足，因此效果会很差。为什么是交叉熵损失呢？有两个角度可以解释这个事情，一个角度从最大似然的角度，也就是我们上面的推导；另一个角度是可以用信息论来解释交叉熵损失：</p><p>假设对于样本<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>存在一个最优分布<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>y</mi><mi>i</mi><mo lspace="0em" rspace="0em">∗</mo></msubsup></mrow><annotation encoding="application/x-tex">y_i^{\ast}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.94736em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.441336em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span>真实地表明了这个样本属于各个类别的概率，那么我们希望模型的输出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{y_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span>尽可能地逼近这个最优分布，在信息论中，我们可以使用 KL 散度（Kullback–Leibler Divergence）来衡量两个分布的相似性。给定分布<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span>和分布<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span>，两者的 KL 散度公式如下</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>K</mi><mi>L</mi><mo stretchy="false">(</mo><mi>p</mi><mo separator="true">,</mo><mi>q</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><msup><mi>p</mi><mi>k</mi></msup><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><msup><mi>p</mi><mi>k</mi></msup><mo stretchy="false">)</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><msup><mi>p</mi><mi>k</mi></msup><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><msup><mi>q</mi><mi>k</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">KL(p,q) = \sum_{k=1}^K p^k \log(p^k) - \sum_{k=1}^K p^k \log(q^k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1304490000000005em;vertical-align:-1.302113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.1304490000000005em;vertical-align:-1.302113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>其中第一项为分布<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span>的信息熵，第二项为分布<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span>的交叉熵。将最优分布<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>y</mi><mi>i</mi><mo lspace="0em" rspace="0em">∗</mo></msubsup></mrow><annotation encoding="application/x-tex">y_i^{\ast}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.94736em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.441336em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span>和输出分布<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover></mrow><annotation encoding="application/x-tex">\hat{y_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span>带入<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span>得到</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>K</mi><mi>L</mi><mo stretchy="false">(</mo><msubsup><mi>y</mi><mi>i</mi><mo lspace="0em" rspace="0em">∗</mo></msubsup><mo separator="true">,</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><msubsup><mi>y</mi><mi>i</mi><mrow><mo>∗</mo><mi>k</mi></mrow></msubsup><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><msubsup><mi>y</mi><mi>i</mi><mrow><mo>∗</mo><mi>k</mi></mrow></msubsup><mo stretchy="false">)</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><msubsup><mi>y</mi><mi>i</mi><mrow><mo>∗</mo><mi>k</mi></mrow></msubsup><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><msup><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><mi>k</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">KL(y_i^{\ast}, \hat{y_i}) = \sum_{k=1}^K y_i^{\ast k} \log(y_i^{\ast k}) - \sum_{k=1}^K y_i^{\ast k} \log(\hat{y_i}^k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7386959999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1304490000000005em;vertical-align:-1.302113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:3.1304490000000005em;vertical-align:-1.302113em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9334479999999998em;"><span style="top:-3.1473400000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>由于我们希望两个分布尽量相近，因此我们最小化 KL 散度。同时由于上式第一项信息熵仅与最优分布本身相关，因此我们在最小化的过程中可以忽略掉，变成最小化</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo>−</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><msubsup><mi>y</mi><mi>i</mi><mrow><mo>∗</mo><mi>k</mi></mrow></msubsup><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><msup><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><mi>k</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">- \sum_{k=1}^K y_i^{\ast k} \log(\hat{y_i}^k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.1304490000000005em;vertical-align:-1.302113em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9334479999999998em;"><span style="top:-3.1473400000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>我们并不知道最优分布<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>y</mi><mi>i</mi><mo lspace="0em" rspace="0em">∗</mo></msubsup></mrow><annotation encoding="application/x-tex">y_i^{\ast}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.94736em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.441336em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span>，但训练数据里面的目标值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>可以看做是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>y</mi><mi>i</mi><mo lspace="0em" rspace="0em">∗</mo></msubsup></mrow><annotation encoding="application/x-tex">y_i^{\ast}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.94736em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-2.441336em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∗</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span>的一个近似分布</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo>−</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><msubsup><mi>y</mi><mi>i</mi><mi>k</mi></msubsup><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><msup><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><mi>k</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">- \sum_{k=1}^K y_i^{k} \log(\hat{y_i}^k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.1304490000000005em;vertical-align:-1.302113em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9334479999999998em;"><span style="top:-3.1473400000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>这个是针对单个训练样本的损失函数，如果考虑整个数据集，则</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>J</mi><mrow><mi>K</mi><mi>L</mi></mrow></msub><mo>=</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><msubsup><mi>y</mi><mi>i</mi><mi>k</mi></msubsup><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><msup><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><mi>k</mi></msup><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msubsup><mi>y</mi><mi>i</mi><msub><mi>c</mi><mi>i</mi></msub></msubsup><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><msup><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><msub><mi>c</mi><mi>i</mi></msub></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J_{KL} = - \sum_{i=1}^N \sum_{k=1}^K y_i^{k} \log(\hat{y_i}^k) = - \sum_{i=1}^N y_i^{c_i} \log(\hat{y_i}^{c_i})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.09618em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span><span class="mord mathnormal mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.1304490000000005em;vertical-align:-1.302113em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.8478869999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.300005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.302113em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999998em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9334479999999998em;"><span style="top:-3.1473400000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.746292em;"><span style="top:-2.4231360000000004em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.1449em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.27686399999999994em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.748732em;"><span style="top:-3.1473400000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>可以看到<strong>通过最小化交叉熵的角度推导出来的结果和使用最大 化似然得到的结果是一致的</strong>。</p><h2 id="合页损失hinge-loss"><a class="markdownIt-Anchor" href="#合页损失hinge-loss"></a> 合页损失(Hinge Loss)</h2><p>合页损失 Hinge Loss 是另外一种二分类损失函数，适用于 maximum-margin 的分类，支持向量机（SVM）模型的损失函数本质上就是 Hinge Loss + L2 正则化。合页损失的公式如下</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>J</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mi>max</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo>−</mo><mi>s</mi><mi>g</mi><mi>n</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mover accent="true"><msub><mi>y</mi><mi>i</mi></msub><mo>^</mo></mover><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J = \sum_{i=1}^N \max(0,1 - sgn(y_i)\hat{y_i})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.106005em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283360000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">max</span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>下图是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>为正类， 即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>g</mi><mi>n</mi><mo stretchy="false">(</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">sgn(y)=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>时，不同输出的合页损失示意图<br><img src="/images/%E5%90%88%E9%A1%B5%E6%8D%9F%E5%A4%B1.jpg" alt><br>可以看到当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>为正类时，模型输出负值会有较大的惩罚，当模型输出为正值且在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(0,1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>区间时还会有一个较小的惩罚。即合页损失不仅惩罚预测错的，并且对于预测对了但是置信度不高的也会给一个惩罚，只有置信度高的才会有零损失。使用合页损失直觉上理解是要<strong>找到一个决策边界，使得所有数据点被这个边界正确地、高置信地被分类</strong>。</p><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p>首先是适用于回归的均方差损失（Mean Squared Loss）、平均绝对误差损失（Mean Absolute Error Loss），两者的区别以及两者相结合得到的 Huber Loss，接着是应用于分位数回归的分位数损失 Quantile Loss，表明了平均绝对误差损失实际上是分位数损失的一种特例。<br>在分类场景下，本文讨论了最常用的交叉熵损失函数 Cross Entropy Loss，包括二分类和多分类下的形式，并从信息论的角度解释了交叉熵损失函数，最后简单介绍了应用于 SVM 中的 Hinge 损失 Hinge Loss。<br>另外通常在损失函数中还会有正则项（L1/L2 正则），这些正则项作为损失函数的一部分，通过约束参数的绝对值大小以及增加参数稀疏性来降低模型的复杂度，防止模型过拟合，这部分内容在本文中也没有详细展开。</p><h2 id="参考资料"><a class="markdownIt-Anchor" href="#参考资料"></a> 参考资料</h2><ul><li><a href="https://www.cs.ubc.ca/~murphyk/MLbook/" target="_blank" rel="noopener">Machine Learning: A Probabilistic Perspective</a></li><li><a href="https://rohanvarma.me/Loss-Functions/" target="_blank" rel="noopener">Picking Loss Functions - A comparison between MSE, Cross Entropy, and Hinge Loss</a></li><li><a href="https://heartbeat.fritz.ai/5-regression-loss-functions-all-machine-learners-should-know-4fb140e9d4b0" target="_blank" rel="noopener">5 Regression Loss Functions All Machine Learners Should Know</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础知识 </tag>
            
            <tag> 数学 </tag>
            
            <tag> 损失函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DTW算法原理与实现</title>
      <link href="/2023/06/16/suan-fa/dtw-suan-fa-yuan-li-yu-shi-xian/"/>
      <url>/2023/06/16/suan-fa/dtw-suan-fa-yuan-li-yu-shi-xian/</url>
      
        <content type="html"><![CDATA[<h1 id="dtw算法原理与实现"><a class="markdownIt-Anchor" href="#dtw算法原理与实现"></a> DTW算法原理与实现</h1><p>Dynamic Time Warping（动态时间规整，简称DTW）是时间序列分析的经典算法，用来比较两个时间序列之间的距离。</p><h2 id="基本原理"><a class="markdownIt-Anchor" href="#基本原理"></a> 基本原理</h2><p>DTW最初用于识别语音的相似性。我们用数字表示音调高低，例如某个单词发音的音调为1-3-2-4。现在有两个人说这个单词，一个人在前半部分拖长，其发音为1-1-3-3-2-4；另一个人在后半部分拖长，其发音为1-3-2-2-4-4。</p><p><img src="/images/%E4%B8%A4%E4%B8%AA%E5%BA%8F%E5%88%97.png" alt></p><p>现在要计算1-1-3-3-2-4和1-3-2-2-4-4两个序列的距离（距离越小，相似度越高）。因为两个序列代表同一个单词，所以希望算出的距离越小越好，这样把两个序列识别为同一单词的概率就越大。</p><p>先用传统方法计算两个序列的欧几里得距离，即计算两个序列各个对应的点之间的距离之和。</p><p><img src="/images/%E4%B8%A4%E4%B8%AA%E5%BA%8F%E5%88%97%E7%9A%84%E6%AC%A7%E5%BC%8F%E8%B7%9D%E7%A6%BB.png" alt></p><p>两个序列之间的距离计算如下述公式</p><pre class="highlight"><code class="plain">距离之和 = |A(1)-B(1)| + |A(2)-B(2)| + |A(3)-B(3)| + |A(4)-B(4)| + |A(5)-B(5)| + |A(6)-B(6)|= |1-1| + |1-3| + |3-2| + |3-2| + |2-4| + |4-4|= 6</code></pre><p>如果允许序列的点与另一序列的多个连续的点相对应（相当于把这个点所代表的音调的发音时间延长），然后再计算对应点之间的距离之和。如下图：B(1)与A(1)、A(2)相对应，B(2)与A(3)、A(4)相对应，A(5)与B(3)、B(4)相对应，A(6)与B(5)、B(6)相对应。</p><p><img src="/images/%E4%B8%A4%E4%B8%AA%E5%BA%8F%E5%88%97%E7%9A%84%E8%A7%84%E6%95%B4%E8%B7%9D%E7%A6%BB.png" alt></p><p>规整之后两个序列之间的距离计算如下述公式</p><pre class="highlight"><code class="plain">距离之和= |A(1)-B(1)| + |A(2)-B(1)| + |A(3)-B(2)| + |A(4)-B(2)| + |A(5)-B(3)| + |A(5)-B(4)| + |A(6)-B(5)| + |A(6)-B(6)| = |1-1| + |1-1| + |3-3| + |3-3| + |2-2| + |2-2| + |4-4| + |4-4|= 0</code></pre><p>把这种“可以把序列某个时刻的点跟另一序列多个连续时刻的点相对应”的做法称为时间规整（Time Warping）。现在用一个6*6矩阵M表示序列A(1-1-3-3-2-4)和序列B(1-3-2-2-4-4)各个点之间的距离，M(i, j)等于A的第i个点和B的第j个点之间的距离，即</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo stretchy="false">(</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">∣</mi><mi>A</mi><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo>−</mo><mi>B</mi><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mo separator="true">,</mo><mi>i</mi><mo>≤</mo><mi>i</mi><mo separator="true">,</mo><mi>j</mi><mo>≤</mo><mn>6</mn></mrow><annotation encoding="application/x-tex">M(i,j)=|A(i)-B(j)|, i \le i, j \le 6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal">A</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">)</span><span class="mord">∣</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">i</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span></span></span></span></p><p><img src="/images/dtw_path.png" alt></p><p>灰色的路径表示欧氏距离对应的两个序列的点，正好是对角线；红色的路径表示时间规整方法对应的两个序列的点。</p><p>因此，DTW算法的步骤为：</p><ol><li><strong>计算两个序列各个点之间的距离矩阵。</strong></li><li><strong>寻找一条从矩阵左上角到右下角的路径，使得路径上的元素和最小。</strong></li></ol><p>称路径上的元素和为路径长度。那么如何寻找长度最小的路径呢？</p><h2 id="dtw求解"><a class="markdownIt-Anchor" href="#dtw求解"></a> DTW求解</h2><p>矩阵从左上角到右下角的路径长度有以下性质：</p><ol><li>当前路径长度 = 前一步的路径长度 + 当前元素的大小</li><li>对于路径上的某个元素(i, j)，它的前一步的路径长度只可能为以下三者之一：<ul><li>左边的相邻元素 (i, j-1)</li><li>上面的相邻元素 (i-1, j)</li><li>左上方的相邻元素 (i-1, j-1)</li></ul></li></ol><p>即可使用动态规划的思想求解：</p><pre class="highlight"><code class="python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">_traceback</span>(<span class="hljs-params">D</span>):    <span class="hljs-string">&#x27;&#x27;&#x27;    根据代价矩阵回溯路径    &#x27;&#x27;&#x27;</span>    i, j = array(D.shape) - <span class="hljs-number">1</span>    path = [(i,j)]    <span class="hljs-keyword">while</span> ((i &gt; <span class="hljs-number">0</span>) <span class="hljs-keyword">or</span> (j &gt; <span class="hljs-number">0</span>)):        back = argmin((D[i-<span class="hljs-number">1</span>, j-<span class="hljs-number">1</span>], D[i, j-<span class="hljs-number">1</span>], D[i-<span class="hljs-number">1</span>, j]))        <span class="hljs-keyword">if</span> (back == <span class="hljs-number">0</span>):            i -= <span class="hljs-number">1</span>            j -= <span class="hljs-number">1</span>        <span class="hljs-keyword">elif</span> (back == <span class="hljs-number">1</span>):            j -= <span class="hljs-number">1</span>        <span class="hljs-keyword">else</span>:            i -= <span class="hljs-number">1</span>        path.append((i,j))    <span class="hljs-keyword">return</span> <span class="hljs-built_in">list</span>(<span class="hljs-built_in">reversed</span>(path))<span class="hljs-keyword">def</span> <span class="hljs-title function_">dtw_distance</span>(<span class="hljs-params">ts_a, ts_b, d=<span class="hljs-keyword">lambda</span> x,y: <span class="hljs-built_in">abs</span>(<span class="hljs-params">x-y</span>), mww=np.inf</span>):    <span class="hljs-string">&quot;&quot;&quot;Computes dtw distance between two time series        Args:        ts_a: time series a        ts_b: time series b        d: distance function        mww: max warping window, int, optional (default = infinity)            Returns:        dtw distance    &quot;&quot;&quot;</span>        <span class="hljs-comment"># Create cost matrix via broadcasting with large int</span>    ts_a, ts_b = np.array(ts_a), np.array(ts_b)    M, N = <span class="hljs-built_in">len</span>(ts_a), <span class="hljs-built_in">len</span>(ts_b)    cost = np.ones((M, N))    <span class="hljs-comment"># Initialize the first row and column</span>    cost[<span class="hljs-number">0</span>, <span class="hljs-number">0</span>] = d(ts_a[<span class="hljs-number">0</span>], ts_b[<span class="hljs-number">0</span>])    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, M):        cost[i, <span class="hljs-number">0</span>] = cost[i-<span class="hljs-number">1</span>, <span class="hljs-number">0</span>] + d(ts_a[i], ts_b[<span class="hljs-number">0</span>])    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, N):        cost[<span class="hljs-number">0</span>, j] = cost[<span class="hljs-number">0</span>, j-<span class="hljs-number">1</span>] + d(ts_a[<span class="hljs-number">0</span>], ts_b[j])    <span class="hljs-comment"># Populate rest of cost matrix within window</span>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, M):        <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">max</span>(<span class="hljs-number">1</span>, i - mww), <span class="hljs-built_in">min</span>(N, i + mww)):            choices = cost[i-<span class="hljs-number">1</span>, j-<span class="hljs-number">1</span>], cost[i, j-<span class="hljs-number">1</span>], cost[i-<span class="hljs-number">1</span>, j]            cost[i, j] = <span class="hljs-built_in">min</span>(choices) + d(ts_a[i], ts_b[j])    <span class="hljs-comment"># Return DTW distance given window </span>    <span class="hljs-keyword">return</span> cost[-<span class="hljs-number">1</span>, -<span class="hljs-number">1</span>], _traceback(cost)</code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法知识 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常见的最优化方法</title>
      <link href="/2023/05/13/shu-xue/chang-jian-de-zui-you-hua-fang-fa/"/>
      <url>/2023/05/13/shu-xue/chang-jian-de-zui-you-hua-fang-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="常见的最优化方法"><a class="markdownIt-Anchor" href="#常见的最优化方法"></a> 常见的最优化方法</h1><p>我们每个人都会遇到各种各样的最优化问题，比如”在一定成本下，如何使利润最大化“等。<strong>最优化方法是一种数学方法，它是研究在给定约束之下如何寻求某些因素(的量)，以使某一(或某些)指标达到最优的一些学科的总称</strong>。大部分的机器学习算法的本质都是建立优化模型，通过最优化方法对目标函数（或损失函数）进行优化，从而训练出最好的模型。<br>常见的最优化方法有<strong>梯度下降法</strong>、<strong>牛顿法和拟牛顿法</strong>、<strong>共轭梯度法</strong>等等。</p><h2 id="梯度下降法"><a class="markdownIt-Anchor" href="#梯度下降法"></a> 梯度下降法</h2><p>梯度下降法是最早最简单，也是最为常用的最优化方法。<br>梯度下降法实现简单，当目标函数是凸函数时，梯度下降法的解是全局解。一般情况下，其解不保证是全局最优解，梯度下降法的速度也未必是最快的。**梯度下降法的优化思想是用当前位置负梯度方向作为搜索方向，因为该方向为当前位置的最快下降方向，所以也被称为是”最速下降法“。最速下降法越接近目标值，步长越小，前进越慢。**梯度下降法的搜索迭代示意图如下图所示：<br><img src="/images/350px-Gradient_descent.png" alt></p><p><strong>梯度下降法的缺点：</strong></p><ol><li>靠近极小值时收敛速度减慢，如下图所示；</li><li>直线搜索时可能会产生一些问题；</li><li>可能会“之字形”地下降。</li></ol><p><img src="/images/Banana-SteepDesc.gif" alt><br>从上图可以看出，梯度下降法在接近最优解的区域收敛速度明显变慢，利用梯度下降法求解需要很多次的迭代。在机器学习中，基于基本的梯度下降法发展了两种梯度下降方法，分别为<strong>随机梯度下降法</strong>和<strong>批量梯度下降法</strong>。<br>比如对一个线性回归模型，假设下面的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>是要拟合的函数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J(\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span>为损失函数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span>是参数，要迭代求解的值，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span>求解出来了那最终要拟合的函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h(\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span>就出来了。其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span>是训练集的样本个数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>是特征的个数。</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>h</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>0</mn></mrow><mi>n</mi></munderover><msub><mi>θ</mi><mi>j</mi></msub><msub><mi>x</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">h(\theta)=\sum_{j=0}^n \theta_j x_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">h</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0651740000000007em;vertical-align:-1.4137769999999998em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000007em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>m</mi></mrow></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mo stretchy="false">(</mo><msup><mi>y</mi><mi>i</mi></msup><mo>−</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mi>i</mi></msup><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">J(\theta)= \frac{1}{2m} \sum_{i=1}^m (y^i - h_{\theta}(x^i))^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1246639999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><h3 id="批量梯度下降法batch-gradient-descent-bgd"><a class="markdownIt-Anchor" href="#批量梯度下降法batch-gradient-descent-bgd"></a> 批量梯度下降法（Batch Gradient Descent, BGD）</h3><p>将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J(\theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span>对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span>求偏导，得到每个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span>对应的的梯度：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>J</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>θ</mi><mi>j</mi></msub></mrow></mfrac><mo>=</mo><mo>−</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mo stretchy="false">(</mo><msup><mi>y</mi><mi>i</mi></msup><mo>−</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mi>i</mi></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo><msubsup><mi>x</mi><mi>j</mi><mi>i</mi></msubsup></mrow><annotation encoding="application/x-tex">\frac{\partial J(\theta)}{\partial \theta_j}=- \frac{1}{m} \sum_{i=1}^m (y^i - h_{\theta}(x^i))x_j^i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.399108em;vertical-align:-0.972108em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2577720000000001em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>由于是要最小化代价函数，所以按每个参数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span>的梯度负方向，来更新每个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span>：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>θ</mi><mi>j</mi></msub><mo>=</mo><msub><mi>θ</mi><mi>j</mi></msub><mo>+</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mo stretchy="false">(</mo><msup><mi>y</mi><mi>i</mi></msup><mo>−</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mi>i</mi></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo><msubsup><mi>x</mi><mi>j</mi><mi>i</mi></msubsup></mrow><annotation encoding="application/x-tex">\theta_j = \theta_j + \frac{1}{m} \sum_{i=1}^m (y^i - h_{\theta}(x^i))x_j^i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2577720000000001em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>从上面公式可以注意到，它得到的是一个全局最优解，但是<strong>每迭代一步，都要用到训练集所有的数据</strong>。如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span>很大，那么可想而知这种方法的迭代速度会相当的慢。对于批量梯度下降法，样本个数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span>，样本<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>维向量，一次迭代需要把<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span>个样本全部带入计算，迭代一次计算量为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>∗</mo><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">m*n^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>。<br>所以，这就引入了另外一种方法——随机梯度下降。</p><h3 id="随机梯度下降stochastic-gradient-descentsgd"><a class="markdownIt-Anchor" href="#随机梯度下降stochastic-gradient-descentsgd"></a> 随机梯度下降（Stochastic Gradient Descent，SGD）</h3><p>上面的代价函数可以写成如下这种形式，损失函数对应的是训练集中每个样本的梯度，而上面批量梯度下降对应的是所有的训练样本：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>J</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><msup><mi>y</mi><mi>i</mi></msup><mo>−</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mi>i</mi></msup><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>=</mo><mfrac><mn>1</mn><mi>m</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></munderover><mi>cos</mi><mo>⁡</mo><mi>t</mi><mo stretchy="false">(</mo><mi>θ</mi><mo separator="true">,</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mi>i</mi></msup><mo separator="true">,</mo><msup><mi>y</mi><mi>i</mi></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">J(\theta)= \frac{1}{m} \sum_{i=1}^m \frac{1}{2} (y^i - h_{\theta}(x^i))^2 = \frac{1}{m} \sum_{i=1}^m \cos t(\theta, (x^i,y^i))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1246639999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">m</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></span></p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>cos</mi><mo>⁡</mo><mi>t</mi><mo stretchy="false">(</mo><mi>θ</mi><mo separator="true">,</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mi>i</mi></msup><mo separator="true">,</mo><msup><mi>y</mi><mi>i</mi></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><msup><mi>y</mi><mi>i</mi></msup><mo>−</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mi>i</mi></msup><mo stretchy="false">)</mo><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\cos t(\theta, (x^i,y^i))=\frac{1}{2} (y^i - h_{\theta}(x^i))^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1246639999999999em;vertical-align:-0.25em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1246639999999999em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p><p>每个样本的损失函数，对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span>求偏导得到对应梯度，来更新<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span>：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>θ</mi><mi>j</mi></msub><mo>=</mo><msub><mi>θ</mi><mi>j</mi></msub><mo>+</mo><mo stretchy="false">(</mo><msup><mi>y</mi><mi>i</mi></msup><mo>−</mo><msub><mi>h</mi><mi>θ</mi></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mi>i</mi></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo><msubsup><mi>x</mi><mi>j</mi><mi>i</mi></msubsup></mrow><annotation encoding="application/x-tex">\theta_j = \theta_j +  (y^i - h_{\theta}(x^i))x_j^i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1246639999999999em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2577720000000001em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8746639999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>随机梯度下降是通过<strong>每个样本迭代更新一次</strong>，如果样本量很大的情况（例如几十万），那么可能只用其中几万条或者几千条的样本，就已经将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span>迭代到最优解了。对比上面的批量梯度下降，迭代一次需要用到十几万训练样本，一次迭代不可能最优，如果迭代10次的话就需要遍历训练样本10次。<br>但是，SGD伴随的一个问题是噪音较BGD要多，使得SGD并不是每次迭代都向着整体最优化方向。</p><h3 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h3><p>批量梯度下降每次迭代需要整个数据集，迭代一次计算量为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>×</mo><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">m \times n^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>，随机梯度下降每次迭代只使用一个样本，迭代一次计算量为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">n^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>，当样本个数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span>很大的时候，随机梯度下降迭代一次的速度要远高于批量梯度下降方法。<br>两者的关系可以这样理解：<strong>随机梯度下降方法以损失很小的一部分精确度和增加一定数量的迭代次数为代价，换取了总体的优化效率的提升。增加的迭代次数远远小于样本的数量</strong>。<br>对批量梯度下降法和随机梯度下降法的总结：</p><ul><li>批量梯度下降—最小化所有训练样本的损失函数，使得最终求解的是全局的最优解，即求解的参数是使得代价函数最小，但是对于大规模样本问题效率低下。</li><li>随机梯度下降—最小化每条样本的损失函数，虽然不是每次迭代得到的损失函数都向着全局最优方向， 但是大的整体的方向是向全局最优解的，最终的结果往往是在全局最优解附近，适用于大规模训练样本情况。</li></ul><h2 id="牛顿法和拟牛顿法"><a class="markdownIt-Anchor" href="#牛顿法和拟牛顿法"></a> 牛顿法和拟牛顿法</h2><h3 id="牛顿法"><a class="markdownIt-Anchor" href="#牛顿法"></a> 牛顿法</h3><p>牛顿法是一种在实数域和复数域上近似求解方程的方法。该方法使用函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f (x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>的泰勒级数的前面几项来寻找方程<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">f (x) = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>的根。牛顿法最大的特点就在于它的收敛速度很快。<br>首先，选择一个接近函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f (x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>零点的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，计算相应的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f (x_0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>和切线斜率<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo mathvariant="normal">′</mo><mo stretchy="false">(</mo><mi>x</mi><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f  \prime (x0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord">′</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mord">0</span><span class="mclose">)</span></span></span></span>（这里<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo mathvariant="normal">′</mo></mrow><annotation encoding="application/x-tex">f  \prime</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord">′</span></span></span></span>表示函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span>的导数）。然后我们计算穿过点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(x_0,  f  (x_0))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>并且斜率为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo mathvariant="normal">′</mo><mo stretchy="false">(</mo><mi>x</mi><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f  \prime (x0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord">′</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mord">0</span><span class="mclose">)</span></span></span></span>的直线和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>轴的交点的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>坐标，也就是求如下方程的解：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>x</mi><mo>⋅</mo><mi>f</mi><mo mathvariant="normal">′</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo>+</mo><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo>−</mo><msub><mi>x</mi><mn>0</mn></msub><mo>⋅</mo><mi>f</mi><mo mathvariant="normal">′</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">x \cdot f \prime (x_0) + f(x_0) - x_0 \cdot f \prime (x_0) = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord">′</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.59445em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord">′</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></span></p><p>我们将新求得的点的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>坐标命名为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">x_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，通常<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">x_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>会比<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>更接近方程<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">f  (x) = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>的解。因此我们现在可以利用<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">x_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>开始下一轮迭代。迭代公式可化简为如下所示：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>x</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><msub><mi>x</mi><mi>n</mi></msub><mo>−</mo><mfrac><mrow><mi>f</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><mrow><mi>f</mi><mo mathvariant="normal">′</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">x_{n+1}=x_n - \frac{f(x_n)}{f \prime (x_n)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord">′</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>已经证明，如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>f</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">f &#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>是连续的，并且待求的零点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>是孤立的，那么在零点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>周围存在一个区域，只要初始值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>位于这个邻近区域内，那么牛顿法必定收敛。 并且，如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>f</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f  &#x27; (x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>不为0，那么牛顿法将具有平方收敛的性能。粗略的说，这意味着每迭代一次，牛顿法结果的有效数字将增加一倍。<br>由于牛顿法是基于当前位置的切线来确定下一次的位置，所以牛顿法又被很形象地称为是**“切线法”**。牛顿法的搜索路径（二维情况）如下图所示：<br>牛顿法搜索动态示例图：<br><img src="/images/NewtonIteration_Ani.gif" alt><br><strong>关于牛顿法和梯度下降法的效率对比：</strong><br>从本质上去看，牛顿法是二阶收敛，梯度下降是一阶收敛，所以牛顿法就更快。<br>如果更通俗地说的话，比如你想找一条最短的路径走到一个盆地的最底部，梯度下降法每次只从你当前所处位置选一个坡度最大的方向走一步，牛顿法在选择方向时，不仅会考虑坡度是否够大，还会考虑你走了一步之后，坡度是否会变得更大。所以，可以说牛顿法比梯度下降法看得更远一点，能更快地走到最底部。（牛顿法目光更加长远，所以少走弯路；相对而言，梯度下降法只考虑了局部的最优，没有全局思想。）<br>从几何上说，牛顿法就是用一个二次曲面去拟合你当前所处位置的局部曲面，而梯度下降法是用一个平面去拟合当前的局部曲面，通常情况下，二次曲面的拟合会比平面更好，所以牛顿法选择的下降路径会更符合真实的最优下降路径。<br><img src="/images/%E7%89%9B%E9%A1%BF%E6%B3%95.png" alt><br>红色的牛顿法的迭代路径，绿色的是梯度下降法的迭代路径<br><strong>牛顿法的优缺点总结：</strong><br>**优点：**二阶收敛，收敛速度快；<br>**缺点：**牛顿法是一种迭代算法，每一步都需要求解目标函数的Hessian矩阵的逆矩阵，计算比较复杂。</p><h3 id="牛顿法为什么是二阶"><a class="markdownIt-Anchor" href="#牛顿法为什么是二阶"></a> 牛顿法为什么是二阶</h3><p>牛顿法一般应用场景：</p><ol><li>求方程的根；</li><li>求解最优化方法；</li></ol><p>上小节中牛顿法用来求方程的根，牛顿法求根是一阶算法。当牛顿法用作优化算法的时候，它就是二阶的。<br>假设我们有一个凸优化问题<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mo><mi>min</mi><mo>⁡</mo></mo><mi>x</mi></msub><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\min_xf(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mop">min</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>，也就是说我们要找一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>来最小化<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>。对于凸优化问题，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>的最小值点就是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>的极值点，也就是导数为0的点。那么我们上面的优化问题就转换为了如下的求根问题：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>f</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">f&#x27;(x)=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.051892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span></span></p><p>利用牛顿法求解上面的式子，我们先选取初始点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">x_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，然后进行如下迭代：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>x</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><msub><mi>x</mi><mi>n</mi></msub><mo>−</mo><mfrac><mrow><msup><mi>f</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><msub><mi>x</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><mrow><msup><mi>f</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mo stretchy="false">(</mo><msub><mi>x</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">x_{n+1}=x_n - \frac{f&#x27;(x_n)}{f &#x27;&#x27; (x_n)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.364892em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.428892em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6778919999999999em;"><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>直到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>−</mo><msub><mi>x</mi><mi>n</mi></msub><mi mathvariant="normal">∣</mi><mo>&lt;</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">|x_{n+1}-x_n|&lt;\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">ϵ</span></span></span></span>停止。<br>综上，牛顿法求根是一阶算法，我们将优化问题转为求根问题需要一阶导数，所以用牛顿法进行最优化是二阶算法。</p><h3 id="拟牛顿法"><a class="markdownIt-Anchor" href="#拟牛顿法"></a> 拟牛顿法</h3><p>拟牛顿法是求解非线性优化问题最有效的方法之一，于20世纪50年代由美国Argonne国家实验室的物理学家W.C.Davidon所提出来。Davidon设计的这种算法在当时看来是非线性优化领域最具创造性的发明之一。不久有人证实了这种新的算法远比其他方法快速和可靠，使得非线性优化这门学科在一夜之间突飞猛进。<br><strong>拟牛顿法的本质思想是改善牛顿法每次需要求解复杂的Hessian矩阵的逆矩阵的缺陷，它使用正定矩阵来近似Hessian矩阵的逆，从而简化了运算的复杂度。</strong><br>拟牛顿法和最速下降法一样只要求每一步迭代时知道目标函数的梯度。通过测量梯度的变化，构造一个目标函数的模型使之足以产生超线性收敛性。这类方法大大优于最速下降法，尤其对于困难的问题。另外，因为拟牛顿法不需要二阶导数的信息，所以有时比牛顿法更为有效。如今，优化软件中包含了大量的拟牛顿算法用来解决无约束，约束，和大规模的优化问题。</p><h2 id="共轭梯度法conjugate-gradient"><a class="markdownIt-Anchor" href="#共轭梯度法conjugate-gradient"></a> 共轭梯度法（Conjugate Gradient）</h2>]]></content>
      
      
      <categories>
          
          <category> 数学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学基础 </tag>
            
            <tag> 最优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C++结构体</title>
      <link href="/2023/05/03/c-zhi-shi/c-jie-gou-ti/"/>
      <url>/2023/05/03/c-zhi-shi/c-jie-gou-ti/</url>
      
        <content type="html"><![CDATA[<h1 id="结构体"><a class="markdownIt-Anchor" href="#结构体"></a> 结构体</h1><h2 id="1-结构体的定义和使用"><a class="markdownIt-Anchor" href="#1-结构体的定义和使用"></a> 1. 结构体的定义和使用</h2><p>语法：<code>struct 结构体名 { 结构体成员列表 };</code></p><p>创建结构体变量时，可以省略<code>struct</code>关键字</p><p>三种创建结构体变量的方式：</p><pre class="highlight"><code class="cpp"><span class="hljs-keyword">struct</span> <span class="hljs-title class_">Student</span>{    string name;    <span class="hljs-type">int</span> age;    <span class="hljs-type">float</span> score;}s3; <span class="hljs-comment">// s3在定义结构体时创建结构体变量</span><span class="hljs-comment">// struct可省略</span><span class="hljs-keyword">struct</span> <span class="hljs-title class_">Student</span> s1; s1.name = <span class="hljs-string">&quot;张三&quot;</span>;s1.age = <span class="hljs-number">20</span>;s1.score = <span class="hljs-number">89.5</span>;<span class="hljs-keyword">struct</span> <span class="hljs-title class_">Student</span> s2 = {<span class="hljs-string">&quot;李四&quot;</span>, <span class="hljs-number">19</span>, <span class="hljs-number">80.5</span>};</code></pre><h2 id="2-结构体数组"><a class="markdownIt-Anchor" href="#2-结构体数组"></a> 2. 结构体数组</h2><p>作用：将自定义结构体存入数组中</p><h2 id="3-结构体指针"><a class="markdownIt-Anchor" href="#3-结构体指针"></a> 3. 结构体指针</h2><p>作用：通过指针访问结构体中的成员</p><p>利用<code>-&gt;</code>可以通过结构体指针访问结构体属性</p><pre class="highlight"><code class="cpp"><span class="hljs-keyword">struct</span> <span class="hljs-title class_">Student</span>{    string name;    <span class="hljs-type">int</span> age;    <span class="hljs-type">float</span> score;};Student s = {<span class="hljs-string">&quot;李四&quot;</span>, <span class="hljs-number">19</span>, <span class="hljs-number">80.5</span>};Student* p = &amp;s;cout &lt;&lt; p-&gt;name &lt;&lt; p-&gt;age &lt;&lt; p-&gt;score &lt;&lt; endl;</code></pre><h2 id="4-嵌套结构体"><a class="markdownIt-Anchor" href="#4-嵌套结构体"></a> 4. 嵌套结构体</h2><pre class="highlight"><code class="cpp"><span class="hljs-keyword">struct</span> <span class="hljs-title class_">Student</span>{    string name;    <span class="hljs-type">int</span> age;    <span class="hljs-type">float</span> score;};<span class="hljs-keyword">struct</span> <span class="hljs-title class_">Teacher</span>{    <span class="hljs-type">int</span> id;    string name;    <span class="hljs-type">int</span> age;    Student stu;};</code></pre><h2 id="5-结构体做函数参数"><a class="markdownIt-Anchor" href="#5-结构体做函数参数"></a> 5. 结构体做函数参数</h2><p>函数参数有两种形式：1. 值传递。2. 地址传递</p><pre class="highlight"><code class="cpp"><span class="hljs-keyword">struct</span> <span class="hljs-title class_">Student</span>{    string name;    <span class="hljs-type">int</span> age;    <span class="hljs-type">float</span> score;};<span class="hljs-comment">// 值传递</span><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">myprint1</span><span class="hljs-params">(Student s)</span></span>{    cout &lt;&lt; s.name &lt;&lt; s.age &lt;&lt; s.score &lt;&lt; endl; }<span class="hljs-comment">// 地指传递</span><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">myprint2</span><span class="hljs-params">(Student* s)</span></span>{    cout &lt;&lt; s-&gt;name &lt;&lt; s-&gt;age &lt;&lt; s-&gt;score &lt;&lt; endl;}<span class="hljs-keyword">struct</span> <span class="hljs-title class_">Student</span> s1; s1.name = <span class="hljs-string">&quot;张三&quot;</span>;s1.age = <span class="hljs-number">20</span>;s1.score = <span class="hljs-number">89.5</span>;<span class="hljs-built_in">myprint1</span>(s);</code></pre><ul><li><code>const</code>在结构体中使用，用<code>const</code>防止误操作</li></ul><pre class="highlight"><code class="cpp"><span class="hljs-keyword">struct</span> <span class="hljs-title class_">Student</span>{    string name;    <span class="hljs-type">int</span> age;    <span class="hljs-type">float</span> score;};<span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">myprint2</span><span class="hljs-params">(<span class="hljs-type">const</span> Student* s)</span></span>{    <span class="hljs-comment">// s-&gt;age = 150; 报错</span>    cout &lt;&lt; s-&gt;name &lt;&lt; s-&gt;age &lt;&lt; s-&gt;score &lt;&lt; endl;}<span class="hljs-keyword">struct</span> <span class="hljs-title class_">Student</span> s1 = {<span class="hljs-string">&quot;李四&quot;</span>, <span class="hljs-number">19</span>, <span class="hljs-number">80.5</span>}; <span class="hljs-built_in">myprint2</span>(s);</code></pre>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python打包分发工具：setuptools</title>
      <link href="/2023/04/14/python-zhi-shi/python-da-bao-fen-fa-gong-ju/"/>
      <url>/2023/04/14/python-zhi-shi/python-da-bao-fen-fa-gong-ju/</url>
      
        <content type="html"><![CDATA[<h1 id="python打包工具setuptools介绍"><a class="markdownIt-Anchor" href="#python打包工具setuptools介绍"></a> Python打包工具setuptools介绍</h1><p>setuptools库的前身是distutils（一个python标准库），<strong>setuptools本身不是标准库，所以需要自行安装</strong>。setuptools提供的主要的功能有：</p><ul><li><strong>python库的打包分发</strong></li><li><strong>依赖包安装与版本管理</strong></li><li><strong>python环境限制</strong></li><li><strong>生成脚本</strong></li><li><strong>c/c++ 拓展</strong></li></ul><h2 id="库的打包分发"><a class="markdownIt-Anchor" href="#库的打包分发"></a> 库的打包分发</h2><p>python库的打包分发方式有两种：<strong>源码包source dist</strong>（简称sdist）、<strong>二进制包binary dist</strong>（简称bdist）。<br>源码包sdist就是我们熟悉的 .zip 、.tar.gz 等后缀文件。就是一个压缩包，里面包含了所需要的的所有源码文件以及一些静态文件（txt文本、css、图片等）。常见的格式有：</p><table><thead><tr><th>格式</th><th>后缀</th></tr></thead><tbody><tr><td>zip</td><td>.zip</td></tr><tr><td>gztar</td><td>.tar.gz</td></tr><tr><td>bztar</td><td>.tar.bz2</td></tr><tr><td>ztar</td><td>.tar.Z</td></tr><tr><td>tar</td><td>.tar</td></tr></tbody></table><p>二进制包格式是wheel（.whl后缀），它的前身是egg。wheel本质也还是一个压缩包，可以像像zip一样解压缩。<strong>与源码包相比，二进制包的特点是不用再编译，也就是安装更快！</strong></p><table><thead><tr><th>格式</th><th>后缀</th></tr></thead><tbody><tr><td>egg</td><td>.egg</td></tr><tr><td>wheel</td><td>.whl</td></tr></tbody></table><h3 id="源码包sdist"><a class="markdownIt-Anchor" href="#源码包sdist"></a> 源码包sdist</h3><p>打包分发源码包命令</p><pre class="highlight"><code class="shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">python setup.py sdist --formats=gztar</span></code></pre><p><code>setup.py</code>指定了打包分发的配置信息。<code>--formats</code> 参数用来指定压缩格式，若不指定format格式，那么 sdist 将根据当前平台创建默认格式：在类 Unix 平台上，将创建后缀名为.tar.gz分发包，而在Windows上为 .zip 文件。<br>安装源码包命令。安装源码包有两种方法，先解压缩源码包，或者直接安装源码包。</p><ol><li>先解压缩源码包，<a href="http://xn--setup-8v5hs02hnm7d.py" target="_blank" rel="noopener">再执行setup.py</a>。</li></ol><pre class="highlight"><code class="shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">python setup.py install</span>等价于<span class="hljs-meta prompt_">$ </span><span class="language-bash">python setup.py build</span><span class="hljs-meta prompt_">$ </span><span class="language-bash">python setup.py install</span></code></pre><ol start="2"><li>直接pip安装源码包</li></ol><pre class="highlight"><code class="shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">pip install  xxx.tar.gz</span></code></pre><h3 id="二进制包bdist"><a class="markdownIt-Anchor" href="#二进制包bdist"></a> 二进制包bdist</h3><p>打包分发二进制包命令。</p><table><thead><tr><th>命令</th><th>format参数</th><th>note</th></tr></thead><tbody><tr><td>bdist_dumb</td><td>tar,gztar,zip……</td><td>windows默认zip，Unix默认gztar</td></tr><tr><td>bdist_rpm</td><td>rpm,srpm</td><td></td></tr><tr><td>bdist_wininst</td><td>wininst</td><td></td></tr><tr><td>bdist_wheel</td><td>wheel</td><td>目前主流的二进制包，需要先安装wheel</td></tr><tr><td>bdist_egg</td><td>egg</td><td></td></tr></tbody></table><pre class="highlight"><code class="shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">python setup.py bdist_wheel</span></code></pre><p>安装二进制包命令</p><pre class="highlight"><code class="shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">pip install xxx.whl</span></code></pre><h3 id="eggs-与-wheels-有什么区别"><a class="markdownIt-Anchor" href="#eggs-与-wheels-有什么区别"></a> eggs 与 wheels 有什么区别？</h3><p>Egg 格式是由 setuptools 在 2004 年引入，而 Wheel 格式是由 PEP427 在 2012 年定义。Wheel 的出现是为了替代 Egg，它的本质是一个zip包，其现在被认为是 Python 的二进制包的标准格式。<br>以下是 Wheel 和 Egg 的主要区别：</p><ul><li>Wheel 有一个官方的 PEP427 来定义，而 Egg 没有 PEP 定义</li><li>Wheel 是一种分发格式，即打包格式。而 Egg 既是一种分发格式，也是一种运行时安装的格式，并且是可以被直接 import</li><li>Wheel 文件不会包含 .pyc 文件</li><li>Wheel 使用和 PEP376 兼容的 .dist-info 目录，而 Egg 使用 .egg-info 目录</li><li>Wheel 有着更丰富的命名规则。</li><li>Wheel 是有版本的。每个 Wheel 文件都包含 wheel 规范的版本和打包的实现</li><li>Wheel 在内部被 sysconfig path type 管理，因此转向其他格式也更容易</li></ul><p>上面我们讲述了python打包分发的两种方法，<a href="http://xn--setup-mn1h530ausbp49an8au0wiviq1kt8bgmm5iqr2frwkfkq036ess1axkj.py" target="_blank" rel="noopener">很容易发现整个打包过程最重要的就是setup.py</a>，它指定了重要的配置信息。包含以下信息：</p><ul><li><strong>python库的基本信息（作者、联系方式、当前库的版本等）</strong></li><li><strong>需要打包的文件</strong></li><li><strong>依赖包安装与版本管理</strong></li><li><strong>python环境限制</strong></li><li><strong>生成脚本</strong></li><li><strong>c/c++ 拓展</strong></li><li><strong>cmdclass自定义命令行为</strong></li></ul><h2 id="setup函数的配置信息"><a class="markdownIt-Anchor" href="#setup函数的配置信息"></a> setup函数的配置信息</h2><p><a href="http://setup.py" target="_blank" rel="noopener">setup.py</a> 的参数非常多，能够不借助文档写好一个setup.py好像没那么简单。<br><img src="/images/setuptools.png" alt></p><h3 id="python库的基本信息"><a class="markdownIt-Anchor" href="#python库的基本信息"></a> <strong>python库的基本信息</strong></h3><pre class="highlight"><code class="python"><span class="hljs-keyword">from</span> setuptools <span class="hljs-keyword">import</span> setup<span class="hljs-keyword">def</span> <span class="hljs-title function_">readme</span>():    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;README.md&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> f:        content = f.read()    <span class="hljs-keyword">return</span> contentsetup(    name = <span class="hljs-string">&#x27;myapp&#x27;</span>, <span class="hljs-comment"># 包名称</span>    version = <span class="hljs-string">&#x27;1.0&#x27;</span>, <span class="hljs-comment"># 版本</span>    author = <span class="hljs-string">&#x27;lihua&#x27;</span>, <span class="hljs-comment"># 作者</span>    author_email = <span class="hljs-string">&#x27;lihua@163.com&#x27;</span>, <span class="hljs-comment"># 作者邮箱</span>    description=<span class="hljs-string">&#x27;a example for pack python&#x27;</span>, <span class="hljs-comment"># 描述</span>    long_description=readme(), <span class="hljs-comment"># 长文描述</span>    long_description_content_type=<span class="hljs-string">&#x27;text/markdown&#x27;</span>, <span class="hljs-comment"># 长文描述的文本格式</span>    keywords=<span class="hljs-string">&#x27;pack&#x27;</span>, <span class="hljs-comment"># 关键词</span>    url=<span class="hljs-string">&#x27;https://github.com/lihua/myapp&#x27;</span>, <span class="hljs-comment"># 项目主页</span>    classifiers=[ <span class="hljs-comment"># 包的分类信息，见https://pypi.org/pypi?%3Aaction=list_classifiers</span>            <span class="hljs-string">&#x27;Development Status :: 5 - Production/Stable&#x27;</span>,            <span class="hljs-string">&#x27;License :: OSI Approved :: Apache Software License&#x27;</span>,            <span class="hljs-string">&#x27;Operating System :: OS Independent&#x27;</span>,            <span class="hljs-string">&#x27;Programming Language :: Python :: 3&#x27;</span>,            <span class="hljs-string">&#x27;Programming Language :: Python :: 3.6&#x27;</span>,            <span class="hljs-string">&#x27;Programming Language :: Python :: 3.7&#x27;</span>,            <span class="hljs-string">&#x27;Programming Language :: Python :: 3.8&#x27;</span>,            <span class="hljs-string">&#x27;Programming Language :: Python :: 3.9&#x27;</span>,        ],    license=<span class="hljs-string">&#x27;Apache License 2.0&#x27;</span>, <span class="hljs-comment"># 许可证</span>)</code></pre><h2 id="需要打包的文件"><a class="markdownIt-Anchor" href="#需要打包的文件"></a> 需要打包的文件</h2><p>通过setup函数的这些参数<code>packages</code>、<code>include_package_data</code>（其实就是MANIFEST.in文件）、<code>exclude_package_data</code>、<code>package_data</code>、<code>data_files</code>来指定需要打包的文件。<br>包含的文件如下：</p><ul><li><code>py_modules</code>和<code>packages</code>参数中所有 Python 源文件</li><li><code>ext_modules</code>或是<code>libraries</code> 参数中提到的所有 C 源文件</li><li><code>scripts</code> 参数指定的脚本</li><li><code>package_data</code>和<code>data_files</code> 参数指定的所有文件</li><li><code>setup.cfg</code>和<code>setup.py</code></li><li>类似于readme的文件（如README、README.txt、 README.rst、<a href="http://README.md" target="_blank" rel="noopener">README.md</a>）</li><li><code>MANIFEST.in</code> 中指定的所有文件</li></ul><h3 id="packages参数"><a class="markdownIt-Anchor" href="#packages参数"></a> packages参数</h3><p>packages参数就是用来指示打包分发时需要包含的package，类型<strong>为list[str]</strong>。<strong>但是它不会递归的打包子package！只打包当前package！</strong><br>所以setuptools提供了两个函数<code>find_namespace_packages()</code>，<code>find_packages</code>来快速找到所有的package。<br><strong>python中的packages有两种</strong>，一种是包含__init__.py的文件夹（姑且叫做<strong>普通package</strong>），一种是不含__init__.py的文件夹（这是python3引入的<strong>Namespace Packages</strong>命名空间包）。<br>顾名思义，<code>find_packages</code>只会打包内含__init__.py的package。可以给<code>find_namespace_packages</code>传递参数以指定在哪个文件夹下进行搜索，比如<code>setup(packages=find_namespace_packages('src'))</code>。</p><h3 id="打包非源码文件"><a class="markdownIt-Anchor" href="#打包非源码文件"></a> 打包非源码文件</h3><p>上面这些例子中都没有包含非源码文件（如.dat和.txt文件），需要通过别的参数<code>include_package_data</code>（其实就是<code>MANIFEST.in</code>文件）、<code>exclude_package_data</code>、<code>package_data</code>来打包<strong>非源码文件。</strong></p><h4 id="include_package_data参数"><a class="markdownIt-Anchor" href="#include_package_data参数"></a> include_package_data参数</h4><p>include_package_data是bool类型，默认值为True。<strong>当为True时，将根据</strong><code>MANIFEST.in</code><strong>文件来打包分发库</strong>。<br><code>MANIFEST.in</code>文件指定了一些语法规则，主要是用来打包非源码文件的，语法规则如下：</p><table><thead><tr><th>命令</th><th>描述</th></tr></thead><tbody><tr><td>include pat1 pat2 …</td><td>添加与任何列出的模式匹配的所有文件（文件必须作为相对于项目根目录的路径给出）</td></tr><tr><td>exclude pat1 pat2 …</td><td>删除与任何列出的模式匹配的所有文件（文件必须作为相对于项目根目录的路径给出）</td></tr><tr><td>recursive-include dir-pattern pat1 pat2 …</td><td>递归dir-pattern及其子文件夹，添加与任何列出的模式匹配的目录下的所有文件</td></tr><tr><td>recursive-exclude dir-pattern pat1 pat2 …</td><td>递归dir-pattern及其子文件夹，删除与任何列出的模式匹配的目录下的所有文件</td></tr><tr><td>global-include pat1 pat2 …</td><td>在源树中的任何位置添加与任何列出的模式匹配的所有文件</td></tr><tr><td>global-exclude pat1 pat2 …</td><td>删除源树中与任何列出的模式匹配的所有文件</td></tr><tr><td>graft dir-pattern</td><td>添加匹配目录下的所有文件 dir-pattern</td></tr><tr><td>prune dir-pattern</td><td>删除匹配目录下的所有文件 dir-pattern</td></tr></tbody></table><pre class="highlight"><code class="txt">└── D:\workplace\python\pack_test    ├──setup.py    ├──MANIFEST.in    ├──debug    │   ├──debug.py    ├──src    │   ├──__init__.py    │   ├──pack1        │    ├──__init__.py        │    ├──main.py        │    ├──config.txt             ├──data             │   ├──main.py             │   ├──a.dat</code></pre><p>则<code>MANIFEST.in</code>文件的内容如下：</p><pre class="highlight"><code class="txt"># 递归遍历当前文件夹，找到符合*.dat、*.txt的文件recursive-include . *.txt *.dat # 或者include src/pack1/*.txtinclude src/pack1/data/*.dat</code></pre><h4 id="package_data参数"><a class="markdownIt-Anchor" href="#package_data参数"></a> package_data参数</h4><p>还可以通过package_data参数来指定，这边建议还是统一用<code>MANIFEST.in</code>文件的方式，免得造成不一致性。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">from</span> setuptools <span class="hljs-keyword">import</span> setupsetup(package_data={<span class="hljs-string">&#x27;&#x27;</span>:[<span class="hljs-string">&#x27;*.txt&#x27;</span>],<span class="hljs-string">&#x27;src.pk1&#x27;</span>:[<span class="hljs-string">&#x27;*.dat&#x27;</span>]}) <span class="hljs-comment"># 其中&#x27;&#x27;表示所有文件夹下</span></code></pre><h4 id="exclude_package_data参数"><a class="markdownIt-Anchor" href="#exclude_package_data参数"></a> exclude_package_data参数</h4><p>顾名思义就是去除文件</p><pre class="highlight"><code class="python"><span class="hljs-keyword">from</span> setuptools <span class="hljs-keyword">import</span> setupsetup(exclude_package_data={<span class="hljs-string">&#x27;src.pk1&#x27;</span>:[<span class="hljs-string">&#x27;*.txt&#x27;</span>]})</code></pre><h2 id="依赖包安装与版本管理"><a class="markdownIt-Anchor" href="#依赖包安装与版本管理"></a> <strong>依赖包安装与版本管理</strong></h2><p>一个项目库可能会依赖于很多其他库，比如安装pandas，该库依赖于numpy。当用pip或conda这些命令安装时，从来不用操心哪些依赖包需要安装，它们的版本限制是怎么样的，而这些信息是setuptools打包分发库时就确定的。所以当setuptools打包分发库时，<strong>要指定依赖包有哪些？它们又有什么限制？</strong><br>针对依赖包安装与版本管理这项功能，setup函数提供了一些参数<code>install_requires</code>、<code> setup_requires</code>、<code>tests_require</code> 、<code>extras_require</code>。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">from</span> setuptools <span class="hljs-keyword">import</span> setup, find_packagessetup(    ...    <span class="hljs-comment"># 表明当前模块依赖哪些包，若环境中没有，则会从pypi中自动下载安装！！！</span>    install_requires=[<span class="hljs-string">&#x27;docutils&gt;=0.3&#x27;</span>],    <span class="hljs-comment"># setup.py 本身要依赖的包，这通常是为一些setuptools的插件准备的配置，这里列出的包，不会自动安装。</span>    setup_requires=[<span class="hljs-string">&#x27;pbr&#x27;</span>],    <span class="hljs-comment"># 仅在测试时需要使用的依赖，在正常发布的代码中是没有用的。</span>    <span class="hljs-comment"># 在执行python setup.py test时，可以自动安装这三个库，确保测试的正常运行。</span>    tests_require=[        <span class="hljs-string">&#x27;pytest&gt;=3.3.1&#x27;</span>,        <span class="hljs-string">&#x27;pytest-cov&gt;=2.5.1&#x27;</span>,    ],    <span class="hljs-comment"># install_requires 在安装模块时会自动安装依赖包</span>    <span class="hljs-comment"># 而 extras_require 不会，这里仅表示该模块会依赖这些包</span>    <span class="hljs-comment"># 但是这些包通常不会使用到，只有当你深度使用模块时，才会用到，这里需要你手动安装</span>    extras_require={        <span class="hljs-string">&#x27;PDF&#x27;</span>:  [<span class="hljs-string">&quot;ReportLab&gt;=1.2&quot;</span>, <span class="hljs-string">&quot;RXP&quot;</span>],        <span class="hljs-string">&#x27;reST&#x27;</span>: [<span class="hljs-string">&quot;docutils&gt;=0.3&quot;</span>],    })</code></pre><p>关于 install_requires， 有以下四种常用的表示方法：</p><ol><li><code>argparse</code>：只包含包名。 这种形式只检查包的存在性，不检查版本。 方便，但不利于控制风险。</li><li><code>setuptools==38.2.4</code>，指定版本。 这种形式把风险降到了最低，确保了开发、测试与部署的版本一致，不会出现意外。 缺点是不利于更新，每次更新都需要改动代码。</li><li><code>docutils &gt;= 0.3</code>，这是比较常用的形式。 当对某个库比较信任时，这种形式可以自动保持版本为最新。</li><li><code>Django &gt;= 1.11, != 1.11.1, &lt;= 2</code>，这是比较复杂的形式。 如这个例子，保证了Django的大版本在1.11和2之间，也即1.11.x；并且，排除了已知有问题的版本1.11.1（仅举例）。 对于一些大型、复杂的库，这种形式是最合适的。</li></ol><h3 id="python环境限制"><a class="markdownIt-Anchor" href="#python环境限制"></a> python环境限制</h3><pre class="highlight"><code class="python">setup(python_requires=<span class="hljs-string">&#x27;&gt;=2.7, &lt;=3&#x27;</span>)</code></pre><h2 id="生成脚本"><a class="markdownIt-Anchor" href="#生成脚本"></a> 生成脚本</h2><p>有时候我们的库包含了一些非常重要的功能，每次都提供python XXX.py来运行不太方便，最好是把脚本放入系统环境path，以命令行的形式来执行。比如tensorRT就提供了trtexec命令。<br>那么setup函数提供了entry_points和scripts这两个参数。它们的区别在于：</p><ul><li>entry_points是把<strong>python文件中的函数</strong>自动生成为可执行脚本</li><li>scripts是把**.sh、.py等可执行脚本**生成到系统path中</li></ul><pre class="highlight"><code class="python"><span class="hljs-keyword">from</span> setuptools <span class="hljs-keyword">import</span> setupsetup(    …………    <span class="hljs-comment"># 把python中的函数自动生成为一个可执行的脚本</span>    <span class="hljs-comment"># 如下：把fool.main文件中的main函数自动生成为一个可执行脚本，可以通过命令foo执行该脚本</span>    entry_points={        <span class="hljs-string">&#x27;console_scripts&#x27;</span>: [ <span class="hljs-comment"># key值为console_scripts</span>            <span class="hljs-string">&#x27;foo = foo.main:main&#x27;</span> <span class="hljs-comment"># 格式为&#x27;命令名 = 模块名:函数名&#x27;</span>        ]    },    <span class="hljs-comment"># 将 bin/foo.sh 和 bar.py 脚本，生成到系统 PATH中</span>    <span class="hljs-comment"># 执行 python setup.py install 后</span>    <span class="hljs-comment"># 会生成 如 /usr/bin/foo.sh 和 如 /usr/bin/bar.py</span>    scripts=[<span class="hljs-string">&#x27;bin/foo.sh&#x27;</span>, <span class="hljs-string">&#x27;bar.py&#x27;</span>])</code></pre><h2 id="cc扩展"><a class="markdownIt-Anchor" href="#cc扩展"></a> C/C++扩展</h2><p>编译c/c<ins>拓展源码的命令为：<code>python setup.py build_ext --inplace</code>。或者直接<code>python setup.py build</code>该命令包括了build_ext步骤。那么我们该如何指导编译器编译c/c</ins>源码呢。<br>本质上setuptools是根据setup.py配置来<strong>指导生成gcc命令行</strong>，当然你也可以粗暴地直接用gcc命令行来编译c/c<ins>拓展源码，但工程量太大，setuptools支持很多混合编程技术cython、SWIG等等。所以甭管你采用什么混合编程技术，绕不开setuptools。setuptools编译c/c</ins>拓展源码的过程主要是把<strong>源代码</strong>编译成<strong>动态连接库</strong>（linux下是**.so**，windows下是**.pyd**）。这样就可以在.py中愉快import并使用拓展模块了。<br>主要看setup函数的<strong>ext_modules</strong>参数，该参数type为list[setuptools.Extension]。所以编译核心就在于这个<strong>setuptools.Extension</strong>类，该类只支持**c/c++**拓展，要实现cuda拓展需要自定义Extension类，如pytorch的CUDAExtension。<br>setuptools.Extension类有几个重要的构造参数。</p><ul><li>name：在python中import该拓展的名称</li><li>sources：源代码文件名</li><li>language：默认’c’，如果要用C++，改成’c++’</li><li>include_dirs：其实就是传递给 gcc 的 -I(大写i)指定include的头文件目录</li><li>library_dirs：其实就是传递给 gcc 的 -L 指定连接文件的目录</li><li>libraries：其实就是传给 gcc 的 -l(小写的L)指定连接文件，在L指定的位置找</li><li>extra_compile_args：其实传给 gcc 的额外的编译参数，比方’-std=c++11’</li><li>extra_link_args：其实传给 gcc 的额外的链接参数（生成动态链接库）</li><li>define_macros：定义宏</li><li>undef_macros：取消定义宏</li></ul><pre class="highlight"><code class="python"><span class="hljs-keyword">from</span> setuptools <span class="hljs-keyword">import</span> setup,Extensionsetup( ext_modules=[    Extension(        name=<span class="hljs-string">&#x27;foo&#x27;</span>,  <span class="hljs-comment"># type=str。并且还支持层级命名，如myapp.foo</span>        <span class="hljs-comment"># type=list[str]。源代码的文件名，可以用glob.glob查找所有.c文件</span>        sources=[<span class="hljs-string">&#x27;foo/csrc/foo1.c&#x27;</span>,<span class="hljs-string">&#x27;foo/csrc/foo2.c&#x27;</span>],          include_dirs=[<span class="hljs-string">&#x27;foo&#x27;</span>], <span class="hljs-comment"># type=list[str]。拓展include头文件，相当于传递给gcc -I </span>        )]    )</code></pre><p>setuptools.Extension用define_macros 和 undef_macros构造参数来定义或取消定义宏。define_macros的type为list[tuple( name:str , value:str|None )] 。值为 None 的宏 FOO 等价于#define FOO ，否则等价于# define FOO value值 。undef_macros 同理，等价于#undef FOO 。</p><pre class="highlight"><code class="python">Extension(define_macros=[(<span class="hljs-string">&#x27;NDEBUG&#x27;</span>, <span class="hljs-string">&#x27;1&#x27;</span>),(<span class="hljs-string">&#x27;HAVE_STRFTIME&#x27;</span>, <span class="hljs-literal">None</span>)],          undef_macros=[<span class="hljs-string">&#x27;HAVE_FOO&#x27;</span>, <span class="hljs-string">&#x27;HAVE_BAR&#x27;</span>])</code></pre><p>上面的代码相当于在每个C文件前加上了：</p><pre class="highlight"><code class="c"><span class="hljs-meta">#<span class="hljs-keyword">define</span> NDEBUG 1</span><span class="hljs-meta">#<span class="hljs-keyword">define</span> HAVE_STRFTIME</span><span class="hljs-meta">#<span class="hljs-keyword">undef</span> HAVE_FOO</span><span class="hljs-meta">#<span class="hljs-keyword">undef</span> HAVE_BAR</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pytorch|动态计算图</title>
      <link href="/2023/04/10/pytorch-ji-chu-zhi-shi/05-dong-tai-ji-suan-tu/"/>
      <url>/2023/04/10/pytorch-ji-chu-zhi-shi/05-dong-tai-ji-suan-tu/</url>
      
        <content type="html"><![CDATA[<h1 id="pytorch的动态图简介"><a class="markdownIt-Anchor" href="#pytorch的动态图简介"></a> Pytorch的动态图简介</h1><p>本节我们将介绍 Pytorch的动态计算图。<br>包括：</p><ul><li>动态计算图简介</li><li>计算图中的Function</li><li>计算图和反向传播</li><li>叶子节点和非叶子节点</li></ul><h2 id="动态计算图简介"><a class="markdownIt-Anchor" href="#动态计算图简介"></a> 动态计算图简介</h2><p>Pytorch的计算图由节点和边组成，节点表示张量或者Function，边表示张量和Function之间的依赖关系。<br>Pytorch中的计算图是动态图。这里的动态主要有两重含义。</p><ol><li>计算图的正向传播是立即执行的。无需等待完整的计算图创建完毕，每条语句都会在计算图中动态添加节点和边，并立即执行正向传播得到计算结果。</li><li>计算图在反向传播后立即销毁，下次调用需要重新构建计算图。如果在程序中使用了backward方法执行了反向传播，或者利用torch.autograd.grad方法计算了梯度，那么创建的计算图会被立即销毁，释放存储空间，下次调用需要重新创建。</li></ol><p><strong>计算图的正向传播是立即执行的</strong>。</p><pre class="highlight"><code class="python">w = torch.tensor([[<span class="hljs-number">3.0</span>,<span class="hljs-number">1.0</span>]],requires_grad=<span class="hljs-literal">True</span>)b = torch.tensor([[<span class="hljs-number">3.0</span>]],requires_grad=<span class="hljs-literal">True</span>)X = torch.randn(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>)Y = torch.randn(<span class="hljs-number">10</span>,<span class="hljs-number">1</span>)Y_hat = X@w.t() + b  <span class="hljs-comment"># Y_hat定义后其正向传播被立即执行，与其后面的loss创建语句无关</span>loss = torch.mean(torch.<span class="hljs-built_in">pow</span>(Y_hat-Y,<span class="hljs-number">2</span>))<span class="hljs-built_in">print</span>(loss.data)<span class="hljs-built_in">print</span>(Y_hat.data)&gt;&gt;&gt;Output:tensor(<span class="hljs-number">36.4831</span>)tensor([[-<span class="hljs-number">0.0435</span>],        [ <span class="hljs-number">3.1951</span>],        [ <span class="hljs-number">5.3738</span>],        [ <span class="hljs-number">4.2230</span>],        [<span class="hljs-number">14.0631</span>],        [ <span class="hljs-number">1.2098</span>],        [ <span class="hljs-number">4.8157</span>],        [ <span class="hljs-number">2.8586</span>],        [ <span class="hljs-number">3.0681</span>],        [ <span class="hljs-number">8.1599</span>]])</code></pre><p>**计算图在反向传播后立即销毁。**�<br>计算图在反向传播后立即销毁，如果需要保留计算图, 需要设置<code>retain_graph = True</code>。</p><pre class="highlight"><code class="python">w = torch.tensor([[<span class="hljs-number">3.0</span>,<span class="hljs-number">1.0</span>]],requires_grad=<span class="hljs-literal">True</span>)b = torch.tensor([[<span class="hljs-number">3.0</span>]],requires_grad=<span class="hljs-literal">True</span>)X = torch.randn(<span class="hljs-number">10</span>,<span class="hljs-number">2</span>)Y = torch.randn(<span class="hljs-number">10</span>,<span class="hljs-number">1</span>)Y_hat = X@w.t() + b  <span class="hljs-comment"># Y_hat定义后其正向传播被立即执行，与其后面的loss创建语句无关</span>loss = torch.mean(torch.<span class="hljs-built_in">pow</span>(Y_hat-Y,<span class="hljs-number">2</span>))loss.backward()  <span class="hljs-comment">#loss.backward(retain_graph = True) </span><span class="hljs-comment">#loss.backward() #如果再次执行反向传播将报错</span></code></pre><h2 id="计算图中的function"><a class="markdownIt-Anchor" href="#计算图中的function"></a> 计算图中的Function</h2><p>计算图中的张量我们已经比较熟悉了，计算图中的另外一种节点是Function，实际上就是 Pytorch中各种对张量操作的函数。<br>这些Function和我们Python中的函数有一个较大的区别，那就是它同时包括正向计算逻辑和反向传播的逻辑。我们可以通过继承<code>torch.autograd.Function</code>来创建这种支持反向传播的Function。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyReLU</span>(torch.autograd.Function):       <span class="hljs-comment">#正向传播逻辑，可以用ctx存储一些值，供反向传播使用。</span><span class="hljs-meta">    @staticmethod</span>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">ctx, <span class="hljs-built_in">input</span></span>):        ctx.save_for_backward(<span class="hljs-built_in">input</span>)        <span class="hljs-keyword">return</span> <span class="hljs-built_in">input</span>.clamp(<span class="hljs-built_in">min</span>=<span class="hljs-number">0</span>)    <span class="hljs-comment">#反向传播逻辑</span><span class="hljs-meta">    @staticmethod</span>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">backward</span>(<span class="hljs-params">ctx, grad_output</span>):        <span class="hljs-built_in">input</span>, = ctx.saved_tensors        grad_input = grad_output.clone()        grad_input[<span class="hljs-built_in">input</span> &lt; <span class="hljs-number">0</span>] = <span class="hljs-number">0</span>        <span class="hljs-keyword">return</span> grad_input</code></pre><pre class="highlight"><code class="python">w = torch.tensor([[<span class="hljs-number">3.0</span>,<span class="hljs-number">1.0</span>]],requires_grad=<span class="hljs-literal">True</span>)b = torch.tensor([[<span class="hljs-number">3.0</span>]],requires_grad=<span class="hljs-literal">True</span>)X = torch.tensor([[-<span class="hljs-number">1.0</span>,-<span class="hljs-number">1.0</span>],[<span class="hljs-number">1.0</span>,<span class="hljs-number">1.0</span>]])Y = torch.tensor([[<span class="hljs-number">2.0</span>,<span class="hljs-number">3.0</span>]])relu = MyReLU.apply <span class="hljs-comment"># relu现在也可以具有正向传播和反向传播功能</span>Y_hat = relu(X@w.t() + b)loss = torch.mean(torch.<span class="hljs-built_in">pow</span>(Y_hat-Y,<span class="hljs-number">2</span>))loss.backward()<span class="hljs-built_in">print</span>(w.grad)<span class="hljs-built_in">print</span>(b.grad)<span class="hljs-built_in">print</span>(Y_hat.grad_fn)&gt;&gt;&gt;Output:tensor([[<span class="hljs-number">4.5000</span>, <span class="hljs-number">4.5000</span>]])tensor([[<span class="hljs-number">4.5000</span>]])&lt;torch.autograd.function.MyReLUBackward <span class="hljs-built_in">object</span> at <span class="hljs-number">0x7f6979f47200</span>&gt;</code></pre><h2 id="计算图与反向传播"><a class="markdownIt-Anchor" href="#计算图与反向传播"></a> 计算图与反向传播</h2><p>了解了Function的功能，我们可以简单地理解一下反向传播的原理和过程。理解该部分原理需要一些高等数学中求导链式法则的基础知识。�</p><pre class="highlight"><code class="python">x = torch.tensor(<span class="hljs-number">3.0</span>,requires_grad=<span class="hljs-literal">True</span>)y1 = x + <span class="hljs-number">1</span>y2 = <span class="hljs-number">2</span>*xloss = (y1-y2)**<span class="hljs-number">2</span>loss.backward()</code></pre><p><code>loss.backward()</code>语句调用后，依次发生以下计算过程。</p><ol><li>loss自己的grad梯度赋值为1，即对自身的梯度为1。</li><li>loss根据其自身梯度以及关联的backward方法，计算出其对应的自变量即y1和y2的梯度，将该值赋值到y1.grad和y2.grad。</li><li>y2和y1根据其自身梯度以及关联的backward方法, 分别计算出其对应的自变量x的梯度，x.grad将其收到的多个梯度值累加。</li></ol><p>注意，1,2,3步骤的求梯度顺序和对多个梯度值的累加规则恰好是求导链式法则的程序表述。<br>正因为求导链式法则衍生的梯度累加规则，张量的grad梯度不会自动清零，在需要的时候需要手动置零。</p><h2 id="叶子节点和非叶子节点"><a class="markdownIt-Anchor" href="#叶子节点和非叶子节点"></a> 叶子节点和非叶子节点</h2><p>执行下面代码，我们会发现 loss.grad并不是我们期望的1，而是 None。类似地 y1.grad 以及 y2.grad也是 None。<br>这是为什么呢？这是由于它们不是叶子节点张量。<br>在反向传播过程中，只有 is_leaf=True 的叶子节点，需要求导的张量的导数结果才会被最后保留下来。那么什么是叶子节点张量呢？叶子节点张量需要满足两个条件。</p><ol><li>叶子节点张量是由用户直接创建的张量，而非由某个Function通过计算得到的张量。</li><li>叶子节点张量的 requires_grad属性必须为True.</li></ol><p>Pytorch设计这样的规则主要是为了节约内存或者显存空间，因为几乎所有的时候，用户只会关心他自己直接创建的张量的梯度。<br>所有依赖于叶子节点张量的张量, 其requires_grad 属性必定是True的，但其梯度值只在计算过程中被用到，不会最终存储到grad属性中。<br>如果需要保留中间计算结果的梯度到grad属性中，可以使用 retain_grad方法。如果仅仅是为了调试代码查看梯度值，可以利用register_hook打印日志。</p><pre class="highlight"><code class="python">x = torch.tensor(<span class="hljs-number">3.0</span>,requires_grad=<span class="hljs-literal">True</span>)y1 = x + <span class="hljs-number">1</span>y2 = <span class="hljs-number">2</span>*xloss = (y1-y2)**<span class="hljs-number">2</span>loss.backward()<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;loss.grad:&quot;</span>, loss.grad) <span class="hljs-comment"># non-leaf</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;y1.grad:&quot;</span>, y1.grad) <span class="hljs-comment"># non-leaf</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;y2.grad:&quot;</span>, y2.grad) <span class="hljs-comment"># non-leaf</span><span class="hljs-built_in">print</span>(x.grad)<span class="hljs-built_in">print</span>(x.is_leaf)<span class="hljs-built_in">print</span>(y1.is_leaf)<span class="hljs-built_in">print</span>(y2.is_leaf)<span class="hljs-built_in">print</span>(loss.is_leaf)&gt;&gt;&gt;Output:loss.grad: <span class="hljs-literal">None</span>y1.grad: <span class="hljs-literal">None</span>y2.grad: <span class="hljs-literal">None</span>tensor(<span class="hljs-number">4.</span>)<span class="hljs-literal">True</span><span class="hljs-literal">False</span><span class="hljs-literal">False</span><span class="hljs-literal">False</span></code></pre><p>利用<code>retain_grad</code>可以保留非叶子节点的梯度值。利用<code>register_hook</code>可以查看非叶子节点的梯度值。</p><pre class="highlight"><code class="python">x = torch.tensor(<span class="hljs-number">3.0</span>,requires_grad=<span class="hljs-literal">True</span>)y1 = x + <span class="hljs-number">1</span>y2 = <span class="hljs-number">2</span>*xloss = (y1-y2)**<span class="hljs-number">2</span><span class="hljs-comment"># 非叶子节点梯度显示控制</span>y1.register_hook(<span class="hljs-keyword">lambda</span> grad: <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;y1 grad: &#x27;</span>, grad))y2.register_hook(<span class="hljs-keyword">lambda</span> grad: <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;y2 grad: &#x27;</span>, grad))loss.retain_grad()<span class="hljs-comment"># 反向传播</span>loss.backward()<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;loss.grad:&quot;</span>, loss.grad)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x.grad:&quot;</span>, x.grad)&gt;&gt;&gt;Output:y2 grad:  tensor(<span class="hljs-number">4.</span>)y1 grad:  tensor(-<span class="hljs-number">4.</span>)loss.grad: tensor(<span class="hljs-number">1.</span>)x.grad: tensor(<span class="hljs-number">4.</span>)</code></pre>]]></content>
      
      
      <categories>
          
          <category> Pytorch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础知识 </tag>
            
            <tag> pytorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pytorch|自动微分和反向求导</title>
      <link href="/2023/04/08/pytorch-ji-chu-zhi-shi/04-zi-dong-wei-fen-yu-backward/"/>
      <url>/2023/04/08/pytorch-ji-chu-zhi-shi/04-zi-dong-wei-fen-yu-backward/</url>
      
        <content type="html"><![CDATA[<h1 id="pytorch自动微分简介"><a class="markdownIt-Anchor" href="#pytorch自动微分简介"></a> Pytorch自动微分简介</h1><p>神经网络通常依赖反向传播求梯度来更新网络参数，求梯度过程通常是一件非常复杂而容易出错的事情。而深度学习框架可以帮助我们自动地完成这种求梯度运算。<br>Pytorch一般通过反向传播<code>backward()</code>方法实现这种求梯度计算。该方法求得的梯度将存在对应自变量张量的<code>grad</code>属性下。除此之外，也能够调用<code>torch.autograd.grad()</code>函数来实现求梯度计算。这就是Pytorch的自动微分机制。</p><h2 id="求导数的例子"><a class="markdownIt-Anchor" href="#求导数的例子"></a> 求导数的例子</h2><h3 id="利用backward方法求导数"><a class="markdownIt-Anchor" href="#利用backward方法求导数"></a> 利用backward方法求导数</h3><p><code>backward()</code>方法通常在一个标量张量上调用，该方法求得的梯度将存在对应自变量张量的<code>grad</code>属性下。<br>如果调用的张量非标量，则要传入一个和它同形状的<code>gradient</code>参数张量。相当于用该<code>gradient</code>参数张量与调用张量<strong>作向量点乘再求和</strong>，得到的标量结果再反向传播。</p><h4 id="标量的反向传播"><a class="markdownIt-Anchor" href="#标量的反向传播"></a> <strong>标量的反向传播</strong></h4><p>求<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>a</mi><mo>×</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>b</mi><mo>×</mo><mi>x</mi><mo>+</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">f(x) = a\times x^2 + b \times x + c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span>的导数。<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>的导数是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>f</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn><mi>a</mi><mi>x</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">f&#x27;(x) = 2ax+b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span>。<br>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">x=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>时导数为-2。<br>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">x=2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span>时导数为2。<br>当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>=</mo><mo>−</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">x=-2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">2</span></span></span></span>时导数为-6。</p><pre class="highlight"><code class="python">x = torch.tensor(<span class="hljs-number">0.0</span>, requires_grad = <span class="hljs-literal">True</span>) <span class="hljs-comment"># x需要被求导</span>a = torch.tensor(<span class="hljs-number">1.0</span>)b = torch.tensor(-<span class="hljs-number">2.0</span>)c = torch.tensor(<span class="hljs-number">1.0</span>)y = a*torch.<span class="hljs-built_in">pow</span>(x,<span class="hljs-number">2</span>) + b*x + c <span class="hljs-built_in">print</span>(y)y.backward()dy_dx = x.grad<span class="hljs-built_in">print</span>(dy_dx)&gt;&gt;&gt;Output:tensor(<span class="hljs-number">1.</span>, grad_fn=&lt;AddBackward0&gt;)tensor(-<span class="hljs-number">2.</span>)</code></pre><h4 id="非标量的反向传播"><a class="markdownIt-Anchor" href="#非标量的反向传播"></a> <strong>非标量的反向传播</strong>�</h4><p>求<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>a</mi><mo>×</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>b</mi><mo>×</mo><mi>x</mi><mo>+</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">f(x) = a\times x^2 + b \times x + c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span>的导数。</p><pre class="highlight"><code class="python">x = torch.tensor([[<span class="hljs-number">0.0</span>,<span class="hljs-number">0.0</span>],[<span class="hljs-number">1.0</span>,<span class="hljs-number">2.0</span>]],requires_grad = <span class="hljs-literal">True</span>) <span class="hljs-comment"># x需要被求导</span>a = torch.tensor(<span class="hljs-number">1.0</span>)b = torch.tensor(-<span class="hljs-number">2.0</span>)c = torch.tensor(<span class="hljs-number">1.0</span>)y = a*torch.<span class="hljs-built_in">pow</span>(x,<span class="hljs-number">2</span>) + b*x + c gradient = torch.tensor([[<span class="hljs-number">1.0</span>,<span class="hljs-number">1.0</span>],[<span class="hljs-number">1.0</span>,<span class="hljs-number">1.0</span>]])<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x:\n&quot;</span>,x)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;y:\n&quot;</span>,y)y.backward(gradient = gradient)x_grad = x.grad<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x_grad:\n&quot;</span>,x_grad)&gt;&gt;&gt;Output:x: tensor([[<span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>],        [<span class="hljs-number">1.</span>, <span class="hljs-number">2.</span>]], requires_grad=<span class="hljs-literal">True</span>)y: tensor([[<span class="hljs-number">1.</span>, <span class="hljs-number">1.</span>],        [<span class="hljs-number">0.</span>, <span class="hljs-number">1.</span>]], grad_fn=&lt;AddBackward0&gt;)x_grad: tensor([[-<span class="hljs-number">2.</span>, -<span class="hljs-number">2.</span>],        [ <span class="hljs-number">0.</span>,  <span class="hljs-number">2.</span>]])</code></pre><h4 id="用标量的反向传播实现非标量的反向传播"><a class="markdownIt-Anchor" href="#用标量的反向传播实现非标量的反向传播"></a> <strong>用标量的反向传播实现</strong>�<strong>非标量的反向传播</strong></h4><p>求<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>a</mi><mo>×</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>b</mi><mo>×</mo><mi>x</mi><mo>+</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">f(x) = a\times x^2 + b \times x + c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span>的导数。</p><pre class="highlight"><code class="python">x = torch.tensor([[<span class="hljs-number">0.0</span>,<span class="hljs-number">0.0</span>],[<span class="hljs-number">1.0</span>,<span class="hljs-number">2.0</span>]],requires_grad = <span class="hljs-literal">True</span>) <span class="hljs-comment"># x需要被求导</span>a = torch.tensor(<span class="hljs-number">1.0</span>)b = torch.tensor(-<span class="hljs-number">2.0</span>)c = torch.tensor(<span class="hljs-number">1.0</span>)y = a*torch.<span class="hljs-built_in">pow</span>(x,<span class="hljs-number">2</span>) + b*x + c gradient = torch.tensor([[<span class="hljs-number">1.0</span>,<span class="hljs-number">1.0</span>],[<span class="hljs-number">1.0</span>,<span class="hljs-number">1.0</span>]])z = torch.<span class="hljs-built_in">sum</span>(y*gradient)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x:&quot;</span>,x)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;y:&quot;</span>,y)<span class="hljs-built_in">print</span>(z)z.backward()x_grad = x.grad<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x_grad:\n&quot;</span>,x_grad)&gt;&gt;&gt;Output:x: tensor([[<span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>],        [<span class="hljs-number">1.</span>, <span class="hljs-number">2.</span>]], requires_grad=<span class="hljs-literal">True</span>)y: tensor([[<span class="hljs-number">1.</span>, <span class="hljs-number">1.</span>],        [<span class="hljs-number">0.</span>, <span class="hljs-number">1.</span>]], grad_fn=&lt;AddBackward0&gt;)tensor(<span class="hljs-number">3.</span>, grad_fn=&lt;SumBackward0&gt;)x_grad: tensor([[-<span class="hljs-number">2.</span>, -<span class="hljs-number">2.</span>],        [ <span class="hljs-number">0.</span>,  <span class="hljs-number">2.</span>]])</code></pre><h3 id="利用autogradgrad方法求导数"><a class="markdownIt-Anchor" href="#利用autogradgrad方法求导数"></a> 利用autograd.grad方法求导数</h3><p>求<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>a</mi><mo>×</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>b</mi><mo>×</mo><mi>x</mi><mo>+</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">f(x) = a\times x^2 + b \times x + c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span>的导数。<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>的一阶导数是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>f</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn><mi>a</mi><mi>x</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">f&#x27;(x) = 2ax+b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">2</span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span>。<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>的二阶导数是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>f</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>2</mn><mi>a</mi></mrow><annotation encoding="application/x-tex">f&#x27;&#x27;(x)=2a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord mathnormal">a</span></span></span></span>。<br><code>torch.autograd.grad</code>方法中<code>create_graph</code>参数设置为 True 将允许创建更高阶的导数 。</p><pre class="highlight"><code class="python">x = torch.tensor(<span class="hljs-number">0.0</span>,requires_grad = <span class="hljs-literal">True</span>) <span class="hljs-comment"># x需要被求导</span>a = torch.tensor(<span class="hljs-number">1.0</span>)b = torch.tensor(-<span class="hljs-number">2.0</span>)c = torch.tensor(<span class="hljs-number">1.0</span>)y = a*torch.<span class="hljs-built_in">pow</span>(x,<span class="hljs-number">2</span>) + b*x + cgradient = torch.autograd.grad(y,x,create_graph=<span class="hljs-literal">True</span>)<span class="hljs-built_in">print</span>(gradient)dy_dx = gradient[<span class="hljs-number">0</span>]<span class="hljs-built_in">print</span>(dy_dx.data)<span class="hljs-comment"># 求二阶导数</span>dy2_dx2 = torch.autograd.grad(dy_dx,x)[<span class="hljs-number">0</span>] <span class="hljs-built_in">print</span>(dy2_dx2.data)&gt;&gt;&gt;Output:(tensor(-<span class="hljs-number">2.</span>, grad_fn=&lt;AddBackward0&gt;),)tensor(-<span class="hljs-number">2.</span>)tensor(<span class="hljs-number">2.</span>)</code></pre><p><code>torch.autograd.grad</code>允许同时对多个自变量求导数。如果有多个因变量，相当于把多个因变量的<strong>梯度结果求和</strong>。<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mn>1</mn></msub><mo>=</mo><msub><mi>x</mi><mn>1</mn></msub><mo>×</mo><msub><mi>x</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">y_1 = x_1 \times x_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mn>2</mn></msub><mo>=</mo><msub><mi>x</mi><mn>1</mn></msub><mo>+</mo><msub><mi>x</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">y_2=x_1+x_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mn>1</mn></msub></mrow><mrow><mi mathvariant="normal">∂</mi><mi>X</mi></mrow></mfrac><mo>=</mo><mrow><mo fence="true">[</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mn>1</mn></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mn>1</mn></msub></mrow></mfrac><mo separator="true">,</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mn>1</mn></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mn>2</mn></msub></mrow></mfrac><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>1</mn></msub><mo fence="true">]</mo></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned} \frac{\partial y_1}{\partial X} = \left[ \frac{\partial y_1}{\partial x_1} , \frac{\partial y_1}{\partial x_2} \right]= \left[x_2, x_1 \right] \end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.70003em;vertical-align:-1.1000150000000002em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6000149999999997em;"><span style="top:-3.6000150000000004em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">]</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1000150000000002em;"><span></span></span></span></span></span></span></span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>Y</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>X</mi></mrow></mfrac><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mn>1</mn></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mn>1</mn></msub></mrow></mfrac><mo separator="true">,</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mn>1</mn></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mn>2</mn></msub></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext> </mtext><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mn>2</mn></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mn>1</mn></msub></mrow></mfrac><mo separator="true">,</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>y</mi><mn>2</mn></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mn>2</mn></msub></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>x</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>x</mi><mn>1</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext> </mtext><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned} \frac{\partial Y}{\partial X} = \begin{bmatrix} \frac{\partial y_1}{\partial x_1} , \frac{\partial y_1}{\partial x_2} \\\ \frac{\partial y_2}{\partial x_1} , \frac{\partial y_2}{\partial x_2} \end{bmatrix}= \begin{bmatrix}x_2 &amp; x_1 \\\ 1 &amp; 1 \end{bmatrix} \end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.30003em;vertical-align:-1.400015em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.900015em;"><span style="top:-3.9000150000000002em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.627316em;"><span style="top:-3.6951em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.317784em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mspace"> </span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.127316em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">]</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mspace"> </span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.400015em;"><span></span></span></span></span></span></span></span></span></span></span></p><pre class="highlight"><code class="python">x1 = torch.tensor(<span class="hljs-number">1.0</span>,requires_grad = <span class="hljs-literal">True</span>)x2 = torch.tensor(<span class="hljs-number">2.0</span>,requires_grad = <span class="hljs-literal">True</span>)y1 = x1*x2y2 = x1+x2(dy1_dx1,dy1_dx2) = torch.autograd.grad(outputs=y1,inputs = [x1,x2],retain_graph = <span class="hljs-literal">True</span>)<span class="hljs-built_in">print</span>(dy1_dx1, dy1_dx2)(dy12_dx1,dy12_dx2) = torch.autograd.grad(outputs=[y1,y2],inputs = [x1,x2])<span class="hljs-built_in">print</span>(dy12_dx1, dy12_dx2)&gt;&gt;&gt;Output:tensor(<span class="hljs-number">2.</span>) tensor(<span class="hljs-number">1.</span>)tensor(<span class="hljs-number">3.</span>) tensor(<span class="hljs-number">2.</span>)</code></pre><h2 id="利用自动微分和优化器求最小值"><a class="markdownIt-Anchor" href="#利用自动微分和优化器求最小值"></a> 利用自动微分和优化器求最小值</h2><p>求<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>a</mi><mo>×</mo><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><mi>b</mi><mo>×</mo><mi>x</mi><mo>+</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">f(x) = a\times x^2 + b \times x + c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span>的最小值。</p><pre class="highlight"><code class="python">x = torch.tensor(<span class="hljs-number">0.0</span>,requires_grad = <span class="hljs-literal">True</span>) <span class="hljs-comment"># x需要被求导</span>a = torch.tensor(<span class="hljs-number">1.0</span>)b = torch.tensor(-<span class="hljs-number">2.0</span>)c = torch.tensor(<span class="hljs-number">1.0</span>)optimizer = torch.optim.SGD(params=[x],lr = <span class="hljs-number">0.1</span>)<span class="hljs-keyword">for</span> param <span class="hljs-keyword">in</span> optimizer.state_dict():    <span class="hljs-built_in">print</span>(param, optimizer.state_dict()[param])<span class="hljs-keyword">def</span> <span class="hljs-title function_">f</span>(<span class="hljs-params">x</span>):    result = a*torch.<span class="hljs-built_in">pow</span>(x,<span class="hljs-number">2</span>) + b*x + c     <span class="hljs-keyword">return</span>(result)<span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):    optimizer.zero_grad()    y = f(x)    <span class="hljs-built_in">print</span>(y)    y.backward()    optimizer.step()    <span class="hljs-built_in">print</span>(optimizer.param_groups[<span class="hljs-number">0</span>])<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;y=&quot;</span>,f(x).data,<span class="hljs-string">&quot;;&quot;</span>,<span class="hljs-string">&quot;x=&quot;</span>,x.data)&gt;&gt;&gt;Output:state {}param_groups [{<span class="hljs-string">&#x27;lr&#x27;</span>: <span class="hljs-number">0.1</span>, <span class="hljs-string">&#x27;momentum&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;dampening&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;weight_decay&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;nesterov&#x27;</span>: <span class="hljs-literal">False</span>, <span class="hljs-string">&#x27;params&#x27;</span>: [<span class="hljs-number">0</span>]}]tensor(<span class="hljs-number">1.</span>, grad_fn=&lt;AddBackward0&gt;){<span class="hljs-string">&#x27;params&#x27;</span>: [tensor(<span class="hljs-number">0.2000</span>, requires_grad=<span class="hljs-literal">True</span>)], <span class="hljs-string">&#x27;lr&#x27;</span>: <span class="hljs-number">0.1</span>, <span class="hljs-string">&#x27;momentum&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;dampening&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;weight_decay&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;nesterov&#x27;</span>: <span class="hljs-literal">False</span>}tensor(<span class="hljs-number">0.6400</span>, grad_fn=&lt;AddBackward0&gt;){<span class="hljs-string">&#x27;params&#x27;</span>: [tensor(<span class="hljs-number">0.3600</span>, requires_grad=<span class="hljs-literal">True</span>)], <span class="hljs-string">&#x27;lr&#x27;</span>: <span class="hljs-number">0.1</span>, <span class="hljs-string">&#x27;momentum&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;dampening&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;weight_decay&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;nesterov&#x27;</span>: <span class="hljs-literal">False</span>}tensor(<span class="hljs-number">0.4096</span>, grad_fn=&lt;AddBackward0&gt;){<span class="hljs-string">&#x27;params&#x27;</span>: [tensor(<span class="hljs-number">0.4880</span>, requires_grad=<span class="hljs-literal">True</span>)], <span class="hljs-string">&#x27;lr&#x27;</span>: <span class="hljs-number">0.1</span>, <span class="hljs-string">&#x27;momentum&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;dampening&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;weight_decay&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;nesterov&#x27;</span>: <span class="hljs-literal">False</span>}tensor(<span class="hljs-number">0.2621</span>, grad_fn=&lt;AddBackward0&gt;){<span class="hljs-string">&#x27;params&#x27;</span>: [tensor(<span class="hljs-number">0.5904</span>, requires_grad=<span class="hljs-literal">True</span>)], <span class="hljs-string">&#x27;lr&#x27;</span>: <span class="hljs-number">0.1</span>, <span class="hljs-string">&#x27;momentum&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;dampening&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;weight_decay&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;nesterov&#x27;</span>: <span class="hljs-literal">False</span>}tensor(<span class="hljs-number">0.1678</span>, grad_fn=&lt;AddBackward0&gt;){<span class="hljs-string">&#x27;params&#x27;</span>: [tensor(<span class="hljs-number">0.6723</span>, requires_grad=<span class="hljs-literal">True</span>)], <span class="hljs-string">&#x27;lr&#x27;</span>: <span class="hljs-number">0.1</span>, <span class="hljs-string">&#x27;momentum&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;dampening&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;weight_decay&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;nesterov&#x27;</span>: <span class="hljs-literal">False</span>}tensor(<span class="hljs-number">0.1074</span>, grad_fn=&lt;AddBackward0&gt;){<span class="hljs-string">&#x27;params&#x27;</span>: [tensor(<span class="hljs-number">0.7379</span>, requires_grad=<span class="hljs-literal">True</span>)], <span class="hljs-string">&#x27;lr&#x27;</span>: <span class="hljs-number">0.1</span>, <span class="hljs-string">&#x27;momentum&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;dampening&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;weight_decay&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;nesterov&#x27;</span>: <span class="hljs-literal">False</span>}tensor(<span class="hljs-number">0.0687</span>, grad_fn=&lt;AddBackward0&gt;){<span class="hljs-string">&#x27;params&#x27;</span>: [tensor(<span class="hljs-number">0.7903</span>, requires_grad=<span class="hljs-literal">True</span>)], <span class="hljs-string">&#x27;lr&#x27;</span>: <span class="hljs-number">0.1</span>, <span class="hljs-string">&#x27;momentum&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;dampening&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;weight_decay&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;nesterov&#x27;</span>: <span class="hljs-literal">False</span>}tensor(<span class="hljs-number">0.0440</span>, grad_fn=&lt;AddBackward0&gt;){<span class="hljs-string">&#x27;params&#x27;</span>: [tensor(<span class="hljs-number">0.8322</span>, requires_grad=<span class="hljs-literal">True</span>)], <span class="hljs-string">&#x27;lr&#x27;</span>: <span class="hljs-number">0.1</span>, <span class="hljs-string">&#x27;momentum&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;dampening&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;weight_decay&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;nesterov&#x27;</span>: <span class="hljs-literal">False</span>}tensor(<span class="hljs-number">0.0281</span>, grad_fn=&lt;AddBackward0&gt;){<span class="hljs-string">&#x27;params&#x27;</span>: [tensor(<span class="hljs-number">0.8658</span>, requires_grad=<span class="hljs-literal">True</span>)], <span class="hljs-string">&#x27;lr&#x27;</span>: <span class="hljs-number">0.1</span>, <span class="hljs-string">&#x27;momentum&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;dampening&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;weight_decay&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;nesterov&#x27;</span>: <span class="hljs-literal">False</span>}tensor(<span class="hljs-number">0.0180</span>, grad_fn=&lt;AddBackward0&gt;){<span class="hljs-string">&#x27;params&#x27;</span>: [tensor(<span class="hljs-number">0.8926</span>, requires_grad=<span class="hljs-literal">True</span>)], <span class="hljs-string">&#x27;lr&#x27;</span>: <span class="hljs-number">0.1</span>, <span class="hljs-string">&#x27;momentum&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;dampening&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;weight_decay&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;nesterov&#x27;</span>: <span class="hljs-literal">False</span>}y= tensor(<span class="hljs-number">0.0115</span>) ; x= tensor(<span class="hljs-number">0.8926</span>)</code></pre><h2 id="反向传播的梯度累加"><a class="markdownIt-Anchor" href="#反向传播的梯度累加"></a> 反向传播的梯度累加</h2><p>以下面的计算过程为例，进行反向传播计算。<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>2</mn></msub><mo>=</mo><msub><mi>x</mi><mn>1</mn></msub><mo>×</mo><msub><mi>w</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">x_2 = x_1 \times w_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><msub><mi>x</mi><mn>2</mn></msub><mo>×</mo><msub><mi>w</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">y = x_2 \times w_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo>=</mo><mi>Y</mi><mo>−</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">L = Y-y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></p><pre class="highlight"><code class="python">x1 = torch.from_numpy(<span class="hljs-number">2</span>*np.ones((<span class="hljs-number">2</span>,<span class="hljs-number">2</span>), dtype=np.float32))x1.requires_grad_(<span class="hljs-literal">True</span>)w1 = torch.from_numpy(<span class="hljs-number">5</span>*np.ones((<span class="hljs-number">2</span>,<span class="hljs-number">2</span>), dtype=np.float32))w1.requires_grad_(<span class="hljs-literal">True</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x1 = &quot;</span>, x1)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;w1 = &quot;</span>, w1)&gt;&gt;&gt;Output:x1 =  tensor([[<span class="hljs-number">2.</span>, <span class="hljs-number">2.</span>],        [<span class="hljs-number">2.</span>, <span class="hljs-number">2.</span>]], requires_grad=<span class="hljs-literal">True</span>)w1 =  tensor([[<span class="hljs-number">5.</span>, <span class="hljs-number">5.</span>],        [<span class="hljs-number">5.</span>, <span class="hljs-number">5.</span>]], requires_grad=<span class="hljs-literal">True</span>)</code></pre><pre class="highlight"><code class="python">x2 = x1 * w1w2 = torch.from_numpy(<span class="hljs-number">6</span>*np.ones((<span class="hljs-number">2</span>,<span class="hljs-number">2</span>), dtype=np.float32))w2.requires_grad_(<span class="hljs-literal">True</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x2 = &quot;</span>, x2)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;w2 = &quot;</span>, w2)&gt;&gt;&gt;Output:x2 =  tensor([[<span class="hljs-number">10.</span>, <span class="hljs-number">10.</span>],        [<span class="hljs-number">10.</span>, <span class="hljs-number">10.</span>]], grad_fn=&lt;MulBackward0&gt;)w2 =  tensor([[<span class="hljs-number">6.</span>, <span class="hljs-number">6.</span>],        [<span class="hljs-number">6.</span>, <span class="hljs-number">6.</span>]], requires_grad=<span class="hljs-literal">True</span>)</code></pre><pre class="highlight"><code class="python">y = x2 * w2Y = torch.from_numpy(<span class="hljs-number">10</span>*np.ones((<span class="hljs-number">2</span>,<span class="hljs-number">2</span>), dtype=np.float32))<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;y = &quot;</span>, y)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Y = &quot;</span>, Y)L = Y-y<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Loss = &quot;</span>, L)&gt;&gt;&gt;Output:y =  tensor([[<span class="hljs-number">60.</span>, <span class="hljs-number">60.</span>],        [<span class="hljs-number">60.</span>, <span class="hljs-number">60.</span>]], grad_fn=&lt;MulBackward0&gt;)Y =  tensor([[<span class="hljs-number">10.</span>, <span class="hljs-number">10.</span>],        [<span class="hljs-number">10.</span>, <span class="hljs-number">10.</span>]])Loss =  tensor([[-<span class="hljs-number">50.</span>, -<span class="hljs-number">50.</span>],        [-<span class="hljs-number">50.</span>, -<span class="hljs-number">50.</span>]], grad_fn=&lt;SubBackward0&gt;)</code></pre><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>L</mi><mo>=</mo><mi>Y</mi><mo>−</mo><mi>y</mi><mo>=</mo><mi>Y</mi><mo>−</mo><msub><mi>x</mi><mn>1</mn></msub><mo>×</mo><msub><mi>w</mi><mn>1</mn></msub><mo>×</mo><mi>w</mi><mn>2</mn></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned} L = Y-y=Y-x_1 \times w_1 \times w2 \end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.5000000000000002em;vertical-align:-0.5000000000000002em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1em;"><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5000000000000002em;"><span></span></span></span></span></span></span></span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mn>1</mn></msub></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>y</mi></mrow></mfrac><mo>×</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>y</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mn>1</mn></msub></mrow></mfrac><mo>=</mo><mo>−</mo><msub><mi>w</mi><mn>1</mn></msub><mo>×</mo><msub><mi>w</mi><mn>2</mn></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned} \frac{\partial L}{\partial x_1} = \frac{\partial L}{\partial y} \times \frac{\partial y}{\partial x_1}=-w_1 \times w_2 \end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.55188em;vertical-align:-1.02594em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.52594em;"><span style="top:-3.5259399999999994em;"><span class="pstrut" style="height:3.3714399999999998em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">−</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.02594em;"><span></span></span></span></span></span></span></span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>w</mi><mn>1</mn></msub></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>y</mi></mrow></mfrac><mo>×</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>y</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>w</mi><mn>1</mn></msub></mrow></mfrac><mo>=</mo><mo>−</mo><msub><mi>x</mi><mn>1</mn></msub><mo>×</mo><msub><mi>w</mi><mn>2</mn></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned} \frac{\partial L}{\partial w_1} = \frac{\partial L}{\partial y} \times  \frac{\partial y}{\partial w_1}=-x_1 \times w_2 \end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.55188em;vertical-align:-1.02594em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.52594em;"><span style="top:-3.5259399999999994em;"><span class="pstrut" style="height:3.3714399999999998em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">−</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.02594em;"><span></span></span></span></span></span></span></span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>w</mi><mn>2</mn></msub></mrow></mfrac><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>y</mi></mrow></mfrac><mo>×</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>y</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>w</mi><mn>2</mn></msub></mrow></mfrac><mo>=</mo><mo>−</mo><msub><mi>x</mi><mn>1</mn></msub><mo>×</mo><msub><mi>w</mi><mn>1</mn></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned} \frac{\partial L}{\partial w_2} = \frac{\partial L}{\partial y} \times \frac{\partial y}{\partial w_2}=-x_1 \times w_1 \end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.55188em;vertical-align:-1.02594em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.52594em;"><span style="top:-3.5259399999999994em;"><span class="pstrut" style="height:3.3714399999999998em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">−</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.02594em;"><span></span></span></span></span></span></span></span></span></span></span></p><pre class="highlight"><code class="python">grad = torch.ones(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,dtype=torch.<span class="hljs-built_in">float</span>)L.backward(grad)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x1.grad = &quot;</span>, x1.grad)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;w1.grad = &quot;</span>, w1.grad)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;w2.grad = &quot;</span>, w2.grad)&gt;&gt;&gt;Output:x1.grad =  tensor([[-<span class="hljs-number">30.</span>, -<span class="hljs-number">30.</span>],        [-<span class="hljs-number">30.</span>, -<span class="hljs-number">30.</span>]])w1.grad =  tensor([[-<span class="hljs-number">12.</span>, -<span class="hljs-number">12.</span>],        [-<span class="hljs-number">12.</span>, -<span class="hljs-number">12.</span>]])w2.grad =  tensor([[-<span class="hljs-number">10.</span>, -<span class="hljs-number">10.</span>],        [-<span class="hljs-number">10.</span>, -<span class="hljs-number">10.</span>]])</code></pre><p>张量的梯度是累加的，如果不对梯度清零，梯度会一直累加下去。<br>此时进行新的运算，并查看<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">x_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的梯度。<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mi>L</mi><mn>2</mn></msub><mo>=</mo><msub><mi>x</mi><mn>1</mn></msub><mo>×</mo><msub><mi>x</mi><mn>1</mn></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned} L_2 = x_1 \times x_1 \end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.5000000000000002em;vertical-align:-0.5000000000000002em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1em;"><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5000000000000002em;"><span></span></span></span></span></span></span></span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><msub><mi>L</mi><mn>2</mn></msub></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mn>1</mn></msub></mrow></mfrac><mo>=</mo><mn>2</mn><mo>×</mo><msub><mi>x</mi><mn>1</mn></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned} \frac{\partial L_2}{\partial x_1} = 2 \times x_1 \end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.50744em;vertical-align:-1.0037200000000002em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5037199999999997em;"><span style="top:-3.5037199999999995em;"><span class="pstrut" style="height:3.3714399999999998em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.3139999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8360000000000001em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0037200000000002em;"><span></span></span></span></span></span></span></span></span></span></span><br>经过第一轮运算后<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">x_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的梯度是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>30</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>30</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext> </mtext><mo>−</mo><mn>30</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>30</mn></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><annotation encoding="application/x-tex">\begin{bmatrix} -30 &amp; -30 \\\ -30 &amp; -30 \end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">3</span><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mspace"> </span><span class="mord">−</span><span class="mord">3</span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">3</span><span class="mord">0</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">3</span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span>，新的运算后计算得到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">x_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的梯度是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext> </mtext><mn>4</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>4</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><annotation encoding="application/x-tex">\begin{bmatrix} 4 &amp; 4 \\\ 4 &amp; 4 \end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mspace"> </span><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span>，则累加后的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">x_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的最终梯度是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>26</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>26</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext> </mtext><mo>−</mo><mn>26</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>26</mn></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><annotation encoding="application/x-tex">\begin{bmatrix} -26 &amp; -26 \\\ -26 &amp; -26 \end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">2</span><span class="mord">6</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mspace"> </span><span class="mord">−</span><span class="mord">2</span><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">2</span><span class="mord">6</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">−</span><span class="mord">2</span><span class="mord">6</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span>。</p><pre class="highlight"><code class="python">L2 = x1*x1L2.backward(torch.ones(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>, dtype=torch.<span class="hljs-built_in">float</span>))<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;x1.grad = &quot;</span>, x1.grad)&gt;&gt;&gt;Output:x1.grad =  tensor([[-<span class="hljs-number">26.</span>, -<span class="hljs-number">26.</span>],        [-<span class="hljs-number">26.</span>, -<span class="hljs-number">26.</span>]])</code></pre>]]></content>
      
      
      <categories>
          
          <category> Pytorch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础知识 </tag>
            
            <tag> pytorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pytorch|构建数据管道</title>
      <link href="/2023/04/06/pytorch-ji-chu-zhi-shi/dataset-sampler-he-dataloader/"/>
      <url>/2023/04/06/pytorch-ji-chu-zhi-shi/dataset-sampler-he-dataloader/</url>
      
        <content type="html"><![CDATA[<h1 id="pytorch数据管道构建简介"><a class="markdownIt-Anchor" href="#pytorch数据管道构建简介"></a> Pytorch数据管道构建简介</h1><p>Pytorch通常使用Dataset和DataLoader这两个工具类来构建数据管道。<br>Dataset定义了数据集的内容，它相当于一个类似列表的数据结构，具有确定的长度，能够用索引获取数据集中的元素。<br>而DataLoader定义了按batch加载数据集的方法，它是一个实现了<code>__iter__</code>方法的可迭代对象，每次迭代输出一个batch的数据。<br>DataLoader能够控制batch的大小，batch中元素的采样方法，以及将batch结果整理成模型所需输入形式的方法，并且能够使用多进程读取数据。<br>在绝大部分情况下，用户只需实现Dataset的<code>__len__</code>方法和<code>__getitem__</code>方法，就可以轻松构建自己的数据集，并用默认数据管道进行加载。对于一些复杂的数据集，用户可能还要自己设计 DataLoader中的<code>collate_fn</code>方法以便将获取的一个批次的数据整理成模型需要的输入形式。</p><h2 id="深入理解dataset和dataloader原理"><a class="markdownIt-Anchor" href="#深入理解dataset和dataloader原理"></a> 深入理解Dataset和DataLoader原理</h2><h3 id="获取一个batch数据的步骤"><a class="markdownIt-Anchor" href="#获取一个batch数据的步骤"></a> <strong>获取一个batch数据的步骤</strong></h3><p>假定数据集的特征和标签分别表示为张量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span>，数据集可以表示为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">,</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(X, Y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span>，假定batch大小为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span>。</p><ol><li>首先我们要确定数据集的长度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>。结果类似：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>=</mo><mn>1000</mn></mrow><annotation encoding="application/x-tex">n = 1000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span></span></span></span>。</li><li>然后我们从<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>的范围中抽样出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span>个数(batch大小)。假定<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>=</mo><mn>4</mn></mrow><annotation encoding="application/x-tex">m=4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span></span></span></span>，拿到的结果是一个列表，类似：<code>indices = [1,4,8,9]</code>。</li><li>接着我们从数据集中去取这<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span>个数对应下标的元素。拿到的结果是一个元组列表，类似：<code>samples = [(X[1],Y[1]),(X[4],Y[4]),(X[8],Y[8]),(X[9],Y[9])]</code>。</li><li>最后我们将结果整理成<strong>两个张量</strong>作为输出。</li></ol><p>拿到的结果是两个张量，类似batch = (features, labels)，其中<code>features = torch.stack([X[1],X[4],X[8],X[9]])</code>；<code>labels = torch.stack([Y[1],Y[4],Y[8],Y[9]])</code>。</p><h3 id="dataset和dataloader的功能分工"><a class="markdownIt-Anchor" href="#dataset和dataloader的功能分工"></a> Dataset和DataLoader的功能分工</h3><p>第1个步骤确定数据集的长度是由 Dataset的<code>__len__</code>方法实现的。<br>第2个步骤从<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>的范围中抽样出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span>个数的方法是由 DataLoader的<code>sampler</code>和<code>batch_sampler</code>参数指定的。<code>sampler</code>参数<strong>指定单个元素抽样方法</strong>，一般无需用户设置，程序默认在DataLoader的参数<code>shuffle=True</code>时采用随机抽样，<code>shuffle=False</code>时采用顺序抽样。<code>batch_sampler</code>参数<strong>将多个抽样的元素整理成一个列表</strong>，一般无需用户设置，默认方法在DataLoader的参数<code>drop_last=True</code>时会丢弃数据集最后一个长度不能被batch大小整除的批次，在<code>drop_last=False</code>时保留最后一个批次。<br>第3个步骤的核心逻辑根据下标取数据集中的元素，是由 Dataset的<code>__getitem__</code>方法实现的。<br>第4个步骤的逻辑由DataLoader的参数<code>collate_fn</code>指定。一般情况下也无需用户设置。<br>Dataset和DataLoader的一般使用方式如下：</p><pre class="highlight"><code class="python"><span class="hljs-keyword">import</span> torch   <span class="hljs-keyword">from</span> torch.utils.data <span class="hljs-keyword">import</span> TensorDataset,Dataset,DataLoader  <span class="hljs-keyword">from</span> torch.utils.data <span class="hljs-keyword">import</span> RandomSampler,BatchSampler       ds = TensorDataset(torch.randn(<span class="hljs-number">1000</span>,<span class="hljs-number">3</span>),                     torch.randint(low=<span class="hljs-number">0</span>,high=<span class="hljs-number">2</span>,size=(<span class="hljs-number">1000</span>,)).<span class="hljs-built_in">float</span>())  dl = DataLoader(ds, batch_size=<span class="hljs-number">4</span>, drop_last = <span class="hljs-literal">False</span>)  features, labels = <span class="hljs-built_in">next</span>(<span class="hljs-built_in">iter</span>(dl))  <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;features = &quot;</span>,features )  <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;labels = &quot;</span>,labels )</code></pre><p>将DataLoader内部调用方式步骤拆解如下：</p><pre class="highlight"><code class="python"><span class="hljs-comment"># step1: 确定数据集长度 (Dataset的 __len__ 方法实现)  </span>ds = TensorDataset(torch.randn(<span class="hljs-number">1000</span>,<span class="hljs-number">3</span>),                     torch.randint(low=<span class="hljs-number">0</span>,high=<span class="hljs-number">2</span>,size=(<span class="hljs-number">1000</span>,)).<span class="hljs-built_in">float</span>())  <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;n = &quot;</span>, <span class="hljs-built_in">len</span>(ds)) <span class="hljs-comment"># len(ds)等价于 ds.__len__()  </span>  <span class="hljs-comment"># step2: 确定抽样indices (DataLoader中的 Sampler和BatchSampler实现)  </span>sampler = RandomSampler(data_source = ds)  batch_sampler = BatchSampler(sampler = sampler,                                batch_size = <span class="hljs-number">4</span>, drop_last = <span class="hljs-literal">False</span>)  <span class="hljs-keyword">for</span> idxs <span class="hljs-keyword">in</span> batch_sampler:      indices = idxs      <span class="hljs-keyword">break</span>   <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;indices = &quot;</span>,indices)    <span class="hljs-comment"># step3: 取出一批样本batch (Dataset的 __getitem__ 方法实现)  </span>batch = [ds[i] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span>  indices]  <span class="hljs-comment">#  ds[i] 等价于 ds.__getitem__(i)  </span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;batch = &quot;</span>, batch)    <span class="hljs-comment"># step4: 整理成features和labels (DataLoader 的 collate_fn 方法实现)  </span><span class="hljs-keyword">def</span> <span class="hljs-title function_">collate_fn</span>(<span class="hljs-params">batch</span>):      features = torch.stack([sample[<span class="hljs-number">0</span>] <span class="hljs-keyword">for</span> sample <span class="hljs-keyword">in</span> batch])      labels = torch.stack([sample[<span class="hljs-number">1</span>] <span class="hljs-keyword">for</span> sample <span class="hljs-keyword">in</span> batch])      <span class="hljs-keyword">return</span> features,labels     features,labels = collate_fn(batch)  <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;features = &quot;</span>,features)  <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;labels = &quot;</span>,labels) </code></pre><h3 id="dataset和dataloader的核心源码"><a class="markdownIt-Anchor" href="#dataset和dataloader的核心源码"></a> <strong>Dataset和DataLoader的核心源码</strong></h3><p>以下是 Dataset和 DataLoader的核心源码，省略了为了提升性能而引入的诸如多进程读取数据相关的代码。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">import</span> torch  <span class="hljs-keyword">class</span> <span class="hljs-title class_">Dataset</span>(<span class="hljs-title class_ inherited__">object</span>):      <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):          <span class="hljs-keyword">pass</span>            <span class="hljs-keyword">def</span> <span class="hljs-title function_">__len__</span>(<span class="hljs-params">self</span>):          <span class="hljs-keyword">raise</span> NotImplementedError                <span class="hljs-keyword">def</span> <span class="hljs-title function_">__getitem__</span>(<span class="hljs-params">self,index</span>):          <span class="hljs-keyword">raise</span> NotImplementedError            <span class="hljs-keyword">class</span> <span class="hljs-title class_">DataLoader</span>(<span class="hljs-title class_ inherited__">object</span>):      <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self,dataset,batch_size,collate_fn = <span class="hljs-literal">None</span>,shuffle = <span class="hljs-literal">True</span>,drop_last = <span class="hljs-literal">False</span></span>):          self.dataset = dataset          self.sampler = torch.utils.data.RandomSampler <span class="hljs-keyword">if</span> shuffle <span class="hljs-keyword">else</span> torch.utils.data.SequentialSampler          self.batch_sampler = torch.utils.data.BatchSampler          self.sample_iter = self.batch_sampler(self.sampler(self.dataset),              batch_size = batch_size, drop_last = drop_last)          self.collate_fn = collate_fn <span class="hljs-keyword">if</span> collate_fn <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span> <span class="hljs-keyword">else</span> torch.utils.data._utils.collate.default_collate                <span class="hljs-keyword">def</span> <span class="hljs-title function_">__next__</span>(<span class="hljs-params">self</span>):          indices = <span class="hljs-built_in">next</span>(<span class="hljs-built_in">iter</span>(self.sample_iter))          batch = self.collate_fn([self.dataset[i] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> indices])          <span class="hljs-keyword">return</span> batch            <span class="hljs-keyword">def</span> <span class="hljs-title function_">__iter__</span>(<span class="hljs-params">self</span>):          <span class="hljs-keyword">return</span> self </code></pre><h2 id="sampler原理"><a class="markdownIt-Anchor" href="#sampler原理"></a> Sampler原理</h2><h3 id="sampler参数传递"><a class="markdownIt-Anchor" href="#sampler参数传递"></a> Sampler参数传递</h3><p>假设数据是一组图像，每一张图像对应一个index，那么如果要读取数据就只需要对应的index即可，即上面代码中的indices，而选取index的方式有多种，有按顺序的，也有乱序的，所以这个工作需要Sampler完成。<br>首先看一下DataLoader的源代码长什么样。为方便理解只选取了num_works为0的情况（num_works简单理解就是能够并行化地读取数据）。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">DataLoader</span>(<span class="hljs-title class_ inherited__">object</span>):    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, dataset, batch_size=<span class="hljs-number">1</span>, shuffle=<span class="hljs-literal">False</span>, sampler=<span class="hljs-literal">None</span>,                 batch_sampler=<span class="hljs-literal">None</span>, num_workers=<span class="hljs-number">0</span>, collate_fn=default_collate,                 pin_memory=<span class="hljs-literal">False</span>, drop_last=<span class="hljs-literal">False</span>, timeout=<span class="hljs-number">0</span>,                 worker_init_fn=<span class="hljs-literal">None</span></span>):        ...    ...        ...    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__next__</span>(<span class="hljs-params">self</span>):        <span class="hljs-keyword">if</span> self.num_workers == <span class="hljs-number">0</span>:              indices = <span class="hljs-built_in">next</span>(self.sample_iter)  <span class="hljs-comment"># Sampler</span>            batch = self.collate_fn([self.dataset[i] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> indices]) <span class="hljs-comment"># Dataset</span>            <span class="hljs-keyword">if</span> self.pin_memory:                batch = _utils.pin_memory.pin_memory_batch(batch)            <span class="hljs-keyword">return</span> batch</code></pre><p>可以看到初始化参数里有两种sampler：<code>sampler</code>和<code>batch_sampler</code>，都默认为None。前者的作用是生成一系列的index，而batch_sampler则是将sampler生成的indices打包分组，得到一个又一个batch的index。例如下面示例中，<code>BatchSampler</code>将<code>SequentialSampler</code>生成的index按照指定的batch size分组。<br><code>collate_fn</code>的作用就是将一个batch的数据进行整理合并的操作。默认的<code>collate_fn</code>是将img和label分别合并成imgs和labels，所以如果你的__getitem__方法只是返回 img、label，那么你可以使用默认的collate_fn方法，但是如果你每次读取的数据有img，box，label等等，那么你就需要自定义<code>collate_fn</code>来将对应的数据合并成一个batch数据，这样方便后续的训练步骤。</p><pre class="highlight"><code class="python">&gt;&gt;&gt;<span class="hljs-keyword">in</span> : <span class="hljs-built_in">list</span>(BatchSampler(SequentialSampler(<span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>)), batch_size=<span class="hljs-number">3</span>, drop_last=<span class="hljs-literal">False</span>))&gt;&gt;&gt;out: [[<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>], [<span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>], [<span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>], [<span class="hljs-number">9</span>]]</code></pre><p>Pytorch中已经实现的Sampler有如下几种：</p><ul><li>SequentialSampler</li><li>RandomSampler</li><li>WeightedSampler</li><li>SubsetRandomSampler</li></ul><p>需要注意的是DataLoader的部分<strong>初始化参数之间存在互斥关系</strong>：</p><ul><li>如果自定义了<code>batch_sampler</code>，那么这些参数都必须使用默认值：batch_size，shuffle，sampler，drop_last.</li><li>如果自定义了<code>sampler</code>，那么<code>shuffle</code>需要设置为False</li><li>如果<code>sampler</code>和<code>batch_sampler</code>都为None，那么<code>batch_sampler</code>使用Pytorch已经实现好的BatchSampler，而sampler分两种情况：<ul><li>若<code>shuffle=True</code>，则<code>sampler=RandomSampler(dataset)</code></li><li>若<code>shuffle=False</code>，则<code>sampler=SequentialSampler(dataset)</code></li></ul></li></ul><h3 id="自定义sampler和batchsampler"><a class="markdownIt-Anchor" href="#自定义sampler和batchsampler"></a> 自定义Sampler和BatchSampler</h3><p>查看源代码其实可以发现，所有采样器其实都继承自同一个父类，即Sampler,其代码定义如下：</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Sampler</span>(<span class="hljs-title class_ inherited__">object</span>):    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, data_source</span>):        <span class="hljs-keyword">pass</span>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__iter__</span>(<span class="hljs-params">self</span>):        <span class="hljs-keyword">raise</span> NotImplementedError            <span class="hljs-keyword">def</span> <span class="hljs-title function_">__len__</span>(<span class="hljs-params">self</span>):        <span class="hljs-keyword">return</span> <span class="hljs-built_in">len</span>(self.data_source)</code></pre><p>所以要做的就是定义好<code>__iter__(self)</code>函数，不过要注意的是该函数的返回值需要是可迭代的。例如<code>SequentialSampler</code>返回的是<code>iter(range(len(self.data_source)))</code>。<br>另外<code>BatchSampler</code>与其他Sampler的主要区别是它需要将Sampler作为参数进行打包，进而每次迭代返回以batch_size为大小的index列表。也就是说在后面的读取数据过程中使用的都是batch sampler。</p><h2 id="创建数据集的3种方式"><a class="markdownIt-Anchor" href="#创建数据集的3种方式"></a> 创建数据集的3种方式</h2><p>Dataset创建数据集常用的方法有：</p><ol><li>使用<code>torch.utils.data.TensorDataset</code>根据Tensor创建数据集(numpy的array，Pandas的DataFrame需要先转换成Tensor)。</li><li>使用<code>torchvision.datasets.ImageFolder</code>根据图片目录创建图片数据集。</li><li>继承<code>torch.utils.data.Dataset</code>创建自定义数据集。</li></ol><p>此外，还可以通过</p><ul><li><code>torch.utils.data.random_split</code>将一个数据集分割成多份，常用于分割训练集，验证集和测试集。</li><li>调用Dataset的加法运算符(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>+</mo></mrow><annotation encoding="application/x-tex">+</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">+</span></span></span></span>)将多个数据集合并成一个数据集。</li></ul><h3 id="根据tensor创建数据集"><a class="markdownIt-Anchor" href="#根据tensor创建数据集"></a> <strong>根据Tensor创建数据集</strong></h3><pre class="highlight"><code class="python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np   <span class="hljs-keyword">import</span> torch   <span class="hljs-keyword">from</span> torch.utils.data <span class="hljs-keyword">import</span> TensorDataset,Dataset,DataLoader,random_split <span class="hljs-comment"># 根据Tensor创建数据集  </span><span class="hljs-keyword">from</span> sklearn <span class="hljs-keyword">import</span> datasets   iris = datasets.load_iris()  ds_iris = TensorDataset(torch.tensor(iris.data), torch.tensor(iris.target))    <span class="hljs-comment"># 分割成训练集和预测集  </span>n_train = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">len</span>(ds_iris)*<span class="hljs-number">0.8</span>)  n_val = <span class="hljs-built_in">len</span>(ds_iris) - n_train  ds_train, ds_val = random_split(ds_iris,[n_train,n_val])    <span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(ds_iris))  <span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(ds_train)) </code></pre><pre class="highlight"><code class="python"><span class="hljs-comment"># 使用DataLoader加载数据集  </span>dl_train,dl_val = DataLoader(ds_train, batch_size = <span class="hljs-number">8</span>), DataLoader(ds_val, batch_size = <span class="hljs-number">8</span>)    <span class="hljs-keyword">for</span> features,labels <span class="hljs-keyword">in</span> dl_train:      <span class="hljs-built_in">print</span>(features,labels)      <span class="hljs-keyword">break</span>  <span class="hljs-comment"># 演示加法运算符（`+`）的合并作用  </span>ds_data = ds_train + ds_val    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;len(ds_train) = &#x27;</span>,<span class="hljs-built_in">len</span>(ds_train))  <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;len(ds_valid) = &#x27;</span>,<span class="hljs-built_in">len</span>(ds_val))  <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;len(ds_train+ds_valid) = &#x27;</span>,<span class="hljs-built_in">len</span>(ds_data))  <span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(ds_data))  </code></pre><h3 id="根据图片目录创建图片数据集"><a class="markdownIt-Anchor" href="#根据图片目录创建图片数据集"></a> <strong>根据图片目录创建图片数据集</strong></h3><pre class="highlight"><code class="python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np   <span class="hljs-keyword">import</span> torch   <span class="hljs-keyword">from</span> torch.utils.data <span class="hljs-keyword">import</span> DataLoader  <span class="hljs-keyword">from</span> torchvision <span class="hljs-keyword">import</span> transforms,datasets   <span class="hljs-comment"># 定义图片增强操作  </span>transform_train = transforms.Compose([     transforms.RandomHorizontalFlip(), <span class="hljs-comment">#随机水平翻转  </span>   transforms.RandomVerticalFlip(), <span class="hljs-comment">#随机垂直翻转  </span>   transforms.RandomRotation(<span class="hljs-number">45</span>),  <span class="hljs-comment">#随机在45度角度内旋转  </span>   transforms.ToTensor() <span class="hljs-comment">#转换成张量并进行标准化</span>  ]  )   transform_valid = transforms.Compose([      transforms.ToTensor()    ]  )  <span class="hljs-comment"># 根据图片目录创建数据集  </span><span class="hljs-keyword">def</span> <span class="hljs-title function_">transform_label</span>(<span class="hljs-params">x</span>):      <span class="hljs-keyword">return</span> torch.tensor([x]).<span class="hljs-built_in">float</span>()    ds_train = datasets.ImageFolder(<span class="hljs-string">&quot;xx/xxx/cifar2/train/&quot;</span>,              transform = transform_train, target_transform= transform_label)  ds_val = datasets.ImageFolder(<span class="hljs-string">&quot;xx/xxx/cifar2/test/&quot;</span>,              transform = transform_valid, target_transform= transform_label)  <span class="hljs-built_in">print</span>(ds_train.class_to_idx)  <span class="hljs-comment"># 使用DataLoader加载数据集  </span>dl_train = DataLoader(ds_train, batch_size = <span class="hljs-number">50</span>, shuffle = <span class="hljs-literal">True</span>)  dl_val = DataLoader(ds_val, batch_size = <span class="hljs-number">50</span>, shuffle = <span class="hljs-literal">True</span>)    <span class="hljs-keyword">for</span> features,labels <span class="hljs-keyword">in</span> dl_train:      <span class="hljs-built_in">print</span>(features.shape)      <span class="hljs-built_in">print</span>(labels.shape)      <span class="hljs-keyword">break</span>  </code></pre><h3 id="创建自定义数据集"><a class="markdownIt-Anchor" href="#创建自定义数据集"></a> <strong>创建自定义数据集</strong></h3><p>下面通过继承<code>torch.utils.data.Dataset</code>创建自定义数据集的方式来对 cifar2 构建数据管道。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">from</span> pathlib <span class="hljs-keyword">import</span> Path   <span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image     <span class="hljs-keyword">class</span> <span class="hljs-title class_">Cifar2Dataset</span>(<span class="hljs-title class_ inherited__">Dataset</span>):      <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self,imgs_dir, img_transform</span>):          self.files = <span class="hljs-built_in">list</span>(Path(imgs_dir).rglob(<span class="hljs-string">&quot;*.jpg&quot;</span>))          self.transform = img_transform                <span class="hljs-keyword">def</span> <span class="hljs-title function_">__len__</span>(<span class="hljs-params">self,</span>):          <span class="hljs-keyword">return</span> <span class="hljs-built_in">len</span>(self.files)            <span class="hljs-keyword">def</span> <span class="hljs-title function_">__getitem__</span>(<span class="hljs-params">self,i</span>):          file_i = <span class="hljs-built_in">str</span>(self.files[i])          img = Image.<span class="hljs-built_in">open</span>(file_i)          tensor = self.transform(img)          label = torch.tensor([<span class="hljs-number">1.0</span>]) <span class="hljs-keyword">if</span>  <span class="hljs-string">&quot;1_automobile&quot;</span> <span class="hljs-keyword">in</span> file_i <span class="hljs-keyword">else</span> torch.tensor([<span class="hljs-number">0.0</span>])          <span class="hljs-keyword">return</span> tensor,label          </code></pre><pre class="highlight"><code class="python">train_dir = <span class="hljs-string">&quot;xx/xxx/cifar2/train/&quot;</span>  test_dir = <span class="hljs-string">&quot;xx/xxx/cifar2/test/&quot;</span> <span class="hljs-comment"># 图片增强使用上一小节定义的</span>ds_train = Cifar2Dataset(train_dir, transform_train)  ds_val = Cifar2Dataset(test_dir, transform_val)    dl_train = DataLoader(ds_train,batch_size = <span class="hljs-number">50</span>,shuffle = <span class="hljs-literal">True</span>)  dl_val = DataLoader(ds_val,batch_size = <span class="hljs-number">50</span>,shuffle = <span class="hljs-literal">True</span>)  <span class="hljs-keyword">for</span> features,labels <span class="hljs-keyword">in</span> dl_train:      <span class="hljs-built_in">print</span>(features.shape)      <span class="hljs-built_in">print</span>(labels.shape)      <span class="hljs-keyword">break</span>  </code></pre><h2 id="使用dataloader加载数据集"><a class="markdownIt-Anchor" href="#使用dataloader加载数据集"></a> 使用DataLoader加载数据集</h2><p>DataLoader能够控制batch的大小，batch中元素的采样方法，以及将batch结果整理成模型所需输入形式的方法，并且能够使用多进程读取数据。<br>DataLoader的函数签名如下。</p><pre class="highlight"><code class="python">DataLoader(      dataset,      batch_size=<span class="hljs-number">1</span>,      shuffle=<span class="hljs-literal">False</span>,      sampler=<span class="hljs-literal">None</span>,      batch_sampler=<span class="hljs-literal">None</span>,      num_workers=<span class="hljs-number">0</span>,      collate_fn=<span class="hljs-literal">None</span>,      pin_memory=<span class="hljs-literal">False</span>,      drop_last=<span class="hljs-literal">False</span>,      timeout=<span class="hljs-number">0</span>,      worker_init_fn=<span class="hljs-literal">None</span>,      multiprocessing_context=<span class="hljs-literal">None</span>,  )  </code></pre><ul><li>dataset : 数据集</li><li>batch_size: 批次大小</li><li>shuffle: 是否乱序</li><li>sampler: 样本采样函数，一般无需设置。</li><li>batch_sampler: 批次采样函数，一般无需设置。</li><li>num_workers: 使用多进程读取数据，设置的进程数。</li><li>collate_fn: 整理一个批次数据的函数。</li><li>pin_memory: 是否设置为锁业内存。默认为False，锁业内存不会使用虚拟内存(硬盘)，从锁业内存拷贝到GPU上速度会更快。</li><li>drop_last: 是否丢弃最后一个样本数量不足batch_size批次数据。</li><li>timeout: 加载一个数据批次的最长等待时间，一般无需设置。</li><li>worker_init_fn: 每个worker中dataset的初始化函数，常用于IterableDataset。一般不使用。</li></ul><p>一般情况下，我们仅仅会配置<code>dataset</code>，<code>batch_size</code>，<code>shuffle</code>，<code>num_workers</code>，<code>pin_memory</code>，<code>drop_last</code>这六个参数，有时候对于一些复杂结构的数据集，还需要自定义collate_fn函数，其他参数一般使用默认值即可。<br>DataLoader除了可以加载我们前面讲的<code>torch.utils.data.Dataset</code>外，还能够加载另外一种数据集 <code>torch.utils.data.IterableDataset</code>。和Dataset数据集相当于一种列表结构不同，IterableDataset相当于一种迭代器结构。它更加复杂，一般较少使用。</p>]]></content>
      
      
      <categories>
          
          <category> Pytorch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础知识 </tag>
            
            <tag> pytorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pytorch|模型和参数</title>
      <link href="/2023/04/06/pytorch-ji-chu-zhi-shi/03function-he-module/"/>
      <url>/2023/04/06/pytorch-ji-chu-zhi-shi/03function-he-module/</url>
      
        <content type="html"><![CDATA[<h1 id="pytorch中的module和function"><a class="markdownIt-Anchor" href="#pytorch中的module和function"></a> Pytorch中的Module和function</h1><p>这里的function和Module是指<code>nn.functional</code>和<code>nn.Module</code>。<br>Pytorch和神经网络相关的功能组件大多都封装在<code>torch.nn</code>模块下。这些功能组件的绝大部分既有<strong>函数形式</strong>实现，也有<strong>类形式</strong>实现。<br>其中<code>nn.functional</code>(一般引入后改名为F)有各种功能组件的<strong>函数实现</strong>。为了便于对参数进行管理，一般通过继承<code>nn.Module</code>转换成为<strong>类的实现形式</strong>，并直接封装在 nn 模块下。例如：</p><table><thead><tr><th></th><th><code>nn.functional</code></th><th><code>nn.Module</code></th></tr></thead><tbody><tr><td>激活函数</td><td>F.relu</td><td>nn.ReLU</td></tr><tr><td></td><td>F.sigmoid</td><td>nn.Sigmoid</td></tr><tr><td>模型层</td><td>F.linear</td><td>nn.Linear</td></tr><tr><td></td><td>F.conv2d</td><td>nn.Conv2d</td></tr><tr><td>损失函数</td><td>F.binary_cross_entropy</td><td>nn.BCELoss</td></tr><tr><td></td><td>F.mse_loss</td><td>nn.MSELoss</td></tr><tr><td></td><td>F.cross_entropy</td><td>nn.CrossEntropyLoss</td></tr></tbody></table><p>实际上<code>nn.Module</code>除了可以管理其引用的各种参数，还可以管理其引用的子模块，功能十分强大。</p><h2 id="使用nnmodule来管理参数"><a class="markdownIt-Anchor" href="#使用nnmodule来管理参数"></a> 使用nn.Module来管理参数</h2><p>在Pytorch中，模型的参数是需要被优化器训练的，因此，通常要设置其参数为<code>requires_grad = True</code>的张量。同时，在一个模型中，往往有许多的参数，要手动管理这些参数并不是一件容易的事情。<br>Pytorch一般将参数用<code>nn.Parameter</code>来表示，并且用<code>nn.Module</code>来管理其结构下的所有参数。<br>�<code>nn.Parameter</code>具有<code>requires_grad = True</code>属性。</p><pre class="highlight"><code class="python">w = nn.Parameter(torch.randn(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>))<span class="hljs-built_in">print</span>(w)<span class="hljs-built_in">print</span>(w.requires_grad)&gt;&gt;&gt;Output:Parameter containing:tensor([[ <span class="hljs-number">0.3544</span>, -<span class="hljs-number">1.1643</span>],        [ <span class="hljs-number">1.2302</span>,  <span class="hljs-number">1.3952</span>]], requires_grad=<span class="hljs-literal">True</span>)<span class="hljs-literal">True</span></code></pre><p><code>nn.ParameterList</code>可以将多个nn.Parameter组成一个列表。</p><pre class="highlight"><code class="python">params_list = nn.ParameterList([    nn.Parameter(torch.rand(<span class="hljs-number">8</span>,i)) <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">3</span>)])<span class="hljs-built_in">print</span>(params_list)<span class="hljs-built_in">print</span>(params_list[<span class="hljs-number">0</span>].requires_grad)&gt;&gt;&gt;Output:ParameterList(    (<span class="hljs-number">0</span>): Parameter containing: [torch.FloatTensor of size 8x1]    (<span class="hljs-number">1</span>): Parameter containing: [torch.FloatTensor of size 8x2])<span class="hljs-literal">True</span></code></pre><p><code>nn.ParameterDict</code>可以将多个nn.Parameter组成一个字典。</p><pre class="highlight"><code class="python">params_dict = nn.ParameterDict({<span class="hljs-string">&quot;a&quot;</span>:nn.Parameter(torch.rand(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>)),                               <span class="hljs-string">&quot;b&quot;</span>:nn.Parameter(torch.zeros(<span class="hljs-number">2</span>))})<span class="hljs-built_in">print</span>(params_dict)<span class="hljs-built_in">print</span>(params_dict[<span class="hljs-string">&quot;a&quot;</span>].requires_grad)&gt;&gt;&gt;Output:ParameterDict(    (a): Parameter containing: [torch.FloatTensor of size 2x2]    (b): Parameter containing: [torch.FloatTensor of size <span class="hljs-number">2</span>])<span class="hljs-literal">True</span></code></pre><p>可以用Module将它们管理起来。<br><code>module.parameters()</code>返回一个生成器，包括其结构下的所有Parameter 。</p><pre class="highlight"><code class="python">module = nn.Module()module.w = wmodule.params_list = params_listmodule.params_dict = params_dictnum_param = <span class="hljs-number">0</span><span class="hljs-keyword">for</span> param <span class="hljs-keyword">in</span> module.parameters():    <span class="hljs-built_in">print</span>(param,<span class="hljs-string">&quot;\n&quot;</span>)    num_param = num_param + <span class="hljs-number">1</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;number of Parameters =&quot;</span>,num_param)&gt;&gt;&gt;Output:Parameter containing:tensor([[ <span class="hljs-number">0.3544</span>, -<span class="hljs-number">1.1643</span>],        [ <span class="hljs-number">1.2302</span>,  <span class="hljs-number">1.3952</span>]], requires_grad=<span class="hljs-literal">True</span>) Parameter containing:tensor([[<span class="hljs-number">0.9391</span>],        [<span class="hljs-number">0.7590</span>],        [<span class="hljs-number">0.6899</span>],        [<span class="hljs-number">0.4786</span>],        [<span class="hljs-number">0.2392</span>],        [<span class="hljs-number">0.9645</span>],        [<span class="hljs-number">0.1968</span>],        [<span class="hljs-number">0.1353</span>]], requires_grad=<span class="hljs-literal">True</span>) Parameter containing:tensor([[<span class="hljs-number">0.8012</span>, <span class="hljs-number">0.9587</span>],        [<span class="hljs-number">0.0276</span>, <span class="hljs-number">0.5995</span>],        [<span class="hljs-number">0.7338</span>, <span class="hljs-number">0.5559</span>],        [<span class="hljs-number">0.1704</span>, <span class="hljs-number">0.5814</span>],        [<span class="hljs-number">0.7626</span>, <span class="hljs-number">0.1179</span>],        [<span class="hljs-number">0.4945</span>, <span class="hljs-number">0.2408</span>],        [<span class="hljs-number">0.7179</span>, <span class="hljs-number">0.0575</span>],        [<span class="hljs-number">0.3418</span>, <span class="hljs-number">0.7291</span>]], requires_grad=<span class="hljs-literal">True</span>) Parameter containing:tensor([[<span class="hljs-number">0.7729</span>, <span class="hljs-number">0.2383</span>],        [<span class="hljs-number">0.7054</span>, <span class="hljs-number">0.9937</span>]], requires_grad=<span class="hljs-literal">True</span>) Parameter containing:tensor([<span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>], requires_grad=<span class="hljs-literal">True</span>) number of Parameters = <span class="hljs-number">5</span></code></pre><p>下面以nn.Linear观察其参数。</p><pre class="highlight"><code class="python">linear = nn.Linear(<span class="hljs-number">20</span>,<span class="hljs-number">2</span>)<span class="hljs-keyword">for</span> param <span class="hljs-keyword">in</span> linear.parameters():    <span class="hljs-built_in">print</span>(param)    <span class="hljs-built_in">print</span>(param.size(), param.shape)    <span class="hljs-built_in">print</span>(param.requires_grad)    <span class="hljs-built_in">print</span>(param.numel())&gt;&gt;&gt;Output:Parameter containing:tensor([[-<span class="hljs-number">0.2206</span>, -<span class="hljs-number">0.0732</span>,  <span class="hljs-number">0.2090</span>,  <span class="hljs-number">0.0789</span>,  <span class="hljs-number">0.0329</span>, -<span class="hljs-number">0.1918</span>,  <span class="hljs-number">0.1738</span>,  <span class="hljs-number">0.1015</span>,          <span class="hljs-number">0.1667</span>,  <span class="hljs-number">0.0078</span>, -<span class="hljs-number">0.1058</span>, -<span class="hljs-number">0.1306</span>,  <span class="hljs-number">0.0223</span>, -<span class="hljs-number">0.0715</span>, -<span class="hljs-number">0.0484</span>, -<span class="hljs-number">0.0651</span>,          <span class="hljs-number">0.1581</span>, -<span class="hljs-number">0.0084</span>,  <span class="hljs-number">0.0357</span>,  <span class="hljs-number">0.1935</span>],        [-<span class="hljs-number">0.0515</span>,  <span class="hljs-number">0.2016</span>,  <span class="hljs-number">0.2110</span>, -<span class="hljs-number">0.1053</span>, -<span class="hljs-number">0.0663</span>,  <span class="hljs-number">0.1520</span>, -<span class="hljs-number">0.0612</span>, -<span class="hljs-number">0.1197</span>,          <span class="hljs-number">0.0597</span>, -<span class="hljs-number">0.0840</span>,  <span class="hljs-number">0.1601</span>,  <span class="hljs-number">0.0842</span>,  <span class="hljs-number">0.0731</span>, -<span class="hljs-number">0.1282</span>,  <span class="hljs-number">0.0515</span>,  <span class="hljs-number">0.0054</span>,          <span class="hljs-number">0.0433</span>, -<span class="hljs-number">0.1549</span>,  <span class="hljs-number">0.1223</span>,  <span class="hljs-number">0.0270</span>]], requires_grad=<span class="hljs-literal">True</span>)torch.Size([<span class="hljs-number">2</span>, <span class="hljs-number">20</span>]) torch.Size([<span class="hljs-number">2</span>, <span class="hljs-number">20</span>])<span class="hljs-literal">True</span><span class="hljs-number">40</span>Parameter containing:tensor([<span class="hljs-number">0.2008</span>, <span class="hljs-number">0.2086</span>], requires_grad=<span class="hljs-literal">True</span>)torch.Size([<span class="hljs-number">2</span>]) torch.Size([<span class="hljs-number">2</span>])<span class="hljs-literal">True</span><span class="hljs-number">2</span></code></pre><p>实践当中，一般通过继承<code>nn.Module</code>来构建模块类，并将所有含有需要学习的参数的部分放在构造函数中。<br>以下范例为Pytorch中<code>nn.Linear</code>的源码的简化版本。可以看到它将需要学习的参数放在了<code>__init__</code>构造函数中，并在forward中调用F.linear函数来实现计算逻辑。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Linear</span>(nn.Module):    __constants__ = [<span class="hljs-string">&#x27;in_features&#x27;</span>, <span class="hljs-string">&#x27;out_features&#x27;</span>]    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, in_features, out_features, bias=<span class="hljs-literal">True</span></span>):        <span class="hljs-built_in">super</span>(Linear, self).__init__()        self.in_features = in_features        self.out_features = out_features        self.weight = nn.Parameter(torch.Tensor(out_features, in_features))        <span class="hljs-keyword">if</span> bias:            self.bias = nn.Parameter(torch.Tensor(out_features))        <span class="hljs-keyword">else</span>:            self.register_parameter(<span class="hljs-string">&#x27;bias&#x27;</span>, <span class="hljs-literal">None</span>)    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self, <span class="hljs-built_in">input</span></span>):        <span class="hljs-keyword">return</span> F.linear(<span class="hljs-built_in">input</span>, self.weight, self.bias)</code></pre><h2 id="使用nnmodule来管理子模块"><a class="markdownIt-Anchor" href="#使用nnmodule来管理子模块"></a> 使用nn.Module来管理子模块</h2><p>一般情况下，我们都很少直接使用<code>nn.Parameter</code>来定义参数构建模型，而是通过拼装一些常用的模型层来构造模型。<br>这些模型层也是继承自nn.Module的对象，本身也包括参数，属于我们要定义的模块的子模块。<br>nn.Module提供了一些方法可以管理这些子模块。</p><ul><li><code>children()</code>方法：返回一个生成器，包括模块下的所有子模块。</li><li><code>named_children()</code>方法：返回一个生成器，包括模块下的所有子模块，以及它们的名字。</li><li><code>modules()</code>方法：返回一个生成器，递归地找到模块下的所有各个层级的模块，包括模块本身。</li><li><code>named_modules()</code>方法：返回一个生成器，递归地找到模块下的所有各个层级的模块以及它们的名字，包括模块本身。</li></ul><p>其中<code>chidren()</code>方法和<code>named_children()</code>方法较多使用。<code>modules()</code>方法和<code>named_modules()</code>方法较少使用，其功能可以通过多个<code>named_children()</code>的嵌套使用实现。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Net</span>(nn.Module):    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):        <span class="hljs-built_in">super</span>(Net, self).__init__()        self.embedding = nn.Embedding(num_embeddings = <span class="hljs-number">10000</span>,embedding_dim = <span class="hljs-number">3</span>,padding_idx = <span class="hljs-number">1</span>)                self.conv = nn.Sequential()        self.conv.add_module(<span class="hljs-string">&quot;conv_1&quot;</span>,nn.Conv1d(in_channels = <span class="hljs-number">3</span>,out_channels = <span class="hljs-number">16</span>,kernel_size = <span class="hljs-number">5</span>))        self.conv.add_module(<span class="hljs-string">&quot;pool_1&quot;</span>,nn.MaxPool1d(kernel_size = <span class="hljs-number">2</span>))        self.conv.add_module(<span class="hljs-string">&quot;relu_1&quot;</span>,nn.ReLU())        self.conv.add_module(<span class="hljs-string">&quot;conv_2&quot;</span>,nn.Conv1d(in_channels = <span class="hljs-number">16</span>,out_channels = <span class="hljs-number">128</span>,kernel_size = <span class="hljs-number">2</span>))        self.conv.add_module(<span class="hljs-string">&quot;pool_2&quot;</span>,nn.MaxPool1d(kernel_size = <span class="hljs-number">2</span>))        self.conv.add_module(<span class="hljs-string">&quot;relu_2&quot;</span>,nn.ReLU())        self.dense = nn.Sequential()        self.dense.add_module(<span class="hljs-string">&quot;flatten&quot;</span>,nn.Flatten())        self.dense.add_module(<span class="hljs-string">&quot;linear&quot;</span>,nn.Linear(<span class="hljs-number">6144</span>,<span class="hljs-number">1</span>))        self.dense.add_module(<span class="hljs-string">&quot;sigmoid&quot;</span>,nn.Sigmoid())    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self,x</span>):        x = self.embedding(x).transpose(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>)        x = self.conv(x)        y = self.dense(x)        <span class="hljs-keyword">return</span> ynet = Net()</code></pre><pre class="highlight"><code class="python">i = <span class="hljs-number">0</span><span class="hljs-keyword">for</span> child <span class="hljs-keyword">in</span> net.children():    i+=<span class="hljs-number">1</span>    <span class="hljs-built_in">print</span>(child,<span class="hljs-string">&quot;\n&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;child number&quot;</span>,i)&gt;&gt;&gt;Output:Embedding(<span class="hljs-number">10000</span>, <span class="hljs-number">3</span>, padding_idx=<span class="hljs-number">1</span>) Sequential(  (conv_1): Conv1d(<span class="hljs-number">3</span>, <span class="hljs-number">16</span>, kernel_size=(<span class="hljs-number">5</span>,), stride=(<span class="hljs-number">1</span>,))  (pool_1): MaxPool1d(kernel_size=<span class="hljs-number">2</span>, stride=<span class="hljs-number">2</span>, padding=<span class="hljs-number">0</span>, dilation=<span class="hljs-number">1</span>, ceil_mode=<span class="hljs-literal">False</span>)  (relu_1): ReLU()  (conv_2): Conv1d(<span class="hljs-number">16</span>, <span class="hljs-number">128</span>, kernel_size=(<span class="hljs-number">2</span>,), stride=(<span class="hljs-number">1</span>,))  (pool_2): MaxPool1d(kernel_size=<span class="hljs-number">2</span>, stride=<span class="hljs-number">2</span>, padding=<span class="hljs-number">0</span>, dilation=<span class="hljs-number">1</span>, ceil_mode=<span class="hljs-literal">False</span>)  (relu_2): ReLU()) Sequential(  (flatten): Flatten()  (linear): Linear(in_features=<span class="hljs-number">6144</span>, out_features=<span class="hljs-number">1</span>, bias=<span class="hljs-literal">True</span>)  (sigmoid): Sigmoid()) child number <span class="hljs-number">3</span></code></pre><pre class="highlight"><code class="python">i = <span class="hljs-number">0</span><span class="hljs-keyword">for</span> name,child <span class="hljs-keyword">in</span> net.named_children():    i+=<span class="hljs-number">1</span>    <span class="hljs-built_in">print</span>(name,<span class="hljs-string">&quot;:&quot;</span>,child,<span class="hljs-string">&quot;\n&quot;</span>)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;child number&quot;</span>,i)&gt;&gt;&gt;Output:embedding : Embedding(<span class="hljs-number">10000</span>, <span class="hljs-number">3</span>, padding_idx=<span class="hljs-number">1</span>) conv : Sequential(  (conv_1): Conv1d(<span class="hljs-number">3</span>, <span class="hljs-number">16</span>, kernel_size=(<span class="hljs-number">5</span>,), stride=(<span class="hljs-number">1</span>,))  (pool_1): MaxPool1d(kernel_size=<span class="hljs-number">2</span>, stride=<span class="hljs-number">2</span>, padding=<span class="hljs-number">0</span>, dilation=<span class="hljs-number">1</span>, ceil_mode=<span class="hljs-literal">False</span>)  (relu_1): ReLU()  (conv_2): Conv1d(<span class="hljs-number">16</span>, <span class="hljs-number">128</span>, kernel_size=(<span class="hljs-number">2</span>,), stride=(<span class="hljs-number">1</span>,))  (pool_2): MaxPool1d(kernel_size=<span class="hljs-number">2</span>, stride=<span class="hljs-number">2</span>, padding=<span class="hljs-number">0</span>, dilation=<span class="hljs-number">1</span>, ceil_mode=<span class="hljs-literal">False</span>)  (relu_2): ReLU()) dense : Sequential(  (flatten): Flatten(start_dim=<span class="hljs-number">1</span>, end_dim=-<span class="hljs-number">1</span>)  (linear): Linear(in_features=<span class="hljs-number">6144</span>, out_features=<span class="hljs-number">1</span>, bias=<span class="hljs-literal">True</span>)  (sigmoid): Sigmoid()) child number <span class="hljs-number">3</span></code></pre><pre class="highlight"><code class="python">i = <span class="hljs-number">0</span><span class="hljs-keyword">for</span> module <span class="hljs-keyword">in</span> net.modules():    i+=<span class="hljs-number">1</span>    <span class="hljs-built_in">print</span>(module)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;module number:&quot;</span>,i)&gt;&gt;&gt;Output:Net(  (embedding): Embedding(<span class="hljs-number">10000</span>, <span class="hljs-number">3</span>, padding_idx=<span class="hljs-number">1</span>)  (conv): Sequential(    (conv_1): Conv1d(<span class="hljs-number">3</span>, <span class="hljs-number">16</span>, kernel_size=(<span class="hljs-number">5</span>,), stride=(<span class="hljs-number">1</span>,))    (pool_1): MaxPool1d(kernel_size=<span class="hljs-number">2</span>, stride=<span class="hljs-number">2</span>, padding=<span class="hljs-number">0</span>, dilation=<span class="hljs-number">1</span>, ceil_mode=<span class="hljs-literal">False</span>)    (relu_1): ReLU()    (conv_2): Conv1d(<span class="hljs-number">16</span>, <span class="hljs-number">128</span>, kernel_size=(<span class="hljs-number">2</span>,), stride=(<span class="hljs-number">1</span>,))    (pool_2): MaxPool1d(kernel_size=<span class="hljs-number">2</span>, stride=<span class="hljs-number">2</span>, padding=<span class="hljs-number">0</span>, dilation=<span class="hljs-number">1</span>, ceil_mode=<span class="hljs-literal">False</span>)    (relu_2): ReLU()  )  (dense): Sequential(    (flatten): Flatten(start_dim=<span class="hljs-number">1</span>, end_dim=-<span class="hljs-number">1</span>)    (linear): Linear(in_features=<span class="hljs-number">6144</span>, out_features=<span class="hljs-number">1</span>, bias=<span class="hljs-literal">True</span>)    (sigmoid): Sigmoid()  ))Embedding(<span class="hljs-number">10000</span>, <span class="hljs-number">3</span>, padding_idx=<span class="hljs-number">1</span>)Sequential(  (conv_1): Conv1d(<span class="hljs-number">3</span>, <span class="hljs-number">16</span>, kernel_size=(<span class="hljs-number">5</span>,), stride=(<span class="hljs-number">1</span>,))  (pool_1): MaxPool1d(kernel_size=<span class="hljs-number">2</span>, stride=<span class="hljs-number">2</span>, padding=<span class="hljs-number">0</span>, dilation=<span class="hljs-number">1</span>, ceil_mode=<span class="hljs-literal">False</span>)  (relu_1): ReLU()  (conv_2): Conv1d(<span class="hljs-number">16</span>, <span class="hljs-number">128</span>, kernel_size=(<span class="hljs-number">2</span>,), stride=(<span class="hljs-number">1</span>,))  (pool_2): MaxPool1d(kernel_size=<span class="hljs-number">2</span>, stride=<span class="hljs-number">2</span>, padding=<span class="hljs-number">0</span>, dilation=<span class="hljs-number">1</span>, ceil_mode=<span class="hljs-literal">False</span>)  (relu_2): ReLU())Conv1d(<span class="hljs-number">3</span>, <span class="hljs-number">16</span>, kernel_size=(<span class="hljs-number">5</span>,), stride=(<span class="hljs-number">1</span>,))MaxPool1d(kernel_size=<span class="hljs-number">2</span>, stride=<span class="hljs-number">2</span>, padding=<span class="hljs-number">0</span>, dilation=<span class="hljs-number">1</span>, ceil_mode=<span class="hljs-literal">False</span>)ReLU()Conv1d(<span class="hljs-number">16</span>, <span class="hljs-number">128</span>, kernel_size=(<span class="hljs-number">2</span>,), stride=(<span class="hljs-number">1</span>,))MaxPool1d(kernel_size=<span class="hljs-number">2</span>, stride=<span class="hljs-number">2</span>, padding=<span class="hljs-number">0</span>, dilation=<span class="hljs-number">1</span>, ceil_mode=<span class="hljs-literal">False</span>)ReLU()Sequential(  (flatten): Flatten(start_dim=<span class="hljs-number">1</span>, end_dim=-<span class="hljs-number">1</span>)  (linear): Linear(in_features=<span class="hljs-number">6144</span>, out_features=<span class="hljs-number">1</span>, bias=<span class="hljs-literal">True</span>)  (sigmoid): Sigmoid())Flatten(start_dim=<span class="hljs-number">1</span>, end_dim=-<span class="hljs-number">1</span>)Linear(in_features=<span class="hljs-number">6144</span>, out_features=<span class="hljs-number">1</span>, bias=<span class="hljs-literal">True</span>)Sigmoid()module number: <span class="hljs-number">13</span></code></pre><p>下面我们通过<code>named_children()</code>方法找到embedding层，并将其参数设置为不可训练(相当于冻结embedding层)。�</p><pre class="highlight"><code class="python">children_dict = {name:module <span class="hljs-keyword">for</span> name,module <span class="hljs-keyword">in</span> net.named_children()}<span class="hljs-built_in">print</span>(children_dict)embedding = children_dict[<span class="hljs-string">&quot;embedding&quot;</span>]embedding.requires_grad_(<span class="hljs-literal">False</span>) <span class="hljs-comment">#冻结其参数</span>&gt;&gt;&gt;Output:{<span class="hljs-string">&#x27;embedding&#x27;</span>: Embedding(<span class="hljs-number">10000</span>, <span class="hljs-number">3</span>, padding_idx=<span class="hljs-number">1</span>),  <span class="hljs-string">&#x27;conv&#x27;</span>: Sequential(  (conv_1): Conv1d(<span class="hljs-number">3</span>, <span class="hljs-number">16</span>, kernel_size=(<span class="hljs-number">5</span>,), stride=(<span class="hljs-number">1</span>,))  (pool_1): MaxPool1d(kernel_size=<span class="hljs-number">2</span>, stride=<span class="hljs-number">2</span>, padding=<span class="hljs-number">0</span>, dilation=<span class="hljs-number">1</span>, ceil_mode=<span class="hljs-literal">False</span>)  (relu_1): ReLU()  (conv_2): Conv1d(<span class="hljs-number">16</span>, <span class="hljs-number">128</span>, kernel_size=(<span class="hljs-number">2</span>,), stride=(<span class="hljs-number">1</span>,))  (pool_2): MaxPool1d(kernel_size=<span class="hljs-number">2</span>, stride=<span class="hljs-number">2</span>, padding=<span class="hljs-number">0</span>, dilation=<span class="hljs-number">1</span>, ceil_mode=<span class="hljs-literal">False</span>)  (relu_2): ReLU()),   <span class="hljs-string">&#x27;dense&#x27;</span>: Sequential(  (flatten): Flatten()  (linear): Linear(in_features=<span class="hljs-number">6144</span>, out_features=<span class="hljs-number">1</span>, bias=<span class="hljs-literal">True</span>)  (sigmoid): Sigmoid())}</code></pre><pre class="highlight"><code class="python"><span class="hljs-keyword">for</span> param <span class="hljs-keyword">in</span> embedding.parameters():    <span class="hljs-built_in">print</span>(param.requires_grad)    <span class="hljs-built_in">print</span>(param.numel())&gt;&gt;&gt;Output:<span class="hljs-literal">False</span><span class="hljs-number">30000</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Pytorch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础知识 </tag>
            
            <tag> pytorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pytorch|构建模型的3种方式</title>
      <link href="/2023/04/05/pytorch-ji-chu-zhi-shi/02-gou-jian-mo-xing-de-3-chong-fang-shi/"/>
      <url>/2023/04/05/pytorch-ji-chu-zhi-shi/02-gou-jian-mo-xing-de-3-chong-fang-shi/</url>
      
        <content type="html"><![CDATA[<h1 id="pytorch构建模型的方式"><a class="markdownIt-Anchor" href="#pytorch构建模型的方式"></a> Pytorch构建模型的方式</h1><p>可以使用以下3种方式构建模型：</p><ol><li>继承nn.Module基类构建自定义模型。</li><li>使用nn.Sequential按层顺序构建模型。</li><li>继承nn.Module基类构建模型，并辅助应用模型容器(nn.Sequential, nn.ModuleList, nn.ModuleDict)进行封装。</li></ol><p>模型的每一层最好有对应的名字，比如XXX_layer，这样可以通过<code>model.XXX_layer</code>访问到这一层，可以查看该层的具体信息，比如该层的权重<code>model.XXX_layer.weight</code>，卷积层的卷积核大小<code>model.XXX_layer.kernel_size</code>，这些信息的查看和定义层的类时传入的参数名一致。</p><h2 id="继承nnmodule类构建模型"><a class="markdownIt-Anchor" href="#继承nnmodule类构建模型"></a> 继承nn.Module类构建模型</h2><p>模型中的用到的层一般在<code>__init__()</code>函数中定义，然后在<code>forward()</code>方法中定义模型的正向传播逻辑。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Net</span>(nn.Module):    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):        <span class="hljs-built_in">super</span>(Net, self).__init__()        self.pool1 = nn.MaxPool2d(kernel_size = <span class="hljs-number">2</span>,stride = <span class="hljs-number">2</span>)        self.conv1 = nn.Conv2d(in_channels=<span class="hljs-number">3</span>,out_channels=<span class="hljs-number">32</span>,kernel_size = <span class="hljs-number">3</span>)        self.conv2 = nn.Conv2d(in_channels=<span class="hljs-number">32</span>,out_channels=<span class="hljs-number">64</span>,kernel_size = <span class="hljs-number">5</span>)        self.dropout = nn.Dropout2d(p = <span class="hljs-number">0.1</span>)        self.adaptive_pool = nn.AdaptiveMaxPool2d((<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))        self.flatten = nn.Flatten()        self.linear1 = nn.Linear(<span class="hljs-number">64</span>,<span class="hljs-number">32</span>)        self.relu = nn.ReLU()        self.linear2 = nn.Linear(<span class="hljs-number">32</span>,<span class="hljs-number">1</span>)        self.sigmoid = nn.Sigmoid()    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self,x</span>):        x = self.conv1(x)        x = self.pool1(x)        x = self.conv2(x)        x = self.pool1(x)        x = self.dropout(x)        x = self.adaptive_pool(x)        x = self.flatten(x)        x = self.linear1(x)        x = self.relu(x)        x = self.linear2(x)        y = self.sigmoid(x)        <span class="hljs-keyword">return</span> ynet = Net()<span class="hljs-built_in">print</span>(net)&gt;&gt;&gt;Output:Net(  (pool1): MaxPool2d(kernel_size=<span class="hljs-number">2</span>, stride=<span class="hljs-number">2</span>, padding=<span class="hljs-number">0</span>, dilation=<span class="hljs-number">1</span>, ceil_mode=<span class="hljs-literal">False</span>)  (conv1): Conv2d(<span class="hljs-number">3</span>, <span class="hljs-number">32</span>, kernel_size=(<span class="hljs-number">3</span>, <span class="hljs-number">3</span>), stride=(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>))  (conv2): Conv2d(<span class="hljs-number">32</span>, <span class="hljs-number">64</span>, kernel_size=(<span class="hljs-number">5</span>, <span class="hljs-number">5</span>), stride=(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>))  (dropout): Dropout2d(p=<span class="hljs-number">0.1</span>, inplace=<span class="hljs-literal">False</span>)  (adaptive_pool): AdaptiveMaxPool2d(output_size=(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>))  (flatten): Flatten(start_dim=<span class="hljs-number">1</span>, end_dim=-<span class="hljs-number">1</span>)  (linear1): Linear(in_features=<span class="hljs-number">64</span>, out_features=<span class="hljs-number">32</span>, bias=<span class="hljs-literal">True</span>)  (relu): ReLU()  (linear2): Linear(in_features=<span class="hljs-number">32</span>, out_features=<span class="hljs-number">1</span>, bias=<span class="hljs-literal">True</span>)  (sigmoid): Sigmoid())</code></pre><h2 id="使用nnsequential按层顺序构建模型"><a class="markdownIt-Anchor" href="#使用nnsequential按层顺序构建模型"></a> 使用nn.Sequential按层顺序构建模型</h2><p>使用<code>nn.Sequential()</code>按层顺序构建模型<strong>无需定义forward方法</strong>。仅仅<strong>适合于简单的顺序模型</strong>。</p><h3 id="add_module方法"><a class="markdownIt-Anchor" href="#add_module方法"></a> add_module方法</h3><pre class="highlight"><code class="python">net = nn.Sequential()net.add_module(<span class="hljs-string">&quot;pool1&quot;</span>,nn.MaxPool2d(kernel_size = <span class="hljs-number">2</span>,stride = <span class="hljs-number">2</span>))net.add_module(<span class="hljs-string">&quot;conv1&quot;</span>,nn.Conv2d(in_channels=<span class="hljs-number">3</span>,out_channels=<span class="hljs-number">32</span>,kernel_size = <span class="hljs-number">3</span>))net.add_module(<span class="hljs-string">&quot;conv2&quot;</span>,nn.Conv2d(in_channels=<span class="hljs-number">32</span>,out_channels=<span class="hljs-number">64</span>,kernel_size = <span class="hljs-number">5</span>))net.add_module(<span class="hljs-string">&quot;dropout&quot;</span>,nn.Dropout2d(p = <span class="hljs-number">0.1</span>))net.add_module(<span class="hljs-string">&quot;adaptive_pool&quot;</span>,nn.AdaptiveMaxPool2d((<span class="hljs-number">1</span>,<span class="hljs-number">1</span>)))net.add_module(<span class="hljs-string">&quot;flatten&quot;</span>,nn.Flatten())net.add_module(<span class="hljs-string">&quot;linear1&quot;</span>,nn.Linear(<span class="hljs-number">64</span>,<span class="hljs-number">32</span>))net.add_module(<span class="hljs-string">&quot;relu&quot;</span>,nn.ReLU())net.add_module(<span class="hljs-string">&quot;linear2&quot;</span>,nn.Linear(<span class="hljs-number">32</span>,<span class="hljs-number">1</span>))net.add_module(<span class="hljs-string">&quot;sigmoid&quot;</span>,nn.Sigmoid())</code></pre><h3 id="利用变长参数"><a class="markdownIt-Anchor" href="#利用变长参数"></a> 利用变长参数</h3><p>这种方式构建时<strong>不能给每个层指定名称</strong>。</p><pre class="highlight"><code class="python">net = nn.Sequential(    nn.Conv2d(in_channels=<span class="hljs-number">3</span>,out_channels=<span class="hljs-number">32</span>,kernel_size = <span class="hljs-number">3</span>),    nn.MaxPool2d(kernel_size = <span class="hljs-number">2</span>,stride = <span class="hljs-number">2</span>),    nn.Conv2d(in_channels=<span class="hljs-number">32</span>,out_channels=<span class="hljs-number">64</span>,kernel_size = <span class="hljs-number">5</span>),    nn.MaxPool2d(kernel_size = <span class="hljs-number">2</span>,stride = <span class="hljs-number">2</span>),    nn.Dropout2d(p = <span class="hljs-number">0.1</span>),    nn.AdaptiveMaxPool2d((<span class="hljs-number">1</span>,<span class="hljs-number">1</span>)),    nn.Flatten(),    nn.Linear(<span class="hljs-number">64</span>,<span class="hljs-number">32</span>),    nn.ReLU(),    nn.Linear(<span class="hljs-number">32</span>,<span class="hljs-number">1</span>),    nn.Sigmoid())<span class="hljs-built_in">print</span>(net)&gt;&gt;&gt;Output:Sequential(  (<span class="hljs-number">0</span>): Conv2d(<span class="hljs-number">3</span>, <span class="hljs-number">32</span>, kernel_size=(<span class="hljs-number">3</span>, <span class="hljs-number">3</span>), stride=(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>))  (<span class="hljs-number">1</span>): MaxPool2d(kernel_size=<span class="hljs-number">2</span>, stride=<span class="hljs-number">2</span>, padding=<span class="hljs-number">0</span>, dilation=<span class="hljs-number">1</span>, ceil_mode=<span class="hljs-literal">False</span>)  (<span class="hljs-number">2</span>): Conv2d(<span class="hljs-number">32</span>, <span class="hljs-number">64</span>, kernel_size=(<span class="hljs-number">5</span>, <span class="hljs-number">5</span>), stride=(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>))  (<span class="hljs-number">3</span>): MaxPool2d(kernel_size=<span class="hljs-number">2</span>, stride=<span class="hljs-number">2</span>, padding=<span class="hljs-number">0</span>, dilation=<span class="hljs-number">1</span>, ceil_mode=<span class="hljs-literal">False</span>)  (<span class="hljs-number">4</span>): Dropout2d(p=<span class="hljs-number">0.1</span>, inplace=<span class="hljs-literal">False</span>)  (<span class="hljs-number">5</span>): AdaptiveMaxPool2d(output_size=(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>))  (<span class="hljs-number">6</span>): Flatten(start_dim=<span class="hljs-number">1</span>, end_dim=-<span class="hljs-number">1</span>)  (<span class="hljs-number">7</span>): Linear(in_features=<span class="hljs-number">64</span>, out_features=<span class="hljs-number">32</span>, bias=<span class="hljs-literal">True</span>)  (<span class="hljs-number">8</span>): ReLU()  (<span class="hljs-number">9</span>): Linear(in_features=<span class="hljs-number">32</span>, out_features=<span class="hljs-number">1</span>, bias=<span class="hljs-literal">True</span>)  (<span class="hljs-number">10</span>): Sigmoid())</code></pre><h3 id="利用ordereddict"><a class="markdownIt-Anchor" href="#利用ordereddict"></a> 利用OrderedDict</h3><pre class="highlight"><code class="python"><span class="hljs-keyword">from</span> collections <span class="hljs-keyword">import</span> OrderedDictnet = nn.Sequential(    OrderedDict(          [(<span class="hljs-string">&quot;conv1&quot;</span>,nn.Conv2d(in_channels=<span class="hljs-number">3</span>,out_channels=<span class="hljs-number">32</span>,kernel_size = <span class="hljs-number">3</span>)),            (<span class="hljs-string">&quot;pool1&quot;</span>,nn.MaxPool2d(kernel_size = <span class="hljs-number">2</span>,stride = <span class="hljs-number">2</span>)),            (<span class="hljs-string">&quot;conv2&quot;</span>,nn.Conv2d(in_channels=<span class="hljs-number">32</span>,out_channels=<span class="hljs-number">64</span>,kernel_size = <span class="hljs-number">5</span>)),            (<span class="hljs-string">&quot;pool2&quot;</span>,nn.MaxPool2d(kernel_size = <span class="hljs-number">2</span>,stride = <span class="hljs-number">2</span>)),            (<span class="hljs-string">&quot;dropout&quot;</span>,nn.Dropout2d(p = <span class="hljs-number">0.1</span>)),            (<span class="hljs-string">&quot;adaptive_pool&quot;</span>,nn.AdaptiveMaxPool2d((<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))),            (<span class="hljs-string">&quot;flatten&quot;</span>,nn.Flatten()),            (<span class="hljs-string">&quot;linear1&quot;</span>,nn.Linear(<span class="hljs-number">64</span>,<span class="hljs-number">32</span>)),            (<span class="hljs-string">&quot;relu&quot;</span>,nn.ReLU()),            (<span class="hljs-string">&quot;linear2&quot;</span>,nn.Linear(<span class="hljs-number">32</span>,<span class="hljs-number">1</span>)),            (<span class="hljs-string">&quot;sigmoid&quot;</span>,nn.Sigmoid())          ])    )</code></pre><h2 id="继承nnmodule基类构建模型并应用模型容器进行封装"><a class="markdownIt-Anchor" href="#继承nnmodule基类构建模型并应用模型容器进行封装"></a> 继承nn.Module基类构建模型并应用模型容器进行封装</h2><p>当模型的结构比较复杂时，我们可以应用模型容器(<code>nn.Sequential</code>，<code>nn.ModuleList</code>，<code>nn.ModuleDict</code>)对模型的部分结构进行封装。这样做会让模型整体更加有层次感，有时候也能减少代码量。<br>注意，在下面的范例中我们每次仅仅使用一种模型容器，但实际上这些模型容器的使用是非常灵活的，可以在一个模型中任意组合任意嵌套使用。</p><h3 id="nnsequential作为模型容器"><a class="markdownIt-Anchor" href="#nnsequential作为模型容器"></a> nn.Sequential作为模型容器</h3><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Net</span>(nn.Module):    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):        <span class="hljs-built_in">super</span>(Net, self).__init__()        self.conv = nn.Sequential(            nn.Conv2d(in_channels=<span class="hljs-number">3</span>,out_channels=<span class="hljs-number">32</span>,kernel_size = <span class="hljs-number">3</span>),            nn.MaxPool2d(kernel_size = <span class="hljs-number">2</span>,stride = <span class="hljs-number">2</span>),            nn.Conv2d(in_channels=<span class="hljs-number">32</span>,out_channels=<span class="hljs-number">64</span>,kernel_size = <span class="hljs-number">5</span>),            nn.MaxPool2d(kernel_size = <span class="hljs-number">2</span>,stride = <span class="hljs-number">2</span>),            nn.Dropout2d(p = <span class="hljs-number">0.1</span>),            nn.AdaptiveMaxPool2d((<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))        )        self.dense = nn.Sequential(            nn.Flatten(),            nn.Linear(<span class="hljs-number">64</span>,<span class="hljs-number">32</span>),            nn.ReLU(),            nn.Linear(<span class="hljs-number">32</span>,<span class="hljs-number">1</span>),            nn.Sigmoid()        )            <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self,x</span>):        x = self.conv(x)        y = self.dense(x)        <span class="hljs-keyword">return</span> y net = Net()<span class="hljs-built_in">print</span>(net)&gt;&gt;&gt;Output:Net(  (conv): Sequential(    (<span class="hljs-number">0</span>): Conv2d(<span class="hljs-number">3</span>, <span class="hljs-number">32</span>, kernel_size=(<span class="hljs-number">3</span>, <span class="hljs-number">3</span>), stride=(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>))    (<span class="hljs-number">1</span>): MaxPool2d(kernel_size=<span class="hljs-number">2</span>, stride=<span class="hljs-number">2</span>, padding=<span class="hljs-number">0</span>, dilation=<span class="hljs-number">1</span>, ceil_mode=<span class="hljs-literal">False</span>)    (<span class="hljs-number">2</span>): Conv2d(<span class="hljs-number">32</span>, <span class="hljs-number">64</span>, kernel_size=(<span class="hljs-number">5</span>, <span class="hljs-number">5</span>), stride=(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>))    (<span class="hljs-number">3</span>): MaxPool2d(kernel_size=<span class="hljs-number">2</span>, stride=<span class="hljs-number">2</span>, padding=<span class="hljs-number">0</span>, dilation=<span class="hljs-number">1</span>, ceil_mode=<span class="hljs-literal">False</span>)    (<span class="hljs-number">4</span>): Dropout2d(p=<span class="hljs-number">0.1</span>, inplace=<span class="hljs-literal">False</span>)    (<span class="hljs-number">5</span>): AdaptiveMaxPool2d(output_size=(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>))  )  (dense): Sequential(    (<span class="hljs-number">0</span>): Flatten()    (<span class="hljs-number">1</span>): Linear(in_features=<span class="hljs-number">64</span>, out_features=<span class="hljs-number">32</span>, bias=<span class="hljs-literal">True</span>)    (<span class="hljs-number">2</span>): ReLU()    (<span class="hljs-number">3</span>): Linear(in_features=<span class="hljs-number">32</span>, out_features=<span class="hljs-number">1</span>, bias=<span class="hljs-literal">True</span>)    (<span class="hljs-number">4</span>): Sigmoid()  ))</code></pre><h3 id="nnmodulelist作为模型容器"><a class="markdownIt-Anchor" href="#nnmodulelist作为模型容器"></a> nn.ModuleList作为模型容器</h3><p>注意<code>ModuleList</code>不能用Python中的列表代替。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Net</span>(nn.Module):        <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):        <span class="hljs-built_in">super</span>(Net, self).__init__()        self.layers = nn.ModuleList([            nn.Conv2d(in_channels=<span class="hljs-number">3</span>,out_channels=<span class="hljs-number">32</span>,kernel_size = <span class="hljs-number">3</span>),            nn.MaxPool2d(kernel_size = <span class="hljs-number">2</span>,stride = <span class="hljs-number">2</span>),            nn.Conv2d(in_channels=<span class="hljs-number">32</span>,out_channels=<span class="hljs-number">64</span>,kernel_size = <span class="hljs-number">5</span>),            nn.MaxPool2d(kernel_size = <span class="hljs-number">2</span>,stride = <span class="hljs-number">2</span>),            nn.Dropout2d(p = <span class="hljs-number">0.1</span>),            nn.AdaptiveMaxPool2d((<span class="hljs-number">1</span>,<span class="hljs-number">1</span>)),            nn.Flatten(),            nn.Linear(<span class="hljs-number">64</span>,<span class="hljs-number">32</span>),            nn.ReLU(),            nn.Linear(<span class="hljs-number">32</span>,<span class="hljs-number">1</span>),            nn.Sigmoid()]        )            <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self,x</span>):        <span class="hljs-keyword">for</span> layer <span class="hljs-keyword">in</span> self.layers:            x = layer(x)        <span class="hljs-keyword">return</span> x        net = Net()<span class="hljs-built_in">print</span>(net)&gt;&gt;&gt;Output:Net(  (layers): ModuleList(    (<span class="hljs-number">0</span>): Conv2d(<span class="hljs-number">3</span>, <span class="hljs-number">32</span>, kernel_size=(<span class="hljs-number">3</span>, <span class="hljs-number">3</span>), stride=(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>))    (<span class="hljs-number">1</span>): MaxPool2d(kernel_size=<span class="hljs-number">2</span>, stride=<span class="hljs-number">2</span>, padding=<span class="hljs-number">0</span>, dilation=<span class="hljs-number">1</span>, ceil_mode=<span class="hljs-literal">False</span>)    (<span class="hljs-number">2</span>): Conv2d(<span class="hljs-number">32</span>, <span class="hljs-number">64</span>, kernel_size=(<span class="hljs-number">5</span>, <span class="hljs-number">5</span>), stride=(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>))    (<span class="hljs-number">3</span>): MaxPool2d(kernel_size=<span class="hljs-number">2</span>, stride=<span class="hljs-number">2</span>, padding=<span class="hljs-number">0</span>, dilation=<span class="hljs-number">1</span>, ceil_mode=<span class="hljs-literal">False</span>)    (<span class="hljs-number">4</span>): Dropout2d(p=<span class="hljs-number">0.1</span>, inplace=<span class="hljs-literal">False</span>)    (<span class="hljs-number">5</span>): AdaptiveMaxPool2d(output_size=(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>))    (<span class="hljs-number">6</span>): Flatten()    (<span class="hljs-number">7</span>): Linear(in_features=<span class="hljs-number">64</span>, out_features=<span class="hljs-number">32</span>, bias=<span class="hljs-literal">True</span>)    (<span class="hljs-number">8</span>): ReLU()    (<span class="hljs-number">9</span>): Linear(in_features=<span class="hljs-number">32</span>, out_features=<span class="hljs-number">1</span>, bias=<span class="hljs-literal">True</span>)    (<span class="hljs-number">10</span>): Sigmoid()  ))</code></pre><h3 id="nnmoduledict作为模型容器"><a class="markdownIt-Anchor" href="#nnmoduledict作为模型容器"></a> nn.ModuleDict作为模型容器</h3><p>注意<code>的ModuleDict</code>不能用Python中的字典代替。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Net</span>(nn.Module):        <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):        <span class="hljs-built_in">super</span>(Net, self).__init__()        self.layers_dict = nn.ModuleDict(            {<span class="hljs-string">&quot;conv1&quot;</span>:nn.Conv2d(in_channels=<span class="hljs-number">3</span>,out_channels=<span class="hljs-number">32</span>,kernel_size = <span class="hljs-number">3</span>),               <span class="hljs-string">&quot;pool&quot;</span>: nn.MaxPool2d(kernel_size = <span class="hljs-number">2</span>,stride = <span class="hljs-number">2</span>),               <span class="hljs-string">&quot;conv2&quot;</span>:nn.Conv2d(in_channels=<span class="hljs-number">32</span>,out_channels=<span class="hljs-number">64</span>,kernel_size = <span class="hljs-number">5</span>),               <span class="hljs-string">&quot;dropout&quot;</span>: nn.Dropout2d(p = <span class="hljs-number">0.1</span>),               <span class="hljs-string">&quot;adaptive&quot;</span>:nn.AdaptiveMaxPool2d((<span class="hljs-number">1</span>,<span class="hljs-number">1</span>)),               <span class="hljs-string">&quot;flatten&quot;</span>: nn.Flatten(),               <span class="hljs-string">&quot;linear1&quot;</span>: nn.Linear(<span class="hljs-number">64</span>,<span class="hljs-number">32</span>),               <span class="hljs-string">&quot;relu&quot;</span>:nn.ReLU(),               <span class="hljs-string">&quot;linear2&quot;</span>: nn.Linear(<span class="hljs-number">32</span>,<span class="hljs-number">1</span>),               <span class="hljs-string">&quot;sigmoid&quot;</span>: nn.Sigmoid()              })    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self,x</span>):        layers = [<span class="hljs-string">&quot;conv1&quot;</span>,<span class="hljs-string">&quot;pool&quot;</span>,<span class="hljs-string">&quot;conv2&quot;</span>,<span class="hljs-string">&quot;pool&quot;</span>,<span class="hljs-string">&quot;dropout&quot;</span>,<span class="hljs-string">&quot;adaptive&quot;</span>,                  <span class="hljs-string">&quot;flatten&quot;</span>,<span class="hljs-string">&quot;linear1&quot;</span>,<span class="hljs-string">&quot;relu&quot;</span>,<span class="hljs-string">&quot;linear2&quot;</span>,<span class="hljs-string">&quot;sigmoid&quot;</span>]        <span class="hljs-keyword">for</span> layer <span class="hljs-keyword">in</span> layers:            x = self.layers_dict[layer](x)        <span class="hljs-keyword">return</span> x        net = Net()<span class="hljs-built_in">print</span>(net)&gt;&gt;&gt;Output:Net(  (layers_dict): ModuleDict(    (adaptive): AdaptiveMaxPool2d(output_size=(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>))    (conv1): Conv2d(<span class="hljs-number">3</span>, <span class="hljs-number">32</span>, kernel_size=(<span class="hljs-number">3</span>, <span class="hljs-number">3</span>), stride=(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>))    (conv2): Conv2d(<span class="hljs-number">32</span>, <span class="hljs-number">64</span>, kernel_size=(<span class="hljs-number">5</span>, <span class="hljs-number">5</span>), stride=(<span class="hljs-number">1</span>, <span class="hljs-number">1</span>))    (dropout): Dropout2d(p=<span class="hljs-number">0.1</span>, inplace=<span class="hljs-literal">False</span>)    (flatten): Flatten()    (linear1): Linear(in_features=<span class="hljs-number">64</span>, out_features=<span class="hljs-number">32</span>, bias=<span class="hljs-literal">True</span>)    (linear2): Linear(in_features=<span class="hljs-number">32</span>, out_features=<span class="hljs-number">1</span>, bias=<span class="hljs-literal">True</span>)    (pool): MaxPool2d(kernel_size=<span class="hljs-number">2</span>, stride=<span class="hljs-number">2</span>, padding=<span class="hljs-number">0</span>, dilation=<span class="hljs-number">1</span>, ceil_mode=<span class="hljs-literal">False</span>)    (relu): ReLU()    (sigmoid): Sigmoid()  ))</code></pre>]]></content>
      
      
      <categories>
          
          <category> Pytorch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础知识 </tag>
            
            <tag> pytorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pytorch|张量和张量操作</title>
      <link href="/2023/04/01/pytorch-ji-chu-zhi-shi/01-zhang-liang-he-zhang-liang-cao-zuo/"/>
      <url>/2023/04/01/pytorch-ji-chu-zhi-shi/01-zhang-liang-he-zhang-liang-cao-zuo/</url>
      
        <content type="html"><![CDATA[<h1 id="张量"><a class="markdownIt-Anchor" href="#张量"></a> 张量</h1><p>张量是基于向量和矩阵的推广，其本质就是多维数组。</p><h2 id="创建张量"><a class="markdownIt-Anchor" href="#创建张量"></a> 创建张量</h2><h3 id="常规方式创建"><a class="markdownIt-Anchor" href="#常规方式创建"></a> 常规方式创建</h3><p>常见的初始化有<code>torch.tensor</code>和<code>torch.Tensor</code>，其中的区别是</p><ul><li>tensor()：接收现有数据，通过numpy 或 list 的现有数据初始化</li><li>Tensor()：1. 接收数据的维度(, )生成随机数张量；2. 接收现有的数据[, ]生成指定数据张量</li></ul><pre class="highlight"><code class="python">tensor=torch.tensor([<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>])tensor=torch.Tensor([<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>])</code></pre><p>常见的创建方式还有<code>torch.as_tensor()</code>，<code>torch.from_numpy()</code>。这两种方式都是接收现有数据的，而且生成的张量与原有数据是<strong>内存共享</strong>的。</p><pre class="highlight"><code class="python">a = np.array([<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>])tensor = torch.from_numpy(a)tensor = torch.as_tensor(a)</code></pre><p>在不考虑性能方面，一般情况下使用torch.tensor()方法居多，那么如果要考虑性能方面，首先肯定是要从<strong>torch.as_tensor()和torch.from_numpy()两种方法中选择，因为在创建tensor的过程中，它俩是共享内存的，不需要额外创建一份数据</strong>。<br>两者的区别是torch.from_numpy()只能接收numpy数组，而torch.as_tensor()不仅可以接收numpy数组，还可以接收python的list类型数据。</p><h3 id="序列生成"><a class="markdownIt-Anchor" href="#序列生成"></a> 序列生成</h3><ul><li><code>torch.arange()</code>：接收参数：a,b,step，输出[a,b)范围内step步长的等差序列组成的tensor，数据类型为int。</li><li><code>torc.range()</code>：接收参数：a,b,step，输出[a,b]范围内step步长的等差序列组成的tensor，数据类型为float。</li></ul><p>arrange()方法和range()方法的区别在于：range()方法可以输出结果包含区间右侧b这个数值，且range()方法的数据类型为float。</p><pre class="highlight"><code class="python">a = torch.arange(<span class="hljs-number">0</span>,<span class="hljs-number">10</span>,<span class="hljs-number">2</span>)<span class="hljs-built_in">print</span>(a)<span class="hljs-built_in">print</span>(a.<span class="hljs-built_in">type</span>())b = torch.<span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,<span class="hljs-number">10</span>,<span class="hljs-number">2</span>)<span class="hljs-built_in">print</span>(b)<span class="hljs-built_in">print</span>(b.<span class="hljs-built_in">type</span>())&gt;&gt;&gt;Output:tensor([<span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">6</span>, <span class="hljs-number">8</span>])torch.LongTensortensor([ <span class="hljs-number">0.</span>,  <span class="hljs-number">2.</span>,  <span class="hljs-number">4.</span>,  <span class="hljs-number">6.</span>,  <span class="hljs-number">8.</span>, <span class="hljs-number">10.</span>])torch.FloatTensor</code></pre><p>生成一个0到n-1的n-1个整数的随机排列</p><pre class="highlight"><code class="python">a = torch.randperm(<span class="hljs-number">10</span>)<span class="hljs-built_in">print</span>(a)&gt;&gt;&gt;Output:tensor([<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">4</span>, <span class="hljs-number">7</span>, <span class="hljs-number">9</span>, <span class="hljs-number">8</span>, <span class="hljs-number">6</span>, <span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">5</span>])</code></pre><h3 id="使用随机数据创建"><a class="markdownIt-Anchor" href="#使用随机数据创建"></a> 使用随机数据创建</h3><ul><li><code>torch.rand()</code>：输入参数为一个shape，创建指定形状大小的tensor，数据为float32类型的随机数。产生[0,1]均匀分布的数据。</li><li><code>torch.randint()</code>：指定数据范围为[a, b)的随机tensor创建。输入参数为一个a,b,(x,y,…)，创建(x,y,…)大小的tensor，数据的范围为[a,b)，数据类型为整数值。</li><li><code>torch.rand_like()</code>：输入参数为一个<strong>浮点型</strong>的tensor，创建一个与输入tensor数据同大小的矩阵，数据为<strong>与原始tensor相同类型</strong>的<strong>浮点型</strong>随机数。产生[0,1]均匀分布的数据。</li></ul><pre class="highlight"><code class="python"><span class="hljs-comment"># 等价于 a = torch.rand(2,3)</span>a = torch.rand([<span class="hljs-number">2</span>,<span class="hljs-number">3</span>])<span class="hljs-built_in">print</span>(a)c = torch.rand_like(a)<span class="hljs-built_in">print</span>(c)<span class="hljs-built_in">print</span>(c.<span class="hljs-built_in">type</span>())b = torch.randint(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>,(<span class="hljs-number">2</span>,<span class="hljs-number">3</span>))<span class="hljs-built_in">print</span>(b)<span class="hljs-built_in">print</span>(b.<span class="hljs-built_in">type</span>())&gt;&gt;&gt;Output:tensor([[<span class="hljs-number">0.8703</span>, <span class="hljs-number">0.8061</span>, <span class="hljs-number">0.5126</span>],        [<span class="hljs-number">0.6069</span>, <span class="hljs-number">0.5985</span>, <span class="hljs-number">0.4657</span>]])tensor([[<span class="hljs-number">0.0937</span>, <span class="hljs-number">0.1968</span>, <span class="hljs-number">0.2269</span>],        [<span class="hljs-number">0.3653</span>, <span class="hljs-number">0.9386</span>, <span class="hljs-number">0.9892</span>]])torch.FloatTensortensor([[<span class="hljs-number">9</span>, <span class="hljs-number">3</span>, <span class="hljs-number">6</span>],        [<span class="hljs-number">4</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>]])torch.LongTensor</code></pre><ul><li><code>torch.randn()</code>：接受参数为shape，输出一个数据满足标准正态分布<code>N(0,1)</code>的随机数tensor。</li><li><code>torch.normal()</code>：接受参数为：mean, std, shape，分别为所创建数据的均值，标准差和形状，输出一个满足上述参数的广义的正态分布tensor。</li></ul><pre class="highlight"><code class="python">a = torch.randn(<span class="hljs-number">3</span>,<span class="hljs-number">3</span>)b = torch.normal(mean = torch.zeros(<span class="hljs-number">3</span>,<span class="hljs-number">3</span>), std = torch.ones(<span class="hljs-number">3</span>,<span class="hljs-number">3</span>))&gt;&gt;&gt;Output:tensor([[-<span class="hljs-number">0.6225</span>, -<span class="hljs-number">0.1253</span>, -<span class="hljs-number">0.1083</span>],        [-<span class="hljs-number">0.3199</span>, -<span class="hljs-number">0.5670</span>,  <span class="hljs-number">0.2898</span>],        [-<span class="hljs-number">0.6500</span>,  <span class="hljs-number">0.9275</span>,  <span class="hljs-number">1.0377</span>]])tensor([[ <span class="hljs-number">0.5507</span>,  <span class="hljs-number">0.2704</span>,  <span class="hljs-number">0.6472</span>],        [ <span class="hljs-number">0.2490</span>, -<span class="hljs-number">0.3354</span>,  <span class="hljs-number">0.4564</span>],        [-<span class="hljs-number">0.6255</span>,  <span class="hljs-number">0.4539</span>, -<span class="hljs-number">1.3740</span>]])</code></pre><p>使用<code>torch.Tensor()</code>创建随机数张量。</p><pre class="highlight"><code class="python">a = torch.IntTensor(<span class="hljs-number">3</span>,<span class="hljs-number">4</span>)<span class="hljs-built_in">print</span>(a)&gt;&gt;&gt;Output:tensor([[ <span class="hljs-number">241405024</span>,      <span class="hljs-number">32635</span>, <span class="hljs-number">1567730800</span>],        [     <span class="hljs-number">22007</span>,         <span class="hljs-number">32</span>,          <span class="hljs-number">0</span>]], dtype=torch.int32)</code></pre><h3 id="特殊矩阵的创建"><a class="markdownIt-Anchor" href="#特殊矩阵的创建"></a> 特殊矩阵的创建</h3><p>在数学计算中会经常使用到全0矩阵、全1矩阵、单位矩阵。其创建方法如下：</p><ul><li>torch.zeros()：接收参数为shape，输出一个shape大小的全0 Tensor。torch.zeros_like(input, dtype)</li><li>torch.ones()：接收参数为shape，输出一个shape大小的全1 Tensor。torch.ones_like(input, dtype)</li><li>torch.eye()：接收参数为shape，输出一个shape大小的单位矩阵Tensor。</li></ul><pre class="highlight"><code class="python">a = torch.zeros(<span class="hljs-number">3</span>,<span class="hljs-number">3</span>)<span class="hljs-built_in">print</span>(a)<span class="hljs-built_in">print</span>(a.<span class="hljs-built_in">type</span>())b = torch.ones(<span class="hljs-number">3</span>,<span class="hljs-number">3</span>)<span class="hljs-built_in">print</span>(b)<span class="hljs-built_in">print</span>(b.<span class="hljs-built_in">type</span>())c = torch.eye(<span class="hljs-number">3</span>,<span class="hljs-number">3</span>)<span class="hljs-built_in">print</span>(c)<span class="hljs-built_in">print</span>(c.<span class="hljs-built_in">type</span>())<span class="hljs-built_in">print</span>(torch.eye(<span class="hljs-number">2</span>))&gt;&gt;&gt;Output:tensor([[<span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>],        [<span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>],        [<span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>]])torch.FloatTensortensor([[<span class="hljs-number">1.</span>, <span class="hljs-number">1.</span>, <span class="hljs-number">1.</span>],        [<span class="hljs-number">1.</span>, <span class="hljs-number">1.</span>, <span class="hljs-number">1.</span>],        [<span class="hljs-number">1.</span>, <span class="hljs-number">1.</span>, <span class="hljs-number">1.</span>]])torch.FloatTensortensor([[<span class="hljs-number">1.</span>, <span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>],        [<span class="hljs-number">0.</span>, <span class="hljs-number">1.</span>, <span class="hljs-number">0.</span>],        [<span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>, <span class="hljs-number">1.</span>]])torch.FloatTensortensor([[<span class="hljs-number">1.</span>, <span class="hljs-number">0.</span>],        [<span class="hljs-number">0.</span>, <span class="hljs-number">1.</span>]])</code></pre><p><code>torch.full()</code>：接收参数为shape, x，输出一个shape大小的元素全为x的tensor。</p><pre class="highlight"><code class="python">a = torch.full((<span class="hljs-number">2</span>,<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)<span class="hljs-built_in">print</span>(a)<span class="hljs-built_in">print</span>(a.<span class="hljs-built_in">type</span>())a = torch.ones((<span class="hljs-number">3</span>,<span class="hljs-number">3</span>), dtype = torch.<span class="hljs-built_in">int</span>)torch.fill_(a,<span class="hljs-number">5</span>) <span class="hljs-built_in">print</span>(a)&gt;&gt;&gt;Output:tensor([[<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>],        [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>]])torch.LongTensortensor([[<span class="hljs-number">5.</span>, <span class="hljs-number">5.</span>, <span class="hljs-number">5.</span>],        [<span class="hljs-number">5.</span>, <span class="hljs-number">5.</span>, <span class="hljs-number">5.</span>],        [<span class="hljs-number">5.</span>, <span class="hljs-number">5.</span>, <span class="hljs-number">5.</span>]])</code></pre><p><code>torch.empty()</code>接收参数为shape，表示创建一个<strong>未初始化</strong>的张量。torch.empty_like(input, dtype)</p><pre class="highlight"><code class="python">a = torch.empty(<span class="hljs-number">2</span>,<span class="hljs-number">3</span>)<span class="hljs-built_in">print</span>(a)<span class="hljs-comment"># 等价于 a = torch.empty([2,3])</span>&gt;&gt;&gt;Output:tensor([[<span class="hljs-number">8.8319e+17</span>, <span class="hljs-number">3.0838e-41</span>, <span class="hljs-number">9.5811e+17</span>],        [<span class="hljs-number">3.0838e-41</span>, <span class="hljs-number">9.1995e-41</span>, <span class="hljs-number">4.5989e-40</span>]])</code></pre><h2 id="张量的数据类型"><a class="markdownIt-Anchor" href="#张量的数据类型"></a> 张量的数据类型</h2><p>Pytorch的基本数据结构是张量Tensor。张量即多维数组。Pytorch的张量和numpy中的array很类似。</p><table><thead><tr><th>Data type</th><th>dtype</th><th>CPU tensor</th><th>GPU tensor</th></tr></thead><tbody><tr><td>16-bit floating point</td><td>torch.float16 or torch.half</td><td>torch.HalfTensor</td><td>torch.cuda.HalfTensor</td></tr><tr><td>32-bit floating point</td><td>torch.float32 or torch.float</td><td>torch.FloatTensor</td><td>torch.cuda.FloatTensor</td></tr><tr><td>64-bit floating point</td><td>torch.float64 or torch.double</td><td>torch.DoubleTensor</td><td>torch.cuda.DoubleTensor</td></tr><tr><td>8-bit integer (signed)</td><td>torch.int8</td><td>torch.CharTensor</td><td>torch.cuda.CharTensor</td></tr><tr><td>16-bit integer (signed)</td><td>torch.int16 or torch.short</td><td>torch.ShortTensor</td><td>torch.cuda.ShortTensor</td></tr><tr><td>32-bit integer (signed)</td><td>torch.int32 or torch.int</td><td>torch.IntTensor</td><td>torch.cuda.IntTensor</td></tr><tr><td>64-bit integer (signed)</td><td>torch.int64 or torch.long</td><td>torch.LongTensor</td><td>torch.cuda.LongTensor</td></tr><tr><td>8-bit integer (unsigned)</td><td>torch.uint8</td><td>torch.ByteTensor</td><td>torch.cuda.ByteTensor</td></tr></tbody></table><p>张量的数据类型和numpy.array基本一一对应，但是不支持str类型。包括:</p><ul><li>torch.float64(torch.double),</li><li><strong>torch.float32(torch.float)</strong>,</li><li>torch.float16,</li><li>torch.int64(torch.long),</li><li>torch.int32(torch.int),</li><li>torch.int16,</li><li>torch.int8,</li><li>torch.uint8,</li><li>torch.bool</li></ul><p>一般神经网络建模使用的都是torch.float32类型。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<span class="hljs-keyword">import</span> torch <span class="hljs-comment"># 自动推断数据类型</span>i = torch.tensor(<span class="hljs-number">1</span>);<span class="hljs-built_in">print</span>(i, i.dtype)x = torch.tensor(<span class="hljs-number">2.0</span>);<span class="hljs-built_in">print</span>(x, x.dtype)b = torch.tensor(<span class="hljs-literal">True</span>);<span class="hljs-built_in">print</span>(b, b.dtype)&gt;&gt;&gt;Output:tensor(<span class="hljs-number">1</span>) torch.int64tensor(<span class="hljs-number">2.</span>) torch.float32tensor(<span class="hljs-literal">True</span>) torch.<span class="hljs-built_in">bool</span></code></pre><pre class="highlight"><code class="python"><span class="hljs-comment"># 指定数据类型</span>i = torch.tensor(<span class="hljs-number">1</span>, dtype = torch.int32);<span class="hljs-built_in">print</span>(i,i.dtype)x = torch.tensor(<span class="hljs-number">2.0</span>, dtype = torch.double);<span class="hljs-built_in">print</span>(x,x.dtype)&gt;&gt;&gt;Output:tensor(<span class="hljs-number">1</span>, dtype=torch.int32) torch.int32tensor(<span class="hljs-number">2.</span>, dtype=torch.float64) torch.float64</code></pre><pre class="highlight"><code class="python"><span class="hljs-comment"># 使用特定类型构造函数</span>i = torch.IntTensor(<span class="hljs-number">1</span>);<span class="hljs-built_in">print</span>(i,i.dtype)<span class="hljs-comment"># 等价于torch.FloatTensor</span>x = torch.Tensor(np.array(<span class="hljs-number">2.0</span>));<span class="hljs-built_in">print</span>(x,x.dtype) b = torch.BoolTensor(np.array([<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">2</span>,<span class="hljs-number">0</span>])); <span class="hljs-built_in">print</span>(b,b.dtype)&gt;&gt;&gt;Output:tensor([<span class="hljs-number">5</span>], dtype=torch.int32) torch.int32tensor(<span class="hljs-number">2.</span>) torch.float32tensor([ <span class="hljs-literal">True</span>, <span class="hljs-literal">False</span>,  <span class="hljs-literal">True</span>, <span class="hljs-literal">False</span>]) torch.<span class="hljs-built_in">bool</span></code></pre><pre class="highlight"><code class="python"><span class="hljs-comment"># 不同类型进行转换</span>i = torch.tensor(<span class="hljs-number">1</span>); <span class="hljs-built_in">print</span>(i,i.dtype)<span class="hljs-comment"># 调用 float方法转换成浮点类型</span>x = i.<span class="hljs-built_in">float</span>(); <span class="hljs-built_in">print</span>(x,x.dtype) <span class="hljs-comment"># 使用type函数转换成浮点类型</span>y = i.<span class="hljs-built_in">type</span>(torch.<span class="hljs-built_in">float</span>); <span class="hljs-built_in">print</span>(y,y.dtype) <span class="hljs-comment"># 使用type_as方法转换成某个Tensor相同类型</span>z = i.type_as(x);<span class="hljs-built_in">print</span>(z,z.dtype) &gt;&gt;&gt;Output:tensor(<span class="hljs-number">1</span>) torch.int64tensor(<span class="hljs-number">1.</span>) torch.float32tensor(<span class="hljs-number">1.</span>) torch.float32tensor(<span class="hljs-number">1.</span>) torch.float32</code></pre><h2 id="张量的维度"><a class="markdownIt-Anchor" href="#张量的维度"></a> 张量的维度</h2><p>不同类型的数据可以用不同维度(dimension)的张量来表示。标量为0维张量，向量为1维张量，矩阵为2维张量。彩色图像有rgb三个通道，可以表示为3维张量。视频还有时间维，可以表示为4维张量。<br>可以简单地总结为：有几层中括号，就是多少维的张量。</p><pre class="highlight"><code class="python">scalar = torch.tensor(<span class="hljs-literal">True</span>)<span class="hljs-built_in">print</span>(scalar)<span class="hljs-built_in">print</span>(scalar.dim())  <span class="hljs-comment"># 标量，0维张量</span>&gt;&gt;&gt;Output:tensor(<span class="hljs-literal">True</span>)<span class="hljs-number">0</span></code></pre><pre class="highlight"><code class="python">vector = torch.tensor([<span class="hljs-number">1.0</span>,<span class="hljs-number">2.0</span>,<span class="hljs-number">3.0</span>,<span class="hljs-number">4.0</span>]) <span class="hljs-comment">#向量，1维张量</span><span class="hljs-built_in">print</span>(vector)<span class="hljs-built_in">print</span>(vector.dim())&gt;&gt;&gt;Output:tensor([<span class="hljs-number">1.</span>, <span class="hljs-number">2.</span>, <span class="hljs-number">3.</span>, <span class="hljs-number">4.</span>])<span class="hljs-number">1</span></code></pre><pre class="highlight"><code class="python">matrix = torch.tensor([[<span class="hljs-number">1.0</span>,<span class="hljs-number">2.0</span>],[<span class="hljs-number">3.0</span>,<span class="hljs-number">4.0</span>]]) <span class="hljs-comment">#矩阵, 2维张量</span><span class="hljs-built_in">print</span>(matrix)<span class="hljs-built_in">print</span>(matrix.dim())&gt;&gt;&gt;Output:tensor([[<span class="hljs-number">1.</span>, <span class="hljs-number">2.</span>],        [<span class="hljs-number">3.</span>, <span class="hljs-number">4.</span>]])<span class="hljs-number">2</span></code></pre><pre class="highlight"><code class="python">tensor3 = torch.tensor([[[<span class="hljs-number">1.0</span>,<span class="hljs-number">2.0</span>],[<span class="hljs-number">3.0</span>,<span class="hljs-number">4.0</span>]],[[<span class="hljs-number">5.0</span>,<span class="hljs-number">6.0</span>],[<span class="hljs-number">7.0</span>,<span class="hljs-number">8.0</span>]]])  <span class="hljs-comment"># 3维张量</span><span class="hljs-built_in">print</span>(tensor3)<span class="hljs-built_in">print</span>(tensor3.dim())&gt;&gt;&gt;Output:tensor([[[<span class="hljs-number">1.</span>, <span class="hljs-number">2.</span>],         [<span class="hljs-number">3.</span>, <span class="hljs-number">4.</span>]],        [[<span class="hljs-number">5.</span>, <span class="hljs-number">6.</span>],         [<span class="hljs-number">7.</span>, <span class="hljs-number">8.</span>]]])<span class="hljs-number">3</span></code></pre><pre class="highlight"><code class="python">tensor4 = torch.tensor([[[[<span class="hljs-number">1.0</span>,<span class="hljs-number">1.0</span>],[<span class="hljs-number">2.0</span>,<span class="hljs-number">2.0</span>]],[[<span class="hljs-number">3.0</span>,<span class="hljs-number">3.0</span>],[<span class="hljs-number">4.0</span>,<span class="hljs-number">4.0</span>]]],                        [[[<span class="hljs-number">5.0</span>,<span class="hljs-number">5.0</span>],[<span class="hljs-number">6.0</span>,<span class="hljs-number">6.0</span>]],[[<span class="hljs-number">7.0</span>,<span class="hljs-number">7.0</span>],[<span class="hljs-number">8.0</span>,<span class="hljs-number">8.0</span>]]]])  <span class="hljs-comment"># 4维张量</span><span class="hljs-built_in">print</span>(tensor4)<span class="hljs-built_in">print</span>(tensor4.dim())&gt;&gt;&gt;Output:tensor([[[[<span class="hljs-number">1.</span>, <span class="hljs-number">1.</span>],          [<span class="hljs-number">2.</span>, <span class="hljs-number">2.</span>]],         [[<span class="hljs-number">3.</span>, <span class="hljs-number">3.</span>],          [<span class="hljs-number">4.</span>, <span class="hljs-number">4.</span>]]],        [[[<span class="hljs-number">5.</span>, <span class="hljs-number">5.</span>],          [<span class="hljs-number">6.</span>, <span class="hljs-number">6.</span>]],         [[<span class="hljs-number">7.</span>, <span class="hljs-number">7.</span>],          [<span class="hljs-number">8.</span>, <span class="hljs-number">8.</span>]]]])<span class="hljs-number">4</span></code></pre><h2 id="张量的尺寸"><a class="markdownIt-Anchor" href="#张量的尺寸"></a> 张量的尺寸</h2><p>可以使用<code>**shape**</code><strong>属性</strong>或者<code>**size()**</code><strong>方法</strong>查看张量在每一维的长度。<br>可以使用<code>view()</code>方法改变张量的尺寸。如果<code>view()</code>方法改变尺寸失败，可以使用<code>reshape()</code>方法。</p><pre class="highlight"><code class="python">scalar = torch.tensor(<span class="hljs-literal">True</span>)<span class="hljs-built_in">print</span>(scalar.size())<span class="hljs-built_in">print</span>(scalar.shape)&gt;&gt;&gt;Output:torch.Size([])torch.Size([])</code></pre><pre class="highlight"><code class="python">vector = torch.tensor([<span class="hljs-number">1.0</span>, <span class="hljs-number">2.0</span>, <span class="hljs-number">3.0</span>, <span class="hljs-number">4.0</span>])<span class="hljs-built_in">print</span>(vector.size())<span class="hljs-built_in">print</span>(vector.shape)&gt;&gt;&gt;Output:torch.Size([<span class="hljs-number">4</span>])torch.Size([<span class="hljs-number">4</span>])</code></pre><pre class="highlight"><code class="python">matrix = torch.tensor([[<span class="hljs-number">1.0</span>,<span class="hljs-number">2.0</span>],[<span class="hljs-number">3.0</span>,<span class="hljs-number">4.0</span>]])<span class="hljs-built_in">print</span>(matrix.size())<span class="hljs-built_in">print</span>(matrix.shape)&gt;&gt;&gt;Output:torch.Size([<span class="hljs-number">2</span>, <span class="hljs-number">2</span>])torch.Size([<span class="hljs-number">2</span>, <span class="hljs-number">2</span>])</code></pre><p>使用view可以改变张量尺寸</p><pre class="highlight"><code class="python">vector = torch.arange(<span class="hljs-number">0</span>,<span class="hljs-number">12</span>)<span class="hljs-built_in">print</span>(vector)<span class="hljs-built_in">print</span>(vector.shape)matrix34 = vector.view(<span class="hljs-number">3</span>,<span class="hljs-number">4</span>)<span class="hljs-built_in">print</span>(matrix34)<span class="hljs-built_in">print</span>(matrix34.shape)matrix43 = vector.view(<span class="hljs-number">4</span>,-<span class="hljs-number">1</span>) <span class="hljs-comment">#-1表示该位置长度由程序自动推断</span><span class="hljs-built_in">print</span>(matrix43)<span class="hljs-built_in">print</span>(matrix43.shape)&gt;&gt;&gt;Output:tensor([ <span class="hljs-number">0</span>,  <span class="hljs-number">1</span>,  <span class="hljs-number">2</span>,  <span class="hljs-number">3</span>,  <span class="hljs-number">4</span>,  <span class="hljs-number">5</span>,  <span class="hljs-number">6</span>,  <span class="hljs-number">7</span>,  <span class="hljs-number">8</span>,  <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">11</span>])torch.Size([<span class="hljs-number">12</span>])tensor([[ <span class="hljs-number">0</span>,  <span class="hljs-number">1</span>,  <span class="hljs-number">2</span>,  <span class="hljs-number">3</span>],        [ <span class="hljs-number">4</span>,  <span class="hljs-number">5</span>,  <span class="hljs-number">6</span>,  <span class="hljs-number">7</span>],        [ <span class="hljs-number">8</span>,  <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">11</span>]])torch.Size([<span class="hljs-number">3</span>, <span class="hljs-number">4</span>])tensor([[ <span class="hljs-number">0</span>,  <span class="hljs-number">1</span>,  <span class="hljs-number">2</span>],        [ <span class="hljs-number">3</span>,  <span class="hljs-number">4</span>,  <span class="hljs-number">5</span>],        [ <span class="hljs-number">6</span>,  <span class="hljs-number">7</span>,  <span class="hljs-number">8</span>],        [ <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">11</span>]])torch.Size([<span class="hljs-number">4</span>, <span class="hljs-number">3</span>])</code></pre><p>有些操作会让张量存储结构扭曲，直接使用view会失败，可以用reshape方法。</p><pre class="highlight"><code class="python">matrix26 = torch.arange(<span class="hljs-number">0</span>,<span class="hljs-number">12</span>).view(<span class="hljs-number">2</span>,<span class="hljs-number">6</span>)<span class="hljs-built_in">print</span>(matrix26)<span class="hljs-built_in">print</span>(matrix26.shape)<span class="hljs-comment"># 转置操作让张量存储结构扭曲</span>matrix62 = matrix26.t()<span class="hljs-built_in">print</span>(matrix62.is_contiguous())<span class="hljs-comment"># 直接使用view方法会失败，可以使用reshape方法</span><span class="hljs-comment"># matrix34 = matrix62.view(3,4) # error!</span><span class="hljs-comment"># 等价于matrix34 = matrix62.contiguous().view(3,4)。</span><span class="hljs-comment"># contiguous()函数，把tensor变成在内存中连续分布的形式。</span>matrix34 = matrix62.reshape(<span class="hljs-number">3</span>,<span class="hljs-number">4</span>) <span class="hljs-built_in">print</span>(matrix34)&gt;&gt;&gt;Output:tensor([[ <span class="hljs-number">0</span>,  <span class="hljs-number">1</span>,  <span class="hljs-number">2</span>,  <span class="hljs-number">3</span>,  <span class="hljs-number">4</span>,  <span class="hljs-number">5</span>],        [ <span class="hljs-number">6</span>,  <span class="hljs-number">7</span>,  <span class="hljs-number">8</span>,  <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">11</span>]])torch.Size([<span class="hljs-number">2</span>, <span class="hljs-number">6</span>])<span class="hljs-literal">False</span>tensor([[ <span class="hljs-number">0</span>,  <span class="hljs-number">6</span>,  <span class="hljs-number">1</span>,  <span class="hljs-number">7</span>],        [ <span class="hljs-number">2</span>,  <span class="hljs-number">8</span>,  <span class="hljs-number">3</span>,  <span class="hljs-number">9</span>],        [ <span class="hljs-number">4</span>, <span class="hljs-number">10</span>,  <span class="hljs-number">5</span>, <span class="hljs-number">11</span>]])</code></pre><h2 id="张量和numpy数组"><a class="markdownIt-Anchor" href="#张量和numpy数组"></a> 张量和numpy数组</h2><p>可以用<code>numpy()</code>方法从Tensor得到numpy数组，也可以用<code>torch.from_numpy()</code>从numpy数组得到Tensor。这两种方法关联的Tensor和numpy数组是<strong>共享数据内存</strong>的。如果改变其中一个，另外一个的值也会发生改变。<br>如果有需要，可以用张量的<code>clone()</code>方法拷贝张量，中断这种关联。<br>此外，还可以使用<code>item()</code>方法从标量张量得到对应的Python数值。使用<code>tolist()</code>方法从张量得到对应的Python数值列表。</p><pre class="highlight"><code class="python"><span class="hljs-comment">#torch.from_numpy函数从numpy数组得到Tensor</span>arr = np.zeros(<span class="hljs-number">3</span>)tensor = torch.from_numpy(arr)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;before add 1:&quot;</span>)<span class="hljs-built_in">print</span>(arr)<span class="hljs-built_in">print</span>(tensor)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\nafter add 1:&quot;</span>)np.add(arr,<span class="hljs-number">1</span>, out = arr) <span class="hljs-comment"># 给 arr增加1，tensor也随之改变</span><span class="hljs-built_in">print</span>(arr)<span class="hljs-built_in">print</span>(tensor)&gt;&gt;&gt;Output:before add <span class="hljs-number">1</span>:[<span class="hljs-number">0.</span> <span class="hljs-number">0.</span> <span class="hljs-number">0.</span>]tensor([<span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>], dtype=torch.float64)after add <span class="hljs-number">1</span>:[<span class="hljs-number">1.</span> <span class="hljs-number">1.</span> <span class="hljs-number">1.</span>]tensor([<span class="hljs-number">1.</span>, <span class="hljs-number">1.</span>, <span class="hljs-number">1.</span>], dtype=torch.float64)</code></pre><pre class="highlight"><code class="python"><span class="hljs-comment"># numpy方法从Tensor得到numpy数组</span>tensor = torch.zeros(<span class="hljs-number">3</span>)arr = tensor.numpy()<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;before add 1:&quot;</span>)<span class="hljs-built_in">print</span>(tensor)<span class="hljs-built_in">print</span>(arr)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\nafter add 1:&quot;</span>)<span class="hljs-comment"># 使用带下划线的方法表示计算结果会返回给调用 张量</span>tensor.add_(<span class="hljs-number">1</span>) <span class="hljs-comment">#给 tensor增加1，arr也随之改变 </span><span class="hljs-comment"># 或： torch.add(tensor,1,out = tensor)</span><span class="hljs-built_in">print</span>(tensor)<span class="hljs-built_in">print</span>(arr)&gt;&gt;&gt;Output:before add <span class="hljs-number">1</span>:tensor([<span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>])[<span class="hljs-number">0.</span> <span class="hljs-number">0.</span> <span class="hljs-number">0.</span>]after add <span class="hljs-number">1</span>:tensor([<span class="hljs-number">1.</span>, <span class="hljs-number">1.</span>, <span class="hljs-number">1.</span>])[<span class="hljs-number">1.</span> <span class="hljs-number">1.</span> <span class="hljs-number">1.</span>]</code></pre><pre class="highlight"><code class="python"><span class="hljs-comment"># 可以用clone() 方法拷贝张量，中断这种关联</span>tensor = torch.zeros(<span class="hljs-number">3</span>)<span class="hljs-comment"># 使用clone方法拷贝张量, 拷贝后的张量和原始张量内存独立</span>arr = tensor.clone().numpy() <span class="hljs-comment"># 也可以使用tensor.data.numpy()</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;before add 1:&quot;</span>)<span class="hljs-built_in">print</span>(tensor)<span class="hljs-built_in">print</span>(arr)<span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;\nafter add 1:&quot;</span>)<span class="hljs-comment">#使用 带下划线的方法表示计算结果会返回给调用 张量</span>tensor.add_(<span class="hljs-number">1</span>) <span class="hljs-comment">#给 tensor增加1，arr不再随之改变</span><span class="hljs-built_in">print</span>(tensor)<span class="hljs-built_in">print</span>(arr)&gt;&gt;&gt;Output:before add <span class="hljs-number">1</span>:tensor([<span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>])[<span class="hljs-number">0.</span> <span class="hljs-number">0.</span> <span class="hljs-number">0.</span>]after add <span class="hljs-number">1</span>:tensor([<span class="hljs-number">1.</span>, <span class="hljs-number">1.</span>, <span class="hljs-number">1.</span>])[<span class="hljs-number">0.</span> <span class="hljs-number">0.</span> <span class="hljs-number">0.</span>]</code></pre><pre class="highlight"><code class="python"><span class="hljs-comment"># item方法和tolist方法可以将张量转换成Python数值和数值列表</span>scalar = torch.tensor(<span class="hljs-number">1.0</span>)<span class="hljs-built_in">print</span>(scalar)s = scalar.item()<span class="hljs-built_in">print</span>(s)<span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(s))tensor = torch.rand(<span class="hljs-number">2</span>,<span class="hljs-number">2</span>)t = tensor.tolist()<span class="hljs-built_in">print</span>(t)<span class="hljs-built_in">print</span>(<span class="hljs-built_in">type</span>(t))&gt;&gt;&gt;Output:tensor(<span class="hljs-number">1.</span>)<span class="hljs-number">1.0</span>&lt;<span class="hljs-keyword">class</span> <span class="hljs-string">&#x27;float&#x27;</span>&gt;[[<span class="hljs-number">0.8211846351623535</span>, <span class="hljs-number">0.20020723342895508</span>], [<span class="hljs-number">0.011571824550628662</span>, <span class="hljs-number">0.2906131148338318</span>]]&lt;<span class="hljs-keyword">class</span> <span class="hljs-string">&#x27;list&#x27;</span>&gt;</code></pre><h2 id="张量的操作"><a class="markdownIt-Anchor" href="#张量的操作"></a> 张量的操作</h2><p>张量的操作主要包括张量的结构操作和张量的数学运算。</p><ul><li>张量结构操作诸如：张量创建，索引切片，维度变换，合并分割。</li><li>张量数学运算主要有：标量运算，向量运算，矩阵运算，张量运算的广播机制。</li></ul><h3 id="张量的结构操作"><a class="markdownIt-Anchor" href="#张量的结构操作"></a> 张量的结构操作</h3><h4 id="张量创建"><a class="markdownIt-Anchor" href="#张量创建"></a> 张量创建</h4><p>张量创建的许多方法和numpy中创建array的方法很像。�也可参考【创建张量】</p><pre class="highlight"><code class="python">a = torch.tensor([<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>],dtype = torch.<span class="hljs-built_in">float</span>)<span class="hljs-built_in">print</span>(a)b = torch.arange(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>,step = <span class="hljs-number">2</span>)<span class="hljs-built_in">print</span>(b)c = torch.linspace(<span class="hljs-number">0.0</span>,<span class="hljs-number">2</span>*<span class="hljs-number">3.14</span>,<span class="hljs-number">10</span>)<span class="hljs-built_in">print</span>(c)d = torch.zeros((<span class="hljs-number">3</span>,<span class="hljs-number">3</span>))<span class="hljs-built_in">print</span>(d)&gt;&gt;&gt;Output:tensor([<span class="hljs-number">1.</span>, <span class="hljs-number">2.</span>, <span class="hljs-number">3.</span>])tensor([<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>, <span class="hljs-number">9</span>])tensor([<span class="hljs-number">0.0000</span>, <span class="hljs-number">0.6978</span>, <span class="hljs-number">1.3956</span>, <span class="hljs-number">2.0933</span>, <span class="hljs-number">2.7911</span>, <span class="hljs-number">3.4889</span>, <span class="hljs-number">4.1867</span>, <span class="hljs-number">4.8844</span>, <span class="hljs-number">5.5822</span>,        <span class="hljs-number">6.2800</span>])tensor([[<span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>],        [<span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>],        [<span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>]])</code></pre><pre class="highlight"><code class="python">a = torch.ones((<span class="hljs-number">3</span>,<span class="hljs-number">3</span>), dtype = torch.<span class="hljs-built_in">int</span>)b = torch.zeros_like(a, dtype = torch.<span class="hljs-built_in">float</span>)<span class="hljs-built_in">print</span>(a)<span class="hljs-built_in">print</span>(b)<span class="hljs-comment"># 等价于 b.fill_(5)</span>torch.fill_(b,<span class="hljs-number">5</span>) <span class="hljs-built_in">print</span>(b)&gt;&gt;&gt;Output:tensor([[<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>],        [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>],        [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>]], dtype=torch.int32)tensor([[<span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>],        [<span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>],        [<span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>]])tensor([[<span class="hljs-number">5.</span>, <span class="hljs-number">5.</span>, <span class="hljs-number">5.</span>],        [<span class="hljs-number">5.</span>, <span class="hljs-number">5.</span>, <span class="hljs-number">5.</span>],        [<span class="hljs-number">5.</span>, <span class="hljs-number">5.</span>, <span class="hljs-number">5.</span>]])</code></pre><pre class="highlight"><code class="python"><span class="hljs-comment"># 均匀随机分布</span>minval,maxval = <span class="hljs-number">0</span>,<span class="hljs-number">10</span>a = minval + (maxval-minval)*torch.rand([<span class="hljs-number">5</span>])<span class="hljs-built_in">print</span>(a)<span class="hljs-comment"># 正态分布随机</span>b = torch.normal(mean = torch.zeros(<span class="hljs-number">3</span>,<span class="hljs-number">3</span>), std = torch.ones(<span class="hljs-number">3</span>,<span class="hljs-number">3</span>))<span class="hljs-built_in">print</span>(b)<span class="hljs-comment"># 正态分布随机</span>mean,std = <span class="hljs-number">2</span>,<span class="hljs-number">5</span>c = std*torch.randn((<span class="hljs-number">3</span>,<span class="hljs-number">3</span>))+mean<span class="hljs-built_in">print</span>(c)<span class="hljs-comment"># 整数随机排列</span>d = torch.randperm(<span class="hljs-number">20</span>)<span class="hljs-built_in">print</span>(d)&gt;&gt;&gt;Output:tensor([<span class="hljs-number">4.9626</span>, <span class="hljs-number">7.6822</span>, <span class="hljs-number">0.8848</span>, <span class="hljs-number">1.3203</span>, <span class="hljs-number">3.0742</span>])tensor([[ <span class="hljs-number">0.5507</span>,  <span class="hljs-number">0.2704</span>,  <span class="hljs-number">0.6472</span>],        [ <span class="hljs-number">0.2490</span>, -<span class="hljs-number">0.3354</span>,  <span class="hljs-number">0.4564</span>],        [-<span class="hljs-number">0.6255</span>,  <span class="hljs-number">0.4539</span>, -<span class="hljs-number">1.3740</span>]])tensor([[<span class="hljs-number">16.2371</span>, -<span class="hljs-number">1.6612</span>,  <span class="hljs-number">3.9163</span>],        [ <span class="hljs-number">7.4999</span>,  <span class="hljs-number">1.5616</span>,  <span class="hljs-number">4.0768</span>],        [ <span class="hljs-number">5.2128</span>, -<span class="hljs-number">8.9407</span>,  <span class="hljs-number">6.4601</span>]])tensor([ <span class="hljs-number">3</span>, <span class="hljs-number">17</span>,  <span class="hljs-number">9</span>, <span class="hljs-number">19</span>,  <span class="hljs-number">1</span>, <span class="hljs-number">18</span>,  <span class="hljs-number">4</span>, <span class="hljs-number">13</span>, <span class="hljs-number">15</span>, <span class="hljs-number">12</span>,  <span class="hljs-number">0</span>, <span class="hljs-number">16</span>,  <span class="hljs-number">7</span>, <span class="hljs-number">11</span>,  <span class="hljs-number">2</span>,  <span class="hljs-number">5</span>,  <span class="hljs-number">8</span>, <span class="hljs-number">10</span>,         <span class="hljs-number">6</span>, <span class="hljs-number">14</span>])</code></pre><pre class="highlight"><code class="python">I = torch.eye(<span class="hljs-number">3</span>,<span class="hljs-number">3</span>) <span class="hljs-comment">#单位矩阵</span><span class="hljs-built_in">print</span>(I)t = torch.diag(torch.tensor([<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>])) <span class="hljs-comment">#对角矩阵</span><span class="hljs-built_in">print</span>(t)&gt;&gt;&gt;Output:tensor([[<span class="hljs-number">1.</span>, <span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>],        [<span class="hljs-number">0.</span>, <span class="hljs-number">1.</span>, <span class="hljs-number">0.</span>],        [<span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>, <span class="hljs-number">1.</span>]])tensor([[<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>],        [<span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>],        [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">3</span>]])</code></pre><h4 id="索引切片"><a class="markdownIt-Anchor" href="#索引切片"></a> 索引切片</h4><p>张量的索引切片方式和numpy几乎是一样的。切片时支持缺省参数和省略号。可以通过索引和切片对部分元素进行修改。<br>此外，对于不规则的切片提取，可以使用<code>torch.index_select</code>，<code>torch.masked_select</code>，<code>torch.take</code>。<br>如果要通过修改张量的某些元素得到新的张量，可以使用<code>torch.where</code>，<code>torch.masked_fill</code>，<code>torch.index_fill</code>。</p><pre class="highlight"><code class="python"><span class="hljs-comment"># 均匀随机分布</span>torch.manual_seed(<span class="hljs-number">0</span>)minval,maxval = <span class="hljs-number">0</span>,<span class="hljs-number">10</span>t = torch.floor(minval + (maxval-minval)*torch.rand([<span class="hljs-number">5</span>,<span class="hljs-number">5</span>])).<span class="hljs-built_in">int</span>()<span class="hljs-built_in">print</span>(t)<span class="hljs-comment">#第1行</span><span class="hljs-built_in">print</span>(t[<span class="hljs-number">0</span>])<span class="hljs-comment">#倒数第一行</span><span class="hljs-built_in">print</span>(t[-<span class="hljs-number">1</span>])<span class="hljs-comment">#第2行第4列</span><span class="hljs-built_in">print</span>(t[<span class="hljs-number">1</span>,<span class="hljs-number">3</span>])<span class="hljs-built_in">print</span>(t[<span class="hljs-number">1</span>][<span class="hljs-number">3</span>])<span class="hljs-comment">#第1行至第3行</span><span class="hljs-built_in">print</span>(t[<span class="hljs-number">1</span>:<span class="hljs-number">4</span>,:])<span class="hljs-comment">#第1行至最后一行，第0列到最后一列每隔两列取一列</span><span class="hljs-built_in">print</span>(t[<span class="hljs-number">1</span>:<span class="hljs-number">4</span>,:<span class="hljs-number">4</span>:<span class="hljs-number">2</span>])&gt;&gt;&gt;Output:tensor([[<span class="hljs-number">4</span>, <span class="hljs-number">7</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>],        [<span class="hljs-number">6</span>, <span class="hljs-number">4</span>, <span class="hljs-number">8</span>, <span class="hljs-number">4</span>, <span class="hljs-number">6</span>],        [<span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>],        [<span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">8</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>],        [<span class="hljs-number">6</span>, <span class="hljs-number">9</span>, <span class="hljs-number">3</span>, <span class="hljs-number">8</span>, <span class="hljs-number">4</span>]], dtype=torch.int32)tensor([<span class="hljs-number">4</span>, <span class="hljs-number">7</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">3</span>], dtype=torch.int32)tensor([<span class="hljs-number">6</span>, <span class="hljs-number">9</span>, <span class="hljs-number">3</span>, <span class="hljs-number">8</span>, <span class="hljs-number">4</span>], dtype=torch.int32)tensor(<span class="hljs-number">4</span>, dtype=torch.int32)tensor(<span class="hljs-number">4</span>, dtype=torch.int32)tensor([[<span class="hljs-number">6</span>, <span class="hljs-number">4</span>, <span class="hljs-number">8</span>, <span class="hljs-number">4</span>, <span class="hljs-number">6</span>],        [<span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>],        [<span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">8</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>]], dtype=torch.int32)tensor([[<span class="hljs-number">6</span>, <span class="hljs-number">8</span>],        [<span class="hljs-number">3</span>, <span class="hljs-number">0</span>],        [<span class="hljs-number">5</span>, <span class="hljs-number">8</span>]], dtype=torch.int32)</code></pre><pre class="highlight"><code class="python"><span class="hljs-comment">#可以使用索引和切片修改部分元素</span>x = torch.tensor([[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>],[<span class="hljs-number">3</span>,<span class="hljs-number">4</span>]],dtype = torch.float32,requires_grad=<span class="hljs-literal">True</span>)x.data[<span class="hljs-number">1</span>,:] = torch.tensor([<span class="hljs-number">0.0</span>,<span class="hljs-number">0.0</span>])<span class="hljs-built_in">print</span>(x)&gt;&gt;&gt;Output:tensor([[<span class="hljs-number">1.</span>, <span class="hljs-number">2.</span>],        [<span class="hljs-number">0.</span>, <span class="hljs-number">0.</span>]], requires_grad=<span class="hljs-literal">True</span>)</code></pre><pre class="highlight"><code class="python">a = torch.arange(<span class="hljs-number">27</span>).view(<span class="hljs-number">3</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>)<span class="hljs-built_in">print</span>(a)<span class="hljs-comment">#省略号可以表示多个冒号</span><span class="hljs-built_in">print</span>(a[...,<span class="hljs-number">1</span>])&gt;&gt;&gt;Output:tensor([[[ <span class="hljs-number">0</span>,  <span class="hljs-number">1</span>,  <span class="hljs-number">2</span>],         [ <span class="hljs-number">3</span>,  <span class="hljs-number">4</span>,  <span class="hljs-number">5</span>],         [ <span class="hljs-number">6</span>,  <span class="hljs-number">7</span>,  <span class="hljs-number">8</span>]],        [[ <span class="hljs-number">9</span>, <span class="hljs-number">10</span>, <span class="hljs-number">11</span>],         [<span class="hljs-number">12</span>, <span class="hljs-number">13</span>, <span class="hljs-number">14</span>],         [<span class="hljs-number">15</span>, <span class="hljs-number">16</span>, <span class="hljs-number">17</span>]],        [[<span class="hljs-number">18</span>, <span class="hljs-number">19</span>, <span class="hljs-number">20</span>],         [<span class="hljs-number">21</span>, <span class="hljs-number">22</span>, <span class="hljs-number">23</span>],         [<span class="hljs-number">24</span>, <span class="hljs-number">25</span>, <span class="hljs-number">26</span>]]])tensor([[ <span class="hljs-number">1</span>,  <span class="hljs-number">4</span>,  <span class="hljs-number">7</span>],        [<span class="hljs-number">10</span>, <span class="hljs-number">13</span>, <span class="hljs-number">16</span>],        [<span class="hljs-number">19</span>, <span class="hljs-number">22</span>, <span class="hljs-number">25</span>]])</code></pre><p>以上切片方式相对规则，对于不规则的切片提取，可以使用<code>torch.index_select</code>，<code>torch.masked_select</code>，<code>torch.take</code>，<code>torch.gather</code>。<br>以班级成绩册为例子，有4个班级，每个班级10个学生，每个学生7门科目成绩。可以用一个4×10×7的张量来表示。</p><pre class="highlight"><code class="python">minval=<span class="hljs-number">0</span>maxval=<span class="hljs-number">100</span>scores = torch.floor(minval + (maxval-minval)*torch.rand([<span class="hljs-number">4</span>,<span class="hljs-number">10</span>,<span class="hljs-number">7</span>])).<span class="hljs-built_in">int</span>()<span class="hljs-built_in">print</span>(scores)&gt;&gt;&gt;Output:tensor([[[<span class="hljs-number">55</span>, <span class="hljs-number">95</span>,  <span class="hljs-number">3</span>, <span class="hljs-number">18</span>, <span class="hljs-number">37</span>, <span class="hljs-number">30</span>, <span class="hljs-number">93</span>],         [<span class="hljs-number">17</span>, <span class="hljs-number">26</span>, <span class="hljs-number">15</span>,  <span class="hljs-number">3</span>, <span class="hljs-number">20</span>, <span class="hljs-number">92</span>, <span class="hljs-number">72</span>],         [<span class="hljs-number">74</span>, <span class="hljs-number">52</span>, <span class="hljs-number">24</span>, <span class="hljs-number">58</span>,  <span class="hljs-number">3</span>, <span class="hljs-number">13</span>, <span class="hljs-number">24</span>],         [<span class="hljs-number">81</span>, <span class="hljs-number">79</span>, <span class="hljs-number">27</span>, <span class="hljs-number">48</span>, <span class="hljs-number">81</span>, <span class="hljs-number">99</span>, <span class="hljs-number">69</span>],         [<span class="hljs-number">56</span>, <span class="hljs-number">83</span>, <span class="hljs-number">20</span>, <span class="hljs-number">59</span>, <span class="hljs-number">11</span>, <span class="hljs-number">15</span>, <span class="hljs-number">24</span>],         [<span class="hljs-number">72</span>, <span class="hljs-number">70</span>, <span class="hljs-number">20</span>, <span class="hljs-number">65</span>, <span class="hljs-number">77</span>, <span class="hljs-number">43</span>, <span class="hljs-number">51</span>],         [<span class="hljs-number">61</span>, <span class="hljs-number">81</span>, <span class="hljs-number">98</span>, <span class="hljs-number">11</span>, <span class="hljs-number">31</span>, <span class="hljs-number">69</span>, <span class="hljs-number">91</span>],         [<span class="hljs-number">93</span>, <span class="hljs-number">94</span>, <span class="hljs-number">59</span>,  <span class="hljs-number">6</span>, <span class="hljs-number">54</span>, <span class="hljs-number">18</span>,  <span class="hljs-number">3</span>],         [<span class="hljs-number">94</span>, <span class="hljs-number">88</span>,  <span class="hljs-number">0</span>, <span class="hljs-number">59</span>, <span class="hljs-number">41</span>, <span class="hljs-number">41</span>, <span class="hljs-number">27</span>],         [<span class="hljs-number">69</span>, <span class="hljs-number">20</span>, <span class="hljs-number">68</span>, <span class="hljs-number">75</span>, <span class="hljs-number">85</span>, <span class="hljs-number">68</span>,  <span class="hljs-number">0</span>]],        [[<span class="hljs-number">17</span>, <span class="hljs-number">74</span>, <span class="hljs-number">60</span>, <span class="hljs-number">10</span>, <span class="hljs-number">21</span>, <span class="hljs-number">97</span>, <span class="hljs-number">83</span>],         [<span class="hljs-number">28</span>, <span class="hljs-number">37</span>,  <span class="hljs-number">2</span>, <span class="hljs-number">49</span>, <span class="hljs-number">12</span>, <span class="hljs-number">11</span>, <span class="hljs-number">47</span>],         [<span class="hljs-number">57</span>, <span class="hljs-number">29</span>, <span class="hljs-number">79</span>, <span class="hljs-number">19</span>, <span class="hljs-number">95</span>, <span class="hljs-number">84</span>,  <span class="hljs-number">7</span>],         [<span class="hljs-number">37</span>, <span class="hljs-number">52</span>, <span class="hljs-number">57</span>, <span class="hljs-number">61</span>, <span class="hljs-number">69</span>, <span class="hljs-number">52</span>, <span class="hljs-number">25</span>],         [<span class="hljs-number">73</span>,  <span class="hljs-number">2</span>, <span class="hljs-number">20</span>, <span class="hljs-number">37</span>, <span class="hljs-number">25</span>, <span class="hljs-number">32</span>,  <span class="hljs-number">9</span>],         [<span class="hljs-number">39</span>, <span class="hljs-number">60</span>, <span class="hljs-number">17</span>, <span class="hljs-number">47</span>, <span class="hljs-number">85</span>, <span class="hljs-number">44</span>, <span class="hljs-number">51</span>],         [<span class="hljs-number">45</span>, <span class="hljs-number">60</span>, <span class="hljs-number">81</span>, <span class="hljs-number">97</span>, <span class="hljs-number">81</span>, <span class="hljs-number">97</span>, <span class="hljs-number">46</span>],         [ <span class="hljs-number">5</span>, <span class="hljs-number">26</span>, <span class="hljs-number">84</span>, <span class="hljs-number">49</span>, <span class="hljs-number">25</span>, <span class="hljs-number">11</span>,  <span class="hljs-number">3</span>],         [ <span class="hljs-number">7</span>, <span class="hljs-number">39</span>, <span class="hljs-number">77</span>, <span class="hljs-number">77</span>,  <span class="hljs-number">1</span>, <span class="hljs-number">81</span>, <span class="hljs-number">10</span>],         [<span class="hljs-number">39</span>, <span class="hljs-number">29</span>, <span class="hljs-number">40</span>, <span class="hljs-number">40</span>,  <span class="hljs-number">5</span>,  <span class="hljs-number">6</span>, <span class="hljs-number">42</span>]],        [[<span class="hljs-number">50</span>, <span class="hljs-number">27</span>, <span class="hljs-number">68</span>,  <span class="hljs-number">4</span>, <span class="hljs-number">46</span>, <span class="hljs-number">93</span>, <span class="hljs-number">29</span>],         [<span class="hljs-number">95</span>, <span class="hljs-number">68</span>,  <span class="hljs-number">4</span>, <span class="hljs-number">81</span>, <span class="hljs-number">44</span>, <span class="hljs-number">27</span>, <span class="hljs-number">89</span>],         [ <span class="hljs-number">9</span>, <span class="hljs-number">55</span>, <span class="hljs-number">39</span>, <span class="hljs-number">85</span>, <span class="hljs-number">63</span>, <span class="hljs-number">74</span>, <span class="hljs-number">67</span>],         [<span class="hljs-number">37</span>, <span class="hljs-number">39</span>,  <span class="hljs-number">8</span>, <span class="hljs-number">77</span>, <span class="hljs-number">89</span>, <span class="hljs-number">84</span>, <span class="hljs-number">14</span>],         [<span class="hljs-number">52</span>, <span class="hljs-number">14</span>, <span class="hljs-number">22</span>, <span class="hljs-number">20</span>, <span class="hljs-number">67</span>, <span class="hljs-number">20</span>, <span class="hljs-number">48</span>],         [<span class="hljs-number">52</span>, <span class="hljs-number">82</span>, <span class="hljs-number">12</span>, <span class="hljs-number">15</span>, <span class="hljs-number">20</span>, <span class="hljs-number">84</span>, <span class="hljs-number">32</span>],         [<span class="hljs-number">92</span>, <span class="hljs-number">68</span>, <span class="hljs-number">56</span>, <span class="hljs-number">49</span>, <span class="hljs-number">40</span>, <span class="hljs-number">56</span>, <span class="hljs-number">38</span>],         [<span class="hljs-number">49</span>, <span class="hljs-number">56</span>, <span class="hljs-number">10</span>, <span class="hljs-number">23</span>, <span class="hljs-number">90</span>,  <span class="hljs-number">9</span>, <span class="hljs-number">46</span>],         [<span class="hljs-number">99</span>, <span class="hljs-number">68</span>, <span class="hljs-number">51</span>,  <span class="hljs-number">6</span>, <span class="hljs-number">74</span>, <span class="hljs-number">14</span>, <span class="hljs-number">35</span>],         [<span class="hljs-number">33</span>, <span class="hljs-number">42</span>, <span class="hljs-number">50</span>, <span class="hljs-number">91</span>, <span class="hljs-number">56</span>, <span class="hljs-number">94</span>, <span class="hljs-number">80</span>]],        [[<span class="hljs-number">18</span>, <span class="hljs-number">72</span>, <span class="hljs-number">14</span>, <span class="hljs-number">28</span>, <span class="hljs-number">64</span>, <span class="hljs-number">66</span>, <span class="hljs-number">87</span>],         [<span class="hljs-number">33</span>, <span class="hljs-number">50</span>, <span class="hljs-number">75</span>,  <span class="hljs-number">1</span>, <span class="hljs-number">86</span>,  <span class="hljs-number">8</span>, <span class="hljs-number">50</span>],         [<span class="hljs-number">41</span>, <span class="hljs-number">23</span>, <span class="hljs-number">56</span>, <span class="hljs-number">91</span>, <span class="hljs-number">35</span>, <span class="hljs-number">20</span>, <span class="hljs-number">31</span>],         [ <span class="hljs-number">0</span>, <span class="hljs-number">72</span>, <span class="hljs-number">25</span>, <span class="hljs-number">16</span>, <span class="hljs-number">21</span>, <span class="hljs-number">78</span>, <span class="hljs-number">76</span>],         [<span class="hljs-number">88</span>, <span class="hljs-number">68</span>, <span class="hljs-number">33</span>, <span class="hljs-number">36</span>, <span class="hljs-number">64</span>, <span class="hljs-number">91</span>, <span class="hljs-number">63</span>],         [<span class="hljs-number">26</span>, <span class="hljs-number">26</span>,  <span class="hljs-number">2</span>, <span class="hljs-number">60</span>, <span class="hljs-number">21</span>,  <span class="hljs-number">5</span>, <span class="hljs-number">93</span>],         [<span class="hljs-number">17</span>, <span class="hljs-number">44</span>, <span class="hljs-number">64</span>, <span class="hljs-number">51</span>, <span class="hljs-number">16</span>,  <span class="hljs-number">9</span>, <span class="hljs-number">89</span>],         [<span class="hljs-number">58</span>, <span class="hljs-number">91</span>, <span class="hljs-number">33</span>, <span class="hljs-number">64</span>, <span class="hljs-number">38</span>, <span class="hljs-number">47</span>, <span class="hljs-number">19</span>],         [<span class="hljs-number">66</span>, <span class="hljs-number">65</span>, <span class="hljs-number">48</span>, <span class="hljs-number">38</span>, <span class="hljs-number">19</span>, <span class="hljs-number">84</span>, <span class="hljs-number">12</span>],         [<span class="hljs-number">70</span>, <span class="hljs-number">33</span>, <span class="hljs-number">25</span>, <span class="hljs-number">58</span>, <span class="hljs-number">24</span>, <span class="hljs-number">61</span>, <span class="hljs-number">59</span>]]], dtype=torch.int32)</code></pre><p>抽取每个班级第0个学生，第5个学生，第9个学生的全部成绩</p><pre class="highlight"><code class="python">torch.index_select(scores, dim = <span class="hljs-number">1</span>, index = torch.tensor([<span class="hljs-number">0</span>,<span class="hljs-number">5</span>,<span class="hljs-number">9</span>]))&gt;&gt;&gt;Output:tensor([[[<span class="hljs-number">55</span>, <span class="hljs-number">95</span>,  <span class="hljs-number">3</span>, <span class="hljs-number">18</span>, <span class="hljs-number">37</span>, <span class="hljs-number">30</span>, <span class="hljs-number">93</span>],         [<span class="hljs-number">72</span>, <span class="hljs-number">70</span>, <span class="hljs-number">20</span>, <span class="hljs-number">65</span>, <span class="hljs-number">77</span>, <span class="hljs-number">43</span>, <span class="hljs-number">51</span>],         [<span class="hljs-number">69</span>, <span class="hljs-number">20</span>, <span class="hljs-number">68</span>, <span class="hljs-number">75</span>, <span class="hljs-number">85</span>, <span class="hljs-number">68</span>,  <span class="hljs-number">0</span>]],        [[<span class="hljs-number">17</span>, <span class="hljs-number">74</span>, <span class="hljs-number">60</span>, <span class="hljs-number">10</span>, <span class="hljs-number">21</span>, <span class="hljs-number">97</span>, <span class="hljs-number">83</span>],         [<span class="hljs-number">39</span>, <span class="hljs-number">60</span>, <span class="hljs-number">17</span>, <span class="hljs-number">47</span>, <span class="hljs-number">85</span>, <span class="hljs-number">44</span>, <span class="hljs-number">51</span>],         [<span class="hljs-number">39</span>, <span class="hljs-number">29</span>, <span class="hljs-number">40</span>, <span class="hljs-number">40</span>,  <span class="hljs-number">5</span>,  <span class="hljs-number">6</span>, <span class="hljs-number">42</span>]],        [[<span class="hljs-number">50</span>, <span class="hljs-number">27</span>, <span class="hljs-number">68</span>,  <span class="hljs-number">4</span>, <span class="hljs-number">46</span>, <span class="hljs-number">93</span>, <span class="hljs-number">29</span>],         [<span class="hljs-number">52</span>, <span class="hljs-number">82</span>, <span class="hljs-number">12</span>, <span class="hljs-number">15</span>, <span class="hljs-number">20</span>, <span class="hljs-number">84</span>, <span class="hljs-number">32</span>],         [<span class="hljs-number">33</span>, <span class="hljs-number">42</span>, <span class="hljs-number">50</span>, <span class="hljs-number">91</span>, <span class="hljs-number">56</span>, <span class="hljs-number">94</span>, <span class="hljs-number">80</span>]],        [[<span class="hljs-number">18</span>, <span class="hljs-number">72</span>, <span class="hljs-number">14</span>, <span class="hljs-number">28</span>, <span class="hljs-number">64</span>, <span class="hljs-number">66</span>, <span class="hljs-number">87</span>],         [<span class="hljs-number">26</span>, <span class="hljs-number">26</span>,  <span class="hljs-number">2</span>, <span class="hljs-number">60</span>, <span class="hljs-number">21</span>,  <span class="hljs-number">5</span>, <span class="hljs-number">93</span>],         [<span class="hljs-number">70</span>, <span class="hljs-number">33</span>, <span class="hljs-number">25</span>, <span class="hljs-number">58</span>, <span class="hljs-number">24</span>, <span class="hljs-number">61</span>, <span class="hljs-number">59</span>]]], dtype=torch.int32)</code></pre><p>抽取每个班级第0个学生，第5个学生，第9个学生的第1门课程，第3门课程，第6门课程成绩</p><pre class="highlight"><code class="python">q = torch.index_select(    torch.index_select(scores,dim = <span class="hljs-number">1</span>,index = torch.tensor([<span class="hljs-number">0</span>,<span class="hljs-number">5</span>,<span class="hljs-number">9</span>])),    dim=<span class="hljs-number">2</span>, index = torch.tensor([<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">6</span>]))</code></pre><p>抽取第0个班级第0个学生的第0门课程，第2个班级的第4个学生的第1门课程，第3个班级的第9个学生第6门课程成绩。</p><pre class="highlight"><code class="python"><span class="hljs-comment"># take将输入看成一维数组，输出和index同形状</span>s = torch.take(scores,torch.tensor([<span class="hljs-number">0</span>*<span class="hljs-number">10</span>*<span class="hljs-number">7</span>+<span class="hljs-number">0</span>,<span class="hljs-number">2</span>*<span class="hljs-number">10</span>*<span class="hljs-number">7</span>+<span class="hljs-number">4</span>*<span class="hljs-number">7</span>+<span class="hljs-number">1</span>,<span class="hljs-number">3</span>*<span class="hljs-number">10</span>*<span class="hljs-number">7</span>+<span class="hljs-number">9</span>*<span class="hljs-number">7</span>+<span class="hljs-number">6</span>]))<span class="hljs-built_in">print</span>(s)&gt;&gt;&gt;Output:tensor([<span class="hljs-number">55</span>, <span class="hljs-number">14</span>, <span class="hljs-number">59</span>], dtype=torch.int32)</code></pre><p>抽取分数大于等于80分的分数（布尔索引）</p><pre class="highlight"><code class="python">g = torch.masked_select(scores, scores&gt;=<span class="hljs-number">80</span>)<span class="hljs-built_in">print</span>(g) <span class="hljs-comment"># 结果是1维张量</span>&gt;&gt;&gt;Output:tensor([<span class="hljs-number">95</span>, <span class="hljs-number">93</span>, <span class="hljs-number">92</span>, <span class="hljs-number">81</span>, <span class="hljs-number">81</span>, <span class="hljs-number">99</span>, <span class="hljs-number">83</span>, <span class="hljs-number">81</span>, <span class="hljs-number">98</span>, <span class="hljs-number">91</span>, <span class="hljs-number">93</span>, <span class="hljs-number">94</span>, <span class="hljs-number">94</span>, <span class="hljs-number">88</span>, <span class="hljs-number">85</span>, <span class="hljs-number">97</span>, <span class="hljs-number">83</span>, <span class="hljs-number">95</span>,        <span class="hljs-number">84</span>, <span class="hljs-number">85</span>, <span class="hljs-number">81</span>, <span class="hljs-number">97</span>, <span class="hljs-number">81</span>, <span class="hljs-number">97</span>, <span class="hljs-number">84</span>, <span class="hljs-number">81</span>, <span class="hljs-number">93</span>, <span class="hljs-number">95</span>, <span class="hljs-number">81</span>, <span class="hljs-number">89</span>, <span class="hljs-number">85</span>, <span class="hljs-number">89</span>, <span class="hljs-number">84</span>, <span class="hljs-number">82</span>, <span class="hljs-number">84</span>, <span class="hljs-number">92</span>,        <span class="hljs-number">90</span>, <span class="hljs-number">99</span>, <span class="hljs-number">91</span>, <span class="hljs-number">94</span>, <span class="hljs-number">80</span>, <span class="hljs-number">87</span>, <span class="hljs-number">86</span>, <span class="hljs-number">91</span>, <span class="hljs-number">88</span>, <span class="hljs-number">91</span>, <span class="hljs-number">93</span>, <span class="hljs-number">89</span>, <span class="hljs-number">91</span>, <span class="hljs-number">84</span>],       dtype=torch.int32)</code></pre><p>以上这些方法仅能提取张量的部分元素值，但不能更改张量的部分元素值得到新的张量。<br>如果要通过修改张量的部分元素值得到新的张量，可以使用<code>torch.where</code>，<code>torch.index_fill</code>和 <code>torch.masked_fill</code>。<br><code>torch.where</code>可以理解为if的张量版本。<br><code>torch.index_fill</code>的选取元素逻辑和<code>torch.index_select</code>相同。<br><code>torch.masked_fill</code>的选取元素逻辑和<code>torch.masked_select</code>相同。</p><pre class="highlight"><code class="python"><span class="hljs-comment">#如果分数大于60分，赋值成1，否则赋值成0</span>ifpass = torch.where(scores&gt;<span class="hljs-number">60</span>,torch.tensor(<span class="hljs-number">1</span>),torch.tensor(<span class="hljs-number">0</span>))<span class="hljs-comment"># 将每个班级第0个学生，第5个学生，第9个学生的全部成绩赋值成满分</span>full = torch.index_fill(scores,dim = <span class="hljs-number">1</span>,index = torch.tensor([<span class="hljs-number">0</span>,<span class="hljs-number">5</span>,<span class="hljs-number">9</span>]),value = <span class="hljs-number">100</span>)<span class="hljs-comment">#将分数小于60分的分数赋值成60分</span>b = torch.masked_fill(scores,scores&lt;<span class="hljs-number">60</span>,<span class="hljs-number">60</span>)</code></pre><h4 id="维度变换"><a class="markdownIt-Anchor" href="#维度变换"></a> 维度变换</h4><p>维度变换相关函数主要有<code>torch.reshape</code>(或者调用张量的<code>view()</code>方法), <code>torch.squeeze()</code>, <code>torch.unsqueeze()</code>, <code>torch.transpose()</code>。</p><ul><li>torch.reshape 可以改变张量的形状。</li><li>torch.squeeze 可以减少维度。</li><li>torch.unsqueeze 可以增加维度。</li><li>torch.transpose 可以交换维度。</li></ul><p>�张量的view方法有时候会调用失败，可以使用reshape方法。</p><pre class="highlight"><code class="python">minval,maxval = <span class="hljs-number">0</span>,<span class="hljs-number">255</span>a = (minval + (maxval-minval)*torch.rand([<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>,<span class="hljs-number">2</span>])).<span class="hljs-built_in">int</span>()<span class="hljs-built_in">print</span>(a.shape)<span class="hljs-built_in">print</span>(a)<span class="hljs-comment"># 改成（3,6）形状的张量</span>b = a.view([<span class="hljs-number">3</span>,<span class="hljs-number">6</span>]) <span class="hljs-comment"># torch.reshape(a,[3,6])</span><span class="hljs-built_in">print</span>(b.shape)<span class="hljs-built_in">print</span>(b)<span class="hljs-comment"># 改回成 [1,3,3,2] 形状的张量</span>c = torch.reshape(b,[<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">3</span>,<span class="hljs-number">2</span>]) <span class="hljs-comment"># b.view([1,3,3,2]) </span>&gt;&gt;&gt;Output:torch.Size([<span class="hljs-number">1</span>, <span class="hljs-number">3</span>, <span class="hljs-number">3</span>, <span class="hljs-number">2</span>])tensor([[[[<span class="hljs-number">126</span>, <span class="hljs-number">195</span>],          [ <span class="hljs-number">22</span>,  <span class="hljs-number">33</span>],          [ <span class="hljs-number">78</span>, <span class="hljs-number">161</span>]],         [[<span class="hljs-number">124</span>, <span class="hljs-number">228</span>],          [<span class="hljs-number">116</span>, <span class="hljs-number">161</span>],          [ <span class="hljs-number">88</span>, <span class="hljs-number">102</span>]],         [[  <span class="hljs-number">5</span>,  <span class="hljs-number">43</span>],          [ <span class="hljs-number">74</span>, <span class="hljs-number">132</span>],          [<span class="hljs-number">177</span>, <span class="hljs-number">204</span>]]]], dtype=torch.int32)torch.Size([<span class="hljs-number">3</span>, <span class="hljs-number">6</span>])tensor([[<span class="hljs-number">126</span>, <span class="hljs-number">195</span>,  <span class="hljs-number">22</span>,  <span class="hljs-number">33</span>,  <span class="hljs-number">78</span>, <span class="hljs-number">161</span>],        [<span class="hljs-number">124</span>, <span class="hljs-number">228</span>, <span class="hljs-number">116</span>, <span class="hljs-number">161</span>,  <span class="hljs-number">88</span>, <span class="hljs-number">102</span>],        [  <span class="hljs-number">5</span>,  <span class="hljs-number">43</span>,  <span class="hljs-number">74</span>, <span class="hljs-number">132</span>, <span class="hljs-number">177</span>, <span class="hljs-number">204</span>]], dtype=torch.int32)</code></pre><p>如果张量在某个维度上的维度是1，利用<code>torch.squeeze()</code>可以消除这个维度。<code>torch.unsqueeze()</code>的作用和<code>torch.squeeze()</code>的作用相反。</p><pre class="highlight"><code class="python">a = torch.tensor([[<span class="hljs-number">1.0</span>, <span class="hljs-number">2.0</span>]])s = torch.squeeze(a)<span class="hljs-built_in">print</span>(a)<span class="hljs-built_in">print</span>(a.shape)<span class="hljs-built_in">print</span>(s)<span class="hljs-built_in">print</span>(s.shape)&gt;&gt;&gt;Output:tensor([[<span class="hljs-number">1.</span>, <span class="hljs-number">2.</span>]])torch.Size([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>])tensor([<span class="hljs-number">1.</span>, <span class="hljs-number">2.</span>])torch.Size([<span class="hljs-number">2</span>])</code></pre><p>在张量的第0维插入一个维度</p><pre class="highlight"><code class="python">d = torch.unsqueeze(s,axis=<span class="hljs-number">0</span>)  <span class="hljs-built_in">print</span>(d)<span class="hljs-built_in">print</span>(d.shape)&gt;&gt;&gt;Output:tensor([[<span class="hljs-number">1.</span>, <span class="hljs-number">2.</span>]])torch.Size([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>])</code></pre><p><code>torch.transpose()</code>可以交换张量的维度，<code>torch.transpose()</code>常用于图片存储格式的变换上。<br>如果是二维的矩阵，通常会调用矩阵的转置方法 <code>matrix.t()</code>，等价于 <code>torch.transpose(matrix, 0, 1)</code>。</p><pre class="highlight"><code class="python">minval=<span class="hljs-number">0</span>maxval=<span class="hljs-number">255</span><span class="hljs-comment"># Batch,Height,Width,Channel</span>data = torch.floor(minval + (maxval-minval)*torch.rand([<span class="hljs-number">100</span>,<span class="hljs-number">256</span>,<span class="hljs-number">256</span>,<span class="hljs-number">4</span>])).<span class="hljs-built_in">int</span>()<span class="hljs-built_in">print</span>(data.shape)<span class="hljs-comment"># 转换成 Pytorch默认的图片格式 Batch,Channel,Height,Width </span><span class="hljs-comment"># 需要交换两次</span>data_t = torch.transpose(torch.transpose(data,<span class="hljs-number">1</span>,<span class="hljs-number">2</span>),<span class="hljs-number">1</span>,<span class="hljs-number">3</span>)<span class="hljs-built_in">print</span>(data_t.shape)matrix = torch.tensor([[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>],[<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>]])<span class="hljs-built_in">print</span>(matrix)<span class="hljs-built_in">print</span>(matrix.t()) <span class="hljs-comment"># 等价于torch.transpose(matrix,0,1)</span>&gt;&gt;&gt;Output:torch.Size([<span class="hljs-number">100</span>, <span class="hljs-number">256</span>, <span class="hljs-number">256</span>, <span class="hljs-number">4</span>])torch.Size([<span class="hljs-number">100</span>, <span class="hljs-number">4</span>, <span class="hljs-number">256</span>, <span class="hljs-number">256</span>])tensor([[<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>],        [<span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>]])tensor([[<span class="hljs-number">1</span>, <span class="hljs-number">4</span>],        [<span class="hljs-number">2</span>, <span class="hljs-number">5</span>],        [<span class="hljs-number">3</span>, <span class="hljs-number">6</span>]])</code></pre><h4 id="合并分割"><a class="markdownIt-Anchor" href="#合并分割"></a> 合并分割</h4><p>可以用<code>torch.cat()</code>方法和<code>torch.stack()</code>方法将多个张量合并，可以用<code>torch.split()</code>方法把一个张量分割成多个张量。<br><code>torch.cat()</code>和<code>torch.stack()</code>有略微的区别：</p><ul><li>torch.cat是连接，不会增加维度</li><li>torch.stack是堆叠，会增加维度。</li></ul><p><strong>torch中dim和axis参数名可以混用�</strong>。</p><pre class="highlight"><code class="python">a = torch.tensor([[<span class="hljs-number">1.0</span>,<span class="hljs-number">2.0</span>],[<span class="hljs-number">3.0</span>,<span class="hljs-number">4.0</span>]])b = torch.tensor([[<span class="hljs-number">5.0</span>,<span class="hljs-number">6.0</span>],[<span class="hljs-number">7.0</span>,<span class="hljs-number">8.0</span>]])c = torch.tensor([[<span class="hljs-number">9.0</span>,<span class="hljs-number">10.0</span>],[<span class="hljs-number">11.0</span>,<span class="hljs-number">12.0</span>]])abc_cat = torch.cat([a,b,c], dim = <span class="hljs-number">0</span>)<span class="hljs-built_in">print</span>(abc_cat.shape)<span class="hljs-built_in">print</span>(abc_cat)<span class="hljs-comment"># torch中dim和axis参数名可以混用</span>abc_stack = torch.stack([a,b,c], axis = <span class="hljs-number">0</span>) <span class="hljs-built_in">print</span>(abc_stack.shape)<span class="hljs-built_in">print</span>(abc_stack)&gt;&gt;&gt;Output:torch.Size([<span class="hljs-number">6</span>, <span class="hljs-number">2</span>])tensor([[ <span class="hljs-number">1.</span>,  <span class="hljs-number">2.</span>],        [ <span class="hljs-number">3.</span>,  <span class="hljs-number">4.</span>],        [ <span class="hljs-number">5.</span>,  <span class="hljs-number">6.</span>],        [ <span class="hljs-number">7.</span>,  <span class="hljs-number">8.</span>],        [ <span class="hljs-number">9.</span>, <span class="hljs-number">10.</span>],        [<span class="hljs-number">11.</span>, <span class="hljs-number">12.</span>]])torch.Size([<span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>])tensor([[[ <span class="hljs-number">1.</span>,  <span class="hljs-number">2.</span>],         [ <span class="hljs-number">3.</span>,  <span class="hljs-number">4.</span>]],        [[ <span class="hljs-number">5.</span>,  <span class="hljs-number">6.</span>],         [ <span class="hljs-number">7.</span>,  <span class="hljs-number">8.</span>]],        [[ <span class="hljs-number">9.</span>, <span class="hljs-number">10.</span>],         [<span class="hljs-number">11.</span>, <span class="hljs-number">12.</span>]]])</code></pre><pre class="highlight"><code class="python">cat = torch.cat([a,b,c],axis = <span class="hljs-number">1</span>)stack = torch.stack([a,b,c],axis = <span class="hljs-number">1</span>)&gt;&gt;&gt;Output:tensor([[ <span class="hljs-number">1.</span>,  <span class="hljs-number">2.</span>,  <span class="hljs-number">5.</span>,  <span class="hljs-number">6.</span>,  <span class="hljs-number">9.</span>, <span class="hljs-number">10.</span>],        [ <span class="hljs-number">3.</span>,  <span class="hljs-number">4.</span>,  <span class="hljs-number">7.</span>,  <span class="hljs-number">8.</span>, <span class="hljs-number">11.</span>, <span class="hljs-number">12.</span>]])tensor([[[ <span class="hljs-number">1.</span>,  <span class="hljs-number">2.</span>],         [ <span class="hljs-number">5.</span>,  <span class="hljs-number">6.</span>],         [ <span class="hljs-number">9.</span>, <span class="hljs-number">10.</span>]],        [[ <span class="hljs-number">3.</span>,  <span class="hljs-number">4.</span>],         [ <span class="hljs-number">7.</span>,  <span class="hljs-number">8.</span>],         [<span class="hljs-number">11.</span>, <span class="hljs-number">12.</span>]]])</code></pre><p><code>torch.split()</code>是<code>torch.cat()</code>的逆运算，可以指定分割份数平均分割，也可以通过指定每份的记录数量进行分割。�</p><pre class="highlight"><code class="python"><span class="hljs-built_in">print</span>(abc_cat)a,b,c = torch.split(abc_cat,split_size_or_sections = <span class="hljs-number">2</span>,dim = <span class="hljs-number">0</span>) <span class="hljs-comment">#每份2个进行分割</span><span class="hljs-built_in">print</span>(a)<span class="hljs-built_in">print</span>(b)<span class="hljs-built_in">print</span>(c)<span class="hljs-comment"># 每份分别为[4,1,1]</span>p,q,r = torch.split(abc_cat,split_size_or_sections =[<span class="hljs-number">4</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],dim = <span class="hljs-number">0</span>) <span class="hljs-built_in">print</span>(p)<span class="hljs-built_in">print</span>(q)<span class="hljs-built_in">print</span>(r)&gt;&gt;&gt;Output:tensor([[ <span class="hljs-number">1.</span>,  <span class="hljs-number">2.</span>],        [ <span class="hljs-number">3.</span>,  <span class="hljs-number">4.</span>],        [ <span class="hljs-number">5.</span>,  <span class="hljs-number">6.</span>],        [ <span class="hljs-number">7.</span>,  <span class="hljs-number">8.</span>],        [ <span class="hljs-number">9.</span>, <span class="hljs-number">10.</span>],        [<span class="hljs-number">11.</span>, <span class="hljs-number">12.</span>]])tensor([[<span class="hljs-number">1.</span>, <span class="hljs-number">2.</span>],        [<span class="hljs-number">3.</span>, <span class="hljs-number">4.</span>]])tensor([[<span class="hljs-number">5.</span>, <span class="hljs-number">6.</span>],        [<span class="hljs-number">7.</span>, <span class="hljs-number">8.</span>]])tensor([[ <span class="hljs-number">9.</span>, <span class="hljs-number">10.</span>],        [<span class="hljs-number">11.</span>, <span class="hljs-number">12.</span>]])tensor([[<span class="hljs-number">1.</span>, <span class="hljs-number">2.</span>],        [<span class="hljs-number">3.</span>, <span class="hljs-number">4.</span>],        [<span class="hljs-number">5.</span>, <span class="hljs-number">6.</span>],        [<span class="hljs-number">7.</span>, <span class="hljs-number">8.</span>]])tensor([[ <span class="hljs-number">9.</span>, <span class="hljs-number">10.</span>]])tensor([[<span class="hljs-number">11.</span>, <span class="hljs-number">12.</span>]])</code></pre><h3 id="张量的数学运算"><a class="markdownIt-Anchor" href="#张量的数学运算"></a> 张量的数学运算</h3><p>张量的数学运算符可以分为标量运算符、向量运算符、以及矩阵运算符。</p><h4 id="标量运算"><a class="markdownIt-Anchor" href="#标量运算"></a> 标量运算</h4><p>加减乘除乘方，以及三角函数，指数，对数等常见函数，逻辑比较运算符等都是标量运算符。<br><strong>标量运算符的特点是对张量实施逐元素运算</strong>。有些标量运算符对常用的数学运算符进行了重载。并且支持类似numpy的广播特性。</p><pre class="highlight"><code class="python">a = torch.tensor([[<span class="hljs-number">1.0</span>,<span class="hljs-number">2</span>],[-<span class="hljs-number">3</span>,<span class="hljs-number">4.0</span>]])b = torch.tensor([[<span class="hljs-number">5.0</span>,<span class="hljs-number">6</span>],[<span class="hljs-number">7.0</span>,<span class="hljs-number">8.0</span>]])<span class="hljs-comment"># 逐元素运算</span>a+b  <span class="hljs-comment">#运算符重载</span>a-b a*b a/ba**<span class="hljs-number">2</span>a**<span class="hljs-number">0.5</span>a%<span class="hljs-number">3</span>a//<span class="hljs-number">3</span>torch.sqrt(a)<span class="hljs-built_in">print</span>(a&gt;=<span class="hljs-number">2</span>) <span class="hljs-comment"># torch.ge(a,2)  #ge: greater_equal缩写</span><span class="hljs-built_in">print</span>((a&gt;=<span class="hljs-number">2</span>)&amp;(a&lt;=<span class="hljs-number">3</span>))<span class="hljs-built_in">print</span>((a&gt;=<span class="hljs-number">2</span>)|(a&lt;=<span class="hljs-number">3</span>))<span class="hljs-built_in">print</span>(a==<span class="hljs-number">5</span>) <span class="hljs-comment"># torch.eq(a,5)  # eq: equal缩写</span>&gt;&gt;&gt;Output:tensor([[<span class="hljs-literal">False</span>,  <span class="hljs-literal">True</span>],        [<span class="hljs-literal">False</span>,  <span class="hljs-literal">True</span>]])tensor([[<span class="hljs-literal">False</span>,  <span class="hljs-literal">True</span>],        [<span class="hljs-literal">False</span>, <span class="hljs-literal">False</span>]])tensor([[<span class="hljs-literal">True</span>, <span class="hljs-literal">True</span>],        [<span class="hljs-literal">True</span>, <span class="hljs-literal">True</span>]])tensor([[<span class="hljs-literal">False</span>, <span class="hljs-literal">False</span>],        [<span class="hljs-literal">False</span>, <span class="hljs-literal">False</span>]])</code></pre><pre class="highlight"><code class="python">a = torch.tensor([<span class="hljs-number">1.0</span>,<span class="hljs-number">8.0</span>])b = torch.tensor([<span class="hljs-number">5.0</span>,<span class="hljs-number">6.0</span>])c = torch.tensor([<span class="hljs-number">6.0</span>,<span class="hljs-number">7.0</span>])d = a+b+c<span class="hljs-built_in">print</span>(d)<span class="hljs-built_in">print</span>(torch.<span class="hljs-built_in">max</span>(a,b))<span class="hljs-built_in">print</span>(torch.<span class="hljs-built_in">min</span>(a,b))&gt;&gt;&gt;Output:tensor([<span class="hljs-number">12.</span>, <span class="hljs-number">21.</span>])tensor([<span class="hljs-number">5.</span>, <span class="hljs-number">8.</span>])tensor([<span class="hljs-number">1.</span>, <span class="hljs-number">6.</span>])</code></pre><p><code>torch.round()</code>：保留整数部分，四舍五入。<br><code>torch.floor()</code>：保留整数部分，向下取整。<br><code>torch.ceil()</code>：保留整数部分，向上取整。<br><code>torch.trunc()</code>：保留整数部分，向0归整。<br><code>torch.fmod()</code>：作除法取余数。<br><code>torch.remainder()</code>：作除法取剩余的部分，结果恒正。</p><pre class="highlight"><code class="python">x = torch.tensor([<span class="hljs-number">2.6</span>,-<span class="hljs-number">2.7</span>])<span class="hljs-built_in">print</span>(torch.<span class="hljs-built_in">round</span>(x)) <span class="hljs-built_in">print</span>(torch.floor(x)) <span class="hljs-built_in">print</span>(torch.ceil(x))  <span class="hljs-built_in">print</span>(torch.trunc(x)) <span class="hljs-built_in">print</span>(torch.fmod(x,<span class="hljs-number">2</span>)) <span class="hljs-built_in">print</span>(torch.remainder(x,<span class="hljs-number">2</span>)) &gt;&gt;&gt;Output:tensor([ <span class="hljs-number">3.</span>, -<span class="hljs-number">3.</span>])tensor([ <span class="hljs-number">2.</span>, -<span class="hljs-number">3.</span>])tensor([ <span class="hljs-number">3.</span>, -<span class="hljs-number">2.</span>])tensor([ <span class="hljs-number">2.</span>, -<span class="hljs-number">2.</span>])tensor([ <span class="hljs-number">0.6000</span>, -<span class="hljs-number">0.7000</span>])tensor([<span class="hljs-number">0.6000</span>, <span class="hljs-number">1.3000</span>])</code></pre><pre class="highlight"><code class="python">x = torch.tensor([<span class="hljs-number">0.9</span>,-<span class="hljs-number">0.8</span>,<span class="hljs-number">100.0</span>,-<span class="hljs-number">20.0</span>,<span class="hljs-number">0.7</span>])y = torch.clamp(x,<span class="hljs-built_in">min</span>=-<span class="hljs-number">1</span>,<span class="hljs-built_in">max</span> = <span class="hljs-number">1</span>)z = torch.clamp(x,<span class="hljs-built_in">max</span> = <span class="hljs-number">1</span>)<span class="hljs-built_in">print</span>(y)<span class="hljs-built_in">print</span>(z)&gt;&gt;&gt;Output:tensor([ <span class="hljs-number">0.9000</span>, -<span class="hljs-number">0.8000</span>,  <span class="hljs-number">1.0000</span>, -<span class="hljs-number">1.0000</span>,  <span class="hljs-number">0.7000</span>])tensor([  <span class="hljs-number">0.9000</span>,  -<span class="hljs-number">0.8000</span>,   <span class="hljs-number">1.0000</span>, -<span class="hljs-number">20.0000</span>,   <span class="hljs-number">0.7000</span>])</code></pre><h4 id="向量运算"><a class="markdownIt-Anchor" href="#向量运算"></a> 向量运算</h4><p>向量运算符只在一个特定轴上运算，将一个向量映射到一个标量或者另外一个向量。�</p><pre class="highlight"><code class="python">a = torch.arange(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>).<span class="hljs-built_in">float</span>()<span class="hljs-built_in">print</span>(torch.<span class="hljs-built_in">sum</span>(a))<span class="hljs-built_in">print</span>(torch.mean(a))<span class="hljs-built_in">print</span>(torch.<span class="hljs-built_in">max</span>(a))<span class="hljs-built_in">print</span>(torch.<span class="hljs-built_in">min</span>(a))<span class="hljs-built_in">print</span>(torch.prod(a)) <span class="hljs-comment">#累乘</span><span class="hljs-built_in">print</span>(torch.std(a))  <span class="hljs-comment">#标准差</span><span class="hljs-built_in">print</span>(torch.var(a))  <span class="hljs-comment">#方差</span><span class="hljs-built_in">print</span>(torch.median(a)) <span class="hljs-comment">#中位数</span>&gt;&gt;&gt;Output:tensor(<span class="hljs-number">45.</span>)tensor(<span class="hljs-number">5.</span>)tensor(<span class="hljs-number">9.</span>)tensor(<span class="hljs-number">1.</span>)tensor(<span class="hljs-number">362880.</span>)tensor(<span class="hljs-number">2.7386</span>)tensor(<span class="hljs-number">7.5000</span>)tensor(<span class="hljs-number">5.</span>)</code></pre><pre class="highlight"><code class="python">b = a.view(<span class="hljs-number">3</span>,<span class="hljs-number">3</span>)<span class="hljs-built_in">print</span>(b)<span class="hljs-built_in">print</span>(torch.<span class="hljs-built_in">max</span>(b,dim = <span class="hljs-number">0</span>))<span class="hljs-built_in">print</span>(torch.<span class="hljs-built_in">max</span>(b,dim = <span class="hljs-number">1</span>))&gt;&gt;&gt;Output:tensor([[<span class="hljs-number">1.</span>, <span class="hljs-number">2.</span>, <span class="hljs-number">3.</span>],        [<span class="hljs-number">4.</span>, <span class="hljs-number">5.</span>, <span class="hljs-number">6.</span>],        [<span class="hljs-number">7.</span>, <span class="hljs-number">8.</span>, <span class="hljs-number">9.</span>]])torch.return_types.<span class="hljs-built_in">max</span>(values=tensor([<span class="hljs-number">7.</span>, <span class="hljs-number">8.</span>, <span class="hljs-number">9.</span>]),indices=tensor([<span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>]))torch.return_types.<span class="hljs-built_in">max</span>(values=tensor([<span class="hljs-number">3.</span>, <span class="hljs-number">6.</span>, <span class="hljs-number">9.</span>]),indices=tensor([<span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>]))</code></pre><pre class="highlight"><code class="python">a = torch.arange(<span class="hljs-number">1</span>,<span class="hljs-number">10</span>)<span class="hljs-built_in">print</span>(torch.cumsum(a,<span class="hljs-number">0</span>))<span class="hljs-built_in">print</span>(torch.cumprod(a,<span class="hljs-number">0</span>))<span class="hljs-built_in">print</span>(torch.cummax(a,<span class="hljs-number">0</span>).values)<span class="hljs-built_in">print</span>(torch.cummax(a,<span class="hljs-number">0</span>).indices)<span class="hljs-built_in">print</span>(torch.cummin(a,<span class="hljs-number">0</span>))&gt;&gt;&gt;Output:tensor([ <span class="hljs-number">1</span>,  <span class="hljs-number">3</span>,  <span class="hljs-number">6</span>, <span class="hljs-number">10</span>, <span class="hljs-number">15</span>, <span class="hljs-number">21</span>, <span class="hljs-number">28</span>, <span class="hljs-number">36</span>, <span class="hljs-number">45</span>])tensor([     <span class="hljs-number">1</span>,      <span class="hljs-number">2</span>,      <span class="hljs-number">6</span>,     <span class="hljs-number">24</span>,    <span class="hljs-number">120</span>,    <span class="hljs-number">720</span>,   <span class="hljs-number">5040</span>,  <span class="hljs-number">40320</span>, <span class="hljs-number">362880</span>])tensor([<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>])tensor([<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>])torch.return_types.cummin(values=tensor([<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>]),indices=tensor([<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>]))</code></pre><p><code>torch.sort()</code>和<code>torch.topk()</code>可以对张量排序。利用<code>torch.topk()</code>可以在Pytorch中实现KNN算法。</p><pre class="highlight"><code class="python">a = torch.tensor([[<span class="hljs-number">9</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">3</span>,<span class="hljs-number">2</span>],[<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">4</span>]]).<span class="hljs-built_in">float</span>()<span class="hljs-built_in">print</span>(torch.topk(a,<span class="hljs-number">2</span>,dim = <span class="hljs-number">0</span>),<span class="hljs-string">&quot;\n&quot;</span>)<span class="hljs-built_in">print</span>(torch.topk(a,<span class="hljs-number">2</span>,dim = <span class="hljs-number">1</span>),<span class="hljs-string">&quot;\n&quot;</span>)<span class="hljs-built_in">print</span>(torch.sort(a,dim = <span class="hljs-number">1</span>),<span class="hljs-string">&quot;\n&quot;</span>)&gt;&gt;&gt;Output:torch.return_types.topk(values=tensor([[<span class="hljs-number">9.</span>, <span class="hljs-number">7.</span>, <span class="hljs-number">8.</span>],        [<span class="hljs-number">5.</span>, <span class="hljs-number">6.</span>, <span class="hljs-number">4.</span>]]),indices=tensor([[<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>],        [<span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>]])) torch.return_types.topk(values=tensor([[<span class="hljs-number">9.</span>, <span class="hljs-number">8.</span>],        [<span class="hljs-number">3.</span>, <span class="hljs-number">2.</span>],        [<span class="hljs-number">6.</span>, <span class="hljs-number">5.</span>]]),indices=tensor([[<span class="hljs-number">0</span>, <span class="hljs-number">2</span>],        [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>],        [<span class="hljs-number">1</span>, <span class="hljs-number">0</span>]])) torch.return_types.sort(values=tensor([[<span class="hljs-number">7.</span>, <span class="hljs-number">8.</span>, <span class="hljs-number">9.</span>],        [<span class="hljs-number">1.</span>, <span class="hljs-number">2.</span>, <span class="hljs-number">3.</span>],        [<span class="hljs-number">4.</span>, <span class="hljs-number">5.</span>, <span class="hljs-number">6.</span>]]),indices=tensor([[<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">0</span>],        [<span class="hljs-number">0</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>],        [<span class="hljs-number">2</span>, <span class="hljs-number">0</span>, <span class="hljs-number">1</span>]])) </code></pre><h4 id="矩阵运算"><a class="markdownIt-Anchor" href="#矩阵运算"></a> 矩阵运算</h4><p>矩阵必须是二维的。<br>矩阵运算包括：矩阵乘法，矩阵转置，矩阵逆，矩阵求迹，矩阵范数，矩阵行列式，矩阵求特征值，矩阵分解等运算。</p><pre class="highlight"><code class="python">a = torch.tensor([[<span class="hljs-number">1</span>,<span class="hljs-number">2</span>],[<span class="hljs-number">3</span>,<span class="hljs-number">4</span>]])b = torch.tensor([[<span class="hljs-number">2</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">0</span>,<span class="hljs-number">2</span>]])<span class="hljs-comment"># 下列均等价</span>torch.matmul(a,b)torch.mm(a,b)<span class="hljs-built_in">print</span>(a@b)&gt;&gt;&gt;Output:tensor([[<span class="hljs-number">2</span>, <span class="hljs-number">4</span>],        [<span class="hljs-number">6</span>, <span class="hljs-number">8</span>]])</code></pre><pre class="highlight"><code class="python">a = torch.tensor([[<span class="hljs-number">1.0</span>,<span class="hljs-number">2</span>],[<span class="hljs-number">3</span>,<span class="hljs-number">4</span>]])<span class="hljs-built_in">print</span>(a.t())&gt;&gt;&gt;Output:tensor([[<span class="hljs-number">1.</span>, <span class="hljs-number">3.</span>],        [<span class="hljs-number">2.</span>, <span class="hljs-number">4.</span>]])</code></pre><p>矩阵求逆必须是浮点数类型。</p><pre class="highlight"><code class="python"><span class="hljs-comment"># 必须为浮点类型</span>a = torch.tensor([[<span class="hljs-number">1.0</span>,<span class="hljs-number">2</span>],[<span class="hljs-number">3</span>,<span class="hljs-number">4</span>]])<span class="hljs-built_in">print</span>(torch.inverse(a))&gt;&gt;&gt;Output:tensor([[-<span class="hljs-number">2.0000</span>,  <span class="hljs-number">1.0000</span>],        [ <span class="hljs-number">1.5000</span>, -<span class="hljs-number">0.5000</span>]])</code></pre><pre class="highlight"><code class="python">a = torch.tensor([[<span class="hljs-number">1.0</span>,<span class="hljs-number">2</span>],[<span class="hljs-number">3</span>,<span class="hljs-number">4</span>]])<span class="hljs-built_in">print</span>(torch.trace(a))&gt;&gt;&gt;Output:tensor(<span class="hljs-number">5.</span>)</code></pre><pre class="highlight"><code class="python">a = torch.tensor([[<span class="hljs-number">1.0</span>,<span class="hljs-number">2</span>],[<span class="hljs-number">3</span>,<span class="hljs-number">4</span>]])<span class="hljs-built_in">print</span>(torch.norm(a))&gt;&gt;&gt;Output:tensor(<span class="hljs-number">5.4772</span>)</code></pre><pre class="highlight"><code class="python">a = torch.tensor([[<span class="hljs-number">1.0</span>,<span class="hljs-number">2</span>],[<span class="hljs-number">3</span>,<span class="hljs-number">4</span>]])<span class="hljs-built_in">print</span>(torch.det(a))&gt;&gt;&gt;Output:tensor(-<span class="hljs-number">2.0000</span>)</code></pre><pre class="highlight"><code class="python">a = torch.tensor([[<span class="hljs-number">1.0</span>,<span class="hljs-number">2</span>],[-<span class="hljs-number">5</span>,<span class="hljs-number">4</span>]],dtype = torch.<span class="hljs-built_in">float</span>)<span class="hljs-built_in">print</span>(torch.eig(a,eigenvectors=<span class="hljs-literal">True</span>))<span class="hljs-comment"># 两个特征值分别是 -2.5+2.7839j, 2.5-2.7839j </span>&gt;&gt;&gt;Output:torch.return_types.eig(eigenvalues=tensor([[ <span class="hljs-number">2.5000</span>,  <span class="hljs-number">2.7839</span>],        [ <span class="hljs-number">2.5000</span>, -<span class="hljs-number">2.7839</span>]]),eigenvectors=tensor([[ <span class="hljs-number">0.2535</span>, -<span class="hljs-number">0.4706</span>],        [ <span class="hljs-number">0.8452</span>,  <span class="hljs-number">0.0000</span>]]))</code></pre><p>矩阵QR分解，将一个方阵分解为一个正交矩阵q和上三角矩阵r。<br>QR分解实际上是对矩阵a实施Schmidt正交化得到q。</p><pre class="highlight"><code class="python">a = torch.tensor([[<span class="hljs-number">1.0</span>,<span class="hljs-number">2.0</span>],[<span class="hljs-number">3.0</span>,<span class="hljs-number">4.0</span>]])q,r = torch.qr(a)<span class="hljs-built_in">print</span>(q,<span class="hljs-string">&quot;\n&quot;</span>)<span class="hljs-built_in">print</span>(r,<span class="hljs-string">&quot;\n&quot;</span>)<span class="hljs-built_in">print</span>(q@r)&gt;&gt;&gt;Output:tensor([[-<span class="hljs-number">0.3162</span>, -<span class="hljs-number">0.9487</span>],        [-<span class="hljs-number">0.9487</span>,  <span class="hljs-number">0.3162</span>]]) tensor([[-<span class="hljs-number">3.1623</span>, -<span class="hljs-number">4.4272</span>],        [ <span class="hljs-number">0.0000</span>, -<span class="hljs-number">0.6325</span>]]) tensor([[<span class="hljs-number">1.0000</span>, <span class="hljs-number">2.0000</span>],        [<span class="hljs-number">3.0000</span>, <span class="hljs-number">4.0000</span>]])</code></pre><p>矩阵svd分解，svd分解可以将任意一个矩阵分解为一个正交矩阵u，一个对角阵s和一个正交矩阵<code>v.t()</code>的乘积。svd常用于矩阵压缩和降维，利用svd分解可以在Pytorch中实现主成分分析降维。</p><pre class="highlight"><code class="python">a=torch.tensor([[<span class="hljs-number">1.0</span>,<span class="hljs-number">2.0</span>],[<span class="hljs-number">3.0</span>,<span class="hljs-number">4.0</span>],[<span class="hljs-number">5.0</span>,<span class="hljs-number">6.0</span>]])u,s,v = torch.svd(a)<span class="hljs-built_in">print</span>(u,<span class="hljs-string">&quot;\n&quot;</span>)<span class="hljs-built_in">print</span>(s,<span class="hljs-string">&quot;\n&quot;</span>)<span class="hljs-built_in">print</span>(v,<span class="hljs-string">&quot;\n&quot;</span>)<span class="hljs-built_in">print</span>(u@torch.diag(s)@v.t())&gt;&gt;&gt;Output:tensor([[-<span class="hljs-number">0.2298</span>,  <span class="hljs-number">0.8835</span>],        [-<span class="hljs-number">0.5247</span>,  <span class="hljs-number">0.2408</span>],        [-<span class="hljs-number">0.8196</span>, -<span class="hljs-number">0.4019</span>]]) tensor([<span class="hljs-number">9.5255</span>, <span class="hljs-number">0.5143</span>]) tensor([[-<span class="hljs-number">0.6196</span>, -<span class="hljs-number">0.7849</span>],        [-<span class="hljs-number">0.7849</span>,  <span class="hljs-number">0.6196</span>]]) tensor([[<span class="hljs-number">1.0000</span>, <span class="hljs-number">2.0000</span>],        [<span class="hljs-number">3.0000</span>, <span class="hljs-number">4.0000</span>],        [<span class="hljs-number">5.0000</span>, <span class="hljs-number">6.0000</span>]])</code></pre><h4 id="广播机制"><a class="markdownIt-Anchor" href="#广播机制"></a> 广播机制</h4><p>Pytorch的广播规则和numpy是一样的:</p><ol><li>如果张量的维度不同，将维度较小的张量进行扩展，直到两个张量的维度都一样。</li><li>如果两个张量在某个维度上的长度是相同的，或者其中一个张量在该维度上的长度为1，那么我们就说这两个张量在该维度上是相容的。</li><li>如果两个张量在所有维度上都是相容的，它们就能使用广播。</li><li>广播之后，每个维度的长度将取两个张量在该维度长度的较大值。</li><li>在任何一个维度上，如果一个张量的长度为1，另一个张量长度大于1，那么在该维度上，就好像是对第一个张量进行了复制。</li></ol><p><code>torch.broadcast_tensors()</code>可以将多个张量根据广播规则转换成相同的维度。</p><pre class="highlight"><code class="python">a = torch.tensor([<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>])b = torch.tensor([[<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>],[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>],[<span class="hljs-number">2</span>,<span class="hljs-number">2</span>,<span class="hljs-number">2</span>]])<span class="hljs-built_in">print</span>(b + a) a_broad,b_broad = torch.broadcast_tensors(a,b)<span class="hljs-built_in">print</span>(a_broad)<span class="hljs-built_in">print</span>(b_broad)<span class="hljs-built_in">print</span>(a_broad + b_broad) &gt;&gt;&gt;Output:tensor([[<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>],        [<span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>],        [<span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>]])tensor([[<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>],        [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>],        [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>]]) tensor([[<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>],        [<span class="hljs-number">1</span>, <span class="hljs-number">1</span>, <span class="hljs-number">1</span>],        [<span class="hljs-number">2</span>, <span class="hljs-number">2</span>, <span class="hljs-number">2</span>]]) tensor([[<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>],        [<span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>],        [<span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>]])</code></pre>]]></content>
      
      
      <categories>
          
          <category> Pytorch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础知识 </tag>
            
            <tag> pytorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pytorch训练代码模板</title>
      <link href="/2023/03/23/pytorch-ji-chu-zhi-shi/shen-du-xue-xi-xun-lian-dai-ma-mo-ban/"/>
      <url>/2023/03/23/pytorch-ji-chu-zhi-shi/shen-du-xue-xi-xun-lian-dai-ma-mo-ban/</url>
      
        <content type="html"><![CDATA[<h1 id="pytorch训练代码模板"><a class="markdownIt-Anchor" href="#pytorch训练代码模板"></a> Pytorch训练代码模板</h1><p>从参数定义，到网络模型定义，再到训练步骤，验证步骤，测试步骤，本文总结了一套较为直观的代码模板。目录如下：</p><ol><li>导入包以及设置随机种子</li><li>以类的方式定义超参数</li><li>定义自己的模型</li><li>定义早停类(此步骤可以省略)</li><li>定义自己的数据集Dataset,DataLoader</li><li>实例化模型，设置loss，优化器等</li><li>开始训练以及调整lr</li><li>绘图</li><li>预测</li></ol><h2 id="导入包以及设置随机种子"><a class="markdownIt-Anchor" href="#导入包以及设置随机种子"></a> 导入包以及设置随机种子</h2><pre class="highlight"><code class="python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<span class="hljs-keyword">import</span> torch<span class="hljs-keyword">import</span> torch.nn <span class="hljs-keyword">as</span> nn<span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<span class="hljs-keyword">from</span> torch.utils.data <span class="hljs-keyword">import</span> DataLoader, Dataset<span class="hljs-keyword">from</span> sklearn.model_selection <span class="hljs-keyword">import</span> train_test_split<span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<span class="hljs-keyword">import</span> randomseed = <span class="hljs-number">42</span>random.seed(seed)  <span class="hljs-comment"># seed for module random</span>np.random.seed(seed)  <span class="hljs-comment"># seed for numpy</span>torch.manual_seed(seed)  <span class="hljs-comment"># seed for PyTorch CPU</span>torch.cuda.manual_seed(seed)  <span class="hljs-comment"># seed for current PyTorch GPU</span>torch.cuda.manual_seed_all(seed)  <span class="hljs-comment"># seed for all PyTorch GPUs</span></code></pre><h2 id="以类的方式定义超参数"><a class="markdownIt-Anchor" href="#以类的方式定义超参数"></a> 以类的方式定义超参数</h2><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">argparse</span>():    <span class="hljs-keyword">pass</span>args = argparse()args.epochs, args.learning_rate, args.patience = [<span class="hljs-number">30</span>, <span class="hljs-number">0.001</span>, <span class="hljs-number">4</span>]args.hidden_size, args.input_size= [<span class="hljs-number">40</span>, <span class="hljs-number">30</span>]args.device, = [torch.device(<span class="hljs-string">&quot;cuda:0&quot;</span> <span class="hljs-keyword">if</span> torch.cuda.is_available() <span class="hljs-keyword">else</span> <span class="hljs-string">&quot;cpu&quot;</span>),]</code></pre><h2 id="定义模型"><a class="markdownIt-Anchor" href="#定义模型"></a> 定义模型</h2><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Your_model</span>(nn.Module):    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):        <span class="hljs-built_in">super</span>(Your_model, self).__init__()        <span class="hljs-keyword">pass</span>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self,x</span>):        <span class="hljs-keyword">pass</span>        <span class="hljs-keyword">return</span> x</code></pre><h2 id="定义早停类可选"><a class="markdownIt-Anchor" href="#定义早停类可选"></a> 定义早停类(可选)</h2><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">EarlyStopping</span>():    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, patience=<span class="hljs-number">7</span>, verbose=<span class="hljs-literal">False</span>, delta=<span class="hljs-number">0</span></span>):        self.patience = patience        self.verbose = verbose        self.counter = <span class="hljs-number">0</span>        self.best_score = <span class="hljs-literal">None</span>        self.early_stop = <span class="hljs-literal">False</span>        self.val_loss_min = np.Inf        self.delta = delta            <span class="hljs-keyword">def</span> <span class="hljs-title function_">__call__</span>(<span class="hljs-params">self, val_loss, model, path</span>):        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;val_loss={}&quot;</span>.<span class="hljs-built_in">format</span>(val_loss))        score = -val_loss        <span class="hljs-keyword">if</span> self.best_score <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:            self.best_score = score            self.save_checkpoint(val_loss, model,path)        <span class="hljs-keyword">elif</span> score &lt; self.best_score+self.delta:            self.counter+=<span class="hljs-number">1</span>            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;EarlyStopping counter: <span class="hljs-subst">{self.counter}</span> out of <span class="hljs-subst">{self.patience}</span>&#x27;</span>)            <span class="hljs-keyword">if</span> self.counter&gt;=self.patience:                self.early_stop = <span class="hljs-literal">True</span>        <span class="hljs-keyword">else</span>:            self.best_score = score            self.save_checkpoint(val_loss, model,path)            self.counter = <span class="hljs-number">0</span>                <span class="hljs-keyword">def</span> <span class="hljs-title function_">save_checkpoint</span>(<span class="hljs-params">self, val_loss,model, path</span>):        <span class="hljs-keyword">if</span> self.verbose:            <span class="hljs-built_in">print</span>(<span class="hljs-string">f&#x27;Validation loss decreased (<span class="hljs-subst">{self.val_loss_min:<span class="hljs-number">.6</span>f}</span> --&gt; <span class="hljs-subst">{val_loss:<span class="hljs-number">.6</span>f}</span>).  Saving model ...&#x27;</span>)        torch.save(model.state_dict(), path+<span class="hljs-string">&#x27;/&#x27;</span>+<span class="hljs-string">&#x27;model_checkpoint.pth&#x27;</span>)        self.val_loss_min = val_loss</code></pre><h2 id="定义数据集datasetdataloader"><a class="markdownIt-Anchor" href="#定义数据集datasetdataloader"></a> 定义数据集Dataset,DataLoader</h2><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Dataset_name</span>(<span class="hljs-title class_ inherited__">Dataset</span>):    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self, flag=<span class="hljs-string">&#x27;train&#x27;</span></span>):        <span class="hljs-keyword">assert</span> flag <span class="hljs-keyword">in</span> [<span class="hljs-string">&#x27;train&#x27;</span>, <span class="hljs-string">&#x27;test&#x27;</span>, <span class="hljs-string">&#x27;valid&#x27;</span>]        self.flag = flag        self.__load_data__()    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__getitem__</span>(<span class="hljs-params">self, index</span>):        <span class="hljs-keyword">pass</span>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__len__</span>(<span class="hljs-params">self</span>):        <span class="hljs-keyword">pass</span>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__load_data__</span>(<span class="hljs-params">self, csv_paths: <span class="hljs-built_in">list</span></span>):        <span class="hljs-keyword">pass</span>        <span class="hljs-built_in">print</span>(            <span class="hljs-string">&quot;train_X.shape:{}\ntrain_Y.shape:{}\nvalid_X.shape:{}\nvalid_Y.shape:{}\n&quot;</span>            .<span class="hljs-built_in">format</span>(self.train_X.shape, self.train_Y.shape, self.valid_X.shape, self.valid_Y.shape))train_dataset = Dataset_name(flag=<span class="hljs-string">&#x27;train&#x27;</span>)train_dataloader = DataLoader(dataset=train_dataset, batch_size=<span class="hljs-number">64</span>, shuffle=<span class="hljs-literal">True</span>)valid_dataset = Dataset_name(flag=<span class="hljs-string">&#x27;valid&#x27;</span>)valid_dataloader = DataLoader(dataset=valid_dataset, batch_size=<span class="hljs-number">64</span>, shuffle=<span class="hljs-literal">True</span>)</code></pre><h2 id="实例化模型设置loss优化器等"><a class="markdownIt-Anchor" href="#实例化模型设置loss优化器等"></a> 实例化模型，设置loss，优化器等</h2><pre class="highlight"><code class="python">model = Your_model().to(args.device)criterion = torch.nn.MSELoss()optimizer = torch.optim.Adam(Your_model.parameters(), lr=args.learning_rate)train_loss = []valid_loss = []train_epochs_loss = []valid_epochs_loss = []early_stopping = EarlyStopping(patience=args.patience, verbose=<span class="hljs-literal">True</span>)</code></pre><h2 id="开始训练以及调整lr"><a class="markdownIt-Anchor" href="#开始训练以及调整lr"></a> 开始训练以及调整lr</h2><pre class="highlight"><code class="python"><span class="hljs-keyword">for</span> epoch <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(args.epochs):    Your_model.train()    train_epoch_loss = []    <span class="hljs-keyword">for</span> idx,(data_x,data_y) <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(train_dataloader,<span class="hljs-number">0</span>):        data_x = data_x.to(torch.float32).to(args.device)        data_y = data_y.to(torch.float32).to(args.device)                outputs = Your_model(data_x)                optimizer.zero_grad()        loss = criterion(data_y, outputs)        loss.backward()        optimizer.step()                train_epoch_loss.append(loss.item())        train_loss.append(loss.item())        <span class="hljs-keyword">if</span> idx%(<span class="hljs-built_in">len</span>(train_dataloader)//<span class="hljs-number">2</span>)==<span class="hljs-number">0</span>:            <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;epoch={}/{},{}/{}of train, loss={}&quot;</span>.<span class="hljs-built_in">format</span>(                epoch, args.epochs, idx, <span class="hljs-built_in">len</span>(train_dataloader), loss.item()))    train_epochs_loss.append(np.average(train_epoch_loss))    <span class="hljs-comment">#=====================valid============================</span>    Your_model.<span class="hljs-built_in">eval</span>()    valid_epoch_loss = []    <span class="hljs-keyword">for</span> idx,(data_x,data_y) <span class="hljs-keyword">in</span> <span class="hljs-built_in">enumerate</span>(valid_dataloader,<span class="hljs-number">0</span>):        data_x = data_x.to(torch.float32).to(args.device)        data_y = data_y.to(torch.float32).to(args.device)        outputs = Your_model(data_x)        loss = criterion(outputs,data_y)        valid_epoch_loss.append(loss.item())        valid_loss.append(loss.item())    valid_epochs_loss.append(np.average(valid_epoch_loss))        <span class="hljs-comment">#==================early stopping======================</span>    early_stopping(valid_epochs_loss[-<span class="hljs-number">1</span>], model=Your_model, path=<span class="hljs-string">r&#x27;c:\\your_model_to_save&#x27;</span>)    <span class="hljs-keyword">if</span> early_stopping.early_stop:        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Early stopping&quot;</span>)        <span class="hljs-keyword">break</span>            <span class="hljs-comment">#====================adjust lr========================</span>    lr_adjust = {            <span class="hljs-number">2</span>: <span class="hljs-number">5e-5</span>, <span class="hljs-number">4</span>: <span class="hljs-number">1e-5</span>, <span class="hljs-number">6</span>: <span class="hljs-number">5e-6</span>, <span class="hljs-number">8</span>: <span class="hljs-number">1e-6</span>,            <span class="hljs-number">10</span>: <span class="hljs-number">5e-7</span>, <span class="hljs-number">15</span>: <span class="hljs-number">1e-7</span>, <span class="hljs-number">20</span>: <span class="hljs-number">5e-8</span>        }    <span class="hljs-keyword">if</span> epoch <span class="hljs-keyword">in</span> lr_adjust.keys():        lr = lr_adjust[epoch]        <span class="hljs-keyword">for</span> param_group <span class="hljs-keyword">in</span> optimizer.param_groups:            param_group[<span class="hljs-string">&#x27;lr&#x27;</span>] = lr        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;Updating learning rate to {}&#x27;</span>.<span class="hljs-built_in">format</span>(lr))</code></pre><h2 id="绘图"><a class="markdownIt-Anchor" href="#绘图"></a> 绘图</h2><pre class="highlight"><code class="python">plt.figure(figsize=(<span class="hljs-number">12</span>,<span class="hljs-number">4</span>))plt.subplot(<span class="hljs-number">121</span>)plt.plot(train_loss[:])plt.title(<span class="hljs-string">&quot;train_loss&quot;</span>)plt.subplot(<span class="hljs-number">122</span>)plt.plot(train_epochs_loss[<span class="hljs-number">1</span>:],<span class="hljs-string">&#x27;-o&#x27;</span>,label=<span class="hljs-string">&quot;train_loss&quot;</span>)plt.plot(valid_epochs_loss[<span class="hljs-number">1</span>:],<span class="hljs-string">&#x27;-o&#x27;</span>,label=<span class="hljs-string">&quot;valid_loss&quot;</span>)plt.title(<span class="hljs-string">&quot;epochs_loss&quot;</span>)plt.legend()plt.show()</code></pre><h2 id="预测"><a class="markdownIt-Anchor" href="#预测"></a> 预测</h2><pre class="highlight"><code class="python"><span class="hljs-comment"># 此处可定义一个预测集的Dataloader。也可以直接将你的预测数据reshape,添加batch_size=1</span>Your_model.<span class="hljs-built_in">eval</span>()predict = Your_model(data)</code></pre>]]></content>
      
      
      <categories>
          
          <category> Pytorch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pytorch </tag>
            
            <tag> 代码模板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pytorch保存和加载模型&amp;断点训练</title>
      <link href="/2023/03/23/pytorch-ji-chu-zhi-shi/bao-cun-he-jia-zai-mo-xing-duan-dian-ji-xu-xun-lian/"/>
      <url>/2023/03/23/pytorch-ji-chu-zhi-shi/bao-cun-he-jia-zai-mo-xing-duan-dian-ji-xu-xun-lian/</url>
      
        <content type="html"><![CDATA[<h1 id="pytorch模型保存和加载"><a class="markdownIt-Anchor" href="#pytorch模型保存和加载"></a> Pytorch模型保存和加载</h1><p>Pytorch保存和加载模型需要掌握3个重要的函数：</p><ol><li><strong>torch.save：</strong> 将一个序列化的对象保存到磁盘。这个函数使用 Python 的 pickle 工具进行序列化。用这个函数可以保存<strong>模型 (model)</strong>、<strong>张量 (tensor)</strong> 和<strong>各种对象的字典 (dict)</strong> 。</li><li><strong>torch.load：</strong> 将 pickle 对象文件反序列化到内存，也便于将数据加载到设备中。</li><li><strong>torch.nn.Module.load_state_dict()：</strong> 加载模型的参数。</li></ol><h2 id="state_dict"><a class="markdownIt-Anchor" href="#state_dict"></a> state_dict</h2><h3 id="state_dict-介绍"><a class="markdownIt-Anchor" href="#state_dict-介绍"></a> state_dict 介绍</h3><p>PyTorch 中，<code>torch.nn.Module</code>里面的可学习的参数 (weights 和 biases) 都放在<code>model.parameters()</code>里面。而<code>state_dict</code>是一个Python dictionary object，将每一层映射到它的 parameter tensor 上。<br><strong>注意</strong>：只有含有可学习参数的层 (convolutional layers, linear layers)，或者含有<code>registered buffers</code>的层 (batchnorm’s running_mean) 才有 state_dict。优化器的对象 (torch.optim) 也有 state_dict，存储了优化器的状态和它的超参数。<br>因为<code>state_dict</code>是一个 Python字典对象，所以保存，加载，更新它比较容易。<br>下面我们通过一个例子直观感受下 state_dict 的用法：</p><pre class="highlight"><code class="python"><span class="hljs-comment"># Define model</span><span class="hljs-keyword">class</span> <span class="hljs-title class_">TheModelClass</span>(nn.Module):    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):        <span class="hljs-built_in">super</span>(TheModelClass, self).__init__()        self.conv1 = nn.Conv2d(<span class="hljs-number">3</span>, <span class="hljs-number">6</span>, <span class="hljs-number">5</span>)        self.pool = nn.MaxPool2d(<span class="hljs-number">2</span>, <span class="hljs-number">2</span>)        self.conv2 = nn.Conv2d(<span class="hljs-number">6</span>, <span class="hljs-number">16</span>, <span class="hljs-number">5</span>)        self.fc1 = nn.Linear(<span class="hljs-number">16</span> * <span class="hljs-number">5</span> * <span class="hljs-number">5</span>, <span class="hljs-number">120</span>)        self.fc2 = nn.Linear(<span class="hljs-number">120</span>, <span class="hljs-number">84</span>)        self.fc3 = nn.Linear(<span class="hljs-number">84</span>, <span class="hljs-number">10</span>)    <span class="hljs-keyword">def</span> <span class="hljs-title function_">forward</span>(<span class="hljs-params">self, x</span>):        x = self.pool(F.relu(self.conv1(x)))        x = self.pool(F.relu(self.conv2(x)))        x = x.view(-<span class="hljs-number">1</span>, <span class="hljs-number">16</span> * <span class="hljs-number">5</span> * <span class="hljs-number">5</span>)        x = F.relu(self.fc1(x))        x = F.relu(self.fc2(x))        x = self.fc3(x)        <span class="hljs-keyword">return</span> x<span class="hljs-comment"># Initialize model</span>model = TheModelClass()<span class="hljs-comment"># Initialize optimizer</span>optimizer = optim.SGD(model.parameters(), lr=<span class="hljs-number">0.001</span>, momentum=<span class="hljs-number">0.9</span>)<span class="hljs-comment"># Print model&#x27;s state_dict</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Model&#x27;s state_dict:&quot;</span>)<span class="hljs-keyword">for</span> param_tensor <span class="hljs-keyword">in</span> model.state_dict():    <span class="hljs-built_in">print</span>(param_tensor, <span class="hljs-string">&quot;\t&quot;</span>, model.state_dict()[param_tensor].size())<span class="hljs-comment"># Print optimizer&#x27;s state_dict</span><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;Optimizer&#x27;s state_dict:&quot;</span>)<span class="hljs-keyword">for</span> var_name <span class="hljs-keyword">in</span> optimizer.state_dict():    <span class="hljs-built_in">print</span>(var_name, <span class="hljs-string">&quot;\t&quot;</span>, optimizer.state_dict()[var_name])</code></pre><p>输出</p><pre class="highlight"><code class="python">Model<span class="hljs-string">&#x27;s state_dict:conv1.weight     torch.Size([6, 3, 5, 5])conv1.bias   torch.Size([6])conv2.weight     torch.Size([16, 6, 5, 5])conv2.bias   torch.Size([16])fc1.weight   torch.Size([120, 400])fc1.bias     torch.Size([120])fc2.weight   torch.Size([84, 120])fc2.bias     torch.Size([84])fc3.weight   torch.Size([10, 84])fc3.bias     torch.Size([10])Optimizer&#x27;</span>s state_dict:state    {}param_groups     [{<span class="hljs-string">&#x27;lr&#x27;</span>: <span class="hljs-number">0.001</span>, <span class="hljs-string">&#x27;momentum&#x27;</span>: <span class="hljs-number">0.9</span>, <span class="hljs-string">&#x27;dampening&#x27;</span>: <span class="hljs-number">0</span>, <span class="hljs-string">&#x27;weight_decay&#x27;</span>: <span class="hljs-number">0</span>,                    <span class="hljs-string">&#x27;nesterov&#x27;</span>: <span class="hljs-literal">False</span>, <span class="hljs-string">&#x27;params&#x27;</span>: [<span class="hljs-number">4675713712</span>, <span class="hljs-number">4675713784</span>, <span class="hljs-number">4675714000</span>,                                                  <span class="hljs-number">4675714072</span>, <span class="hljs-number">4675714216</span>, <span class="hljs-number">4675714288</span>,                                                  <span class="hljs-number">4675714432</span>, <span class="hljs-number">4675714504</span>, <span class="hljs-number">4675714648</span>,                                                  <span class="hljs-number">4675714720</span>]}]</code></pre><h2 id="保存和加载模型"><a class="markdownIt-Anchor" href="#保存和加载模型"></a> 保存和加载模型</h2><h3 id="保存和加载-state_dict-已经训练完无需继续训练"><a class="markdownIt-Anchor" href="#保存和加载-state_dict-已经训练完无需继续训练"></a> 保存和加载 state_dict (已经训练完，无需继续训练)</h3><p>保存</p><pre class="highlight"><code class="python">torch.save(model.state_dict(), PATH)</code></pre><p>加载</p><pre class="highlight"><code class="python">model = TheModelClass(*args, **kwargs)model.load_state_dict(torch.load(PATH))model.<span class="hljs-built_in">eval</span>()</code></pre><p>一般保存为<code>.pt</code>或<code>.pth</code>格式的文件。<br>注意：</p><ol><li>可以使用<code>model.eval()</code>将 dropout 和 batch normalization 层设置成 evaluation 模式。</li><li><code>load_state_dict()</code>函数需要一个<strong>dict类型</strong>的输入，而不是保存模型的PATH。</li><li>如果你想<strong>保存验证集上表现最好的模型</strong>，那么这样<code>best_model_state=model.state_dict()</code>是错误的。因为这属于浅复制，也就是说此时这个best_model_state会随着后续的训练过程而不断被更新，最后保存的其实是个 overfit 的模型。所以正确的做法应该是<code>best_model_state=deepcopy(model.state_dict())</code>。</li></ol><h3 id="保存和加载整个模型-已经训练完无需继续训练"><a class="markdownIt-Anchor" href="#保存和加载整个模型-已经训练完无需继续训练"></a> 保存和加载整个模型 (已经训练完，无需继续训练)</h3><p>保存</p><pre class="highlight"><code class="python">torch.save(model, PATH)</code></pre><p>加载。注意：<strong>必须提前定义好模型的类</strong>。</p><pre class="highlight"><code class="python"><span class="hljs-comment"># Model class must be defined somewhere</span>model = torch.load(PATH)model.<span class="hljs-built_in">eval</span>()</code></pre><p>一般保存为<code>.pt</code>或<code>.pth</code>格式的文件。</p><h3 id="保存和加载-state_dict-没有训练完还会继续训练"><a class="markdownIt-Anchor" href="#保存和加载-state_dict-没有训练完还会继续训练"></a> 保存和加载 state_dict (没有训练完，还会继续训练)</h3><p>保存。除了保存 model_state_dict 之外，还需要保存：optimizer_state_dict，epoch 和 loss，因为继续训练时要知道优化器的状态，epoch 等等。</p><pre class="highlight"><code class="python">torch.save({            <span class="hljs-string">&#x27;epoch&#x27;</span>: epoch,            <span class="hljs-string">&#x27;model_state_dict&#x27;</span>: model.state_dict(),            <span class="hljs-string">&#x27;optimizer_state_dict&#x27;</span>: optimizer.state_dict(),            <span class="hljs-string">&#x27;loss&#x27;</span>: loss,            ...            }, PATH)</code></pre><p>加载。除了加载 model_state_dict 之外，还需要加载：optimizer_state_dict，epoch 和 loss。</p><pre class="highlight"><code class="python">model = TheModelClass(*args, **kwargs)optimizer = TheOptimizerClass(*args, **kwargs)checkpoint = torch.load(PATH)model.load_state_dict(checkpoint[<span class="hljs-string">&#x27;model_state_dict&#x27;</span>])optimizer.load_state_dict(checkpoint[<span class="hljs-string">&#x27;optimizer_state_dict&#x27;</span>])epoch = checkpoint[<span class="hljs-string">&#x27;epoch&#x27;</span>]loss = checkpoint[<span class="hljs-string">&#x27;loss&#x27;</span>]model.<span class="hljs-built_in">eval</span>()<span class="hljs-comment"># - or -</span>model.train()</code></pre><h3 id="把多个模型存进一个文件"><a class="markdownIt-Anchor" href="#把多个模型存进一个文件"></a> 把多个模型存进一个文件</h3><p>保存：把模型 A 和 B 的 state_dict 和 optimizer 都存进一个文件中。</p><pre class="highlight"><code class="python">torch.save({            <span class="hljs-string">&#x27;modelA_state_dict&#x27;</span>: modelA.state_dict(),            <span class="hljs-string">&#x27;modelB_state_dict&#x27;</span>: modelB.state_dict(),            <span class="hljs-string">&#x27;optimizerA_state_dict&#x27;</span>: optimizerA.state_dict(),            <span class="hljs-string">&#x27;optimizerB_state_dict&#x27;</span>: optimizerB.state_dict(),            ...            }, PATH)</code></pre><p>加载：</p><pre class="highlight"><code class="python">modelA = TheModelAClass(*args, **kwargs)modelB = TheModelBClass(*args, **kwargs)optimizerA = TheOptimizerAClass(*args, **kwargs)optimizerB = TheOptimizerBClass(*args, **kwargs)checkpoint = torch.load(PATH)modelA.load_state_dict(checkpoint[<span class="hljs-string">&#x27;modelA_state_dict&#x27;</span>])modelB.load_state_dict(checkpoint[<span class="hljs-string">&#x27;modelB_state_dict&#x27;</span>])optimizerA.load_state_dict(checkpoint[<span class="hljs-string">&#x27;optimizerA_state_dict&#x27;</span>])optimizerB.load_state_dict(checkpoint[<span class="hljs-string">&#x27;optimizerB_state_dict&#x27;</span>])modelA.<span class="hljs-built_in">eval</span>()modelB.<span class="hljs-built_in">eval</span>()<span class="hljs-comment"># - or -</span>modelA.train()modelB.train()</code></pre><h2 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h2><h3 id="使用其他模型的参数暖启动自己的模型"><a class="markdownIt-Anchor" href="#使用其他模型的参数暖启动自己的模型"></a> 使用其他模型的参数暖启动自己的模型</h3><p>有时候训练一个新的复杂模型时，需要加载它的一部分预训练的权重。即使只有几个可用的参数，也会有助于 warmstart 训练过程，帮助模型更快达到收敛。<br>如果手里有的这个 state_dict 缺乏一些 keys，或者多了一些 keys，只要设置<code>strict</code>参数为 False，就能够把 state_dict 能够匹配的 keys 加载进去，而忽略掉那些不匹配的 keys。<br>保存模型 A 的 state_dict ：</p><pre class="highlight"><code class="python">torch.save(modelA.state_dict(), PATH)</code></pre><p>加载到模型 B：</p><pre class="highlight"><code class="python">modelB = TheModelBClass(*args, **kwargs)modelB.load_state_dict(torch.load(PATH), strict=<span class="hljs-literal">False</span>)</code></pre><h3 id="不同设备cpugpu上保存和加载"><a class="markdownIt-Anchor" href="#不同设备cpugpu上保存和加载"></a> 不同设备（CPU/GPU）上保存和加载</h3><p>不同设备的保存和加载需要在<code>load()</code>函数中引入一个参数<code>map_location</code>来指定需要将不同设备上保存的模型映射到同一个设备上。如果保存模型和加载模型的是<strong>相同</strong>的设备：CPU-&gt;CPU，GPU-&gt;GPU。则加载模型时可不使用<code>map_location</code>参数。如果保存模型和加载模型的是<strong>不同</strong>的设备：CPU-&gt;GPU，GPU-&gt;CPU。则加载模型时必须使用<code>map_location</code>参数。<br>上述的两种情况下，如果加载的设备是GPU，还需要使用<code>model.to(device)</code>将模型的参数张量转化为CUDA张量。<br>从CPU加载到GPU：</p><pre class="highlight"><code class="python">torch.save(model.state_dict(), PATH)device = torch.device(<span class="hljs-string">&quot;cuda&quot;</span>)model = TheModelClass(*args, **kwargs)model.load_state_dict(torch.load(PATH, map_location=<span class="hljs-string">&quot;cuda&quot;</span>))  model.to(device)</code></pre><p>从GPU加载到CPU：</p><pre class="highlight"><code class="python">torch.save(model.state_dict(), PATH)device = torch.device(<span class="hljs-string">&#x27;cpu&#x27;</span>)model = TheModelClass(*args, **kwargs)model.load_state_dict(torch.load(PATH, map_location=device))</code></pre><h2 id="断点继续训练"><a class="markdownIt-Anchor" href="#断点继续训练"></a> 断点继续训练</h2><p>将网络训练过程中的网络的权重，优化器的权重保存，以及epoch 保存，便于继续训练恢复。如果使用了学习率衰减，在保存网络中的训练的参数的过程中，还需要保存lr_scheduler的state_dict，然后断点继续训练的时候恢复。</p><pre class="highlight"><code class="python">checkpoint = {    <span class="hljs-string">&quot;net&quot;</span>: model.state_dict(),    <span class="hljs-string">&#x27;optimizer&#x27;</span>: optimizer.state_dict(),    <span class="hljs-string">&quot;epoch&quot;</span>: epoch,    <span class="hljs-string">&#x27;lr_schedule&#x27;</span>: lr_schedule.state_dict()}<span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.isdir(<span class="hljs-string">&quot;./model_parameter/test&quot;</span>):    os.mkdir(<span class="hljs-string">&quot;./model_parameter/test&quot;</span>)torch.save(checkpoint, <span class="hljs-string">&#x27;./model_parameter/test/ckpt_best_%s.pth&#x27;</span> % (<span class="hljs-built_in">str</span>(epoch)))</code></pre><p>加载恢复训练参数</p><pre class="highlight"><code class="python"><span class="hljs-comment">#加载恢复</span><span class="hljs-keyword">if</span> RESUME:    path_checkpoint = <span class="hljs-string">&quot;./model_parameter/test/ckpt_best_50.pth&quot;</span>  <span class="hljs-comment"># 断点路径</span>    checkpoint = torch.load(path_checkpoint)  <span class="hljs-comment"># 加载断点</span>    model.load_state_dict(checkpoint[<span class="hljs-string">&#x27;net&#x27;</span>])  <span class="hljs-comment"># 加载模型可学习参数</span>    optimizer.load_state_dict(checkpoint[<span class="hljs-string">&#x27;optimizer&#x27;</span>])  <span class="hljs-comment"># 加载优化器参数</span>    start_epoch = checkpoint[<span class="hljs-string">&#x27;epoch&#x27;</span>]  <span class="hljs-comment"># 设置开始的epoch</span>    lr_schedule.load_state_dict(checkpoint[<span class="hljs-string">&#x27;lr_schedule&#x27;</span>])<span class="hljs-comment">#加载lr_scheduler</span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Pytorch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pytorch </tag>
            
            <tag> 代码模板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pytorch中的学习率衰减</title>
      <link href="/2023/02/21/pytorch-ji-chu-zhi-shi/xue-xi-lu-shuai-jian/"/>
      <url>/2023/02/21/pytorch-ji-chu-zhi-shi/xue-xi-lu-shuai-jian/</url>
      
        <content type="html"><![CDATA[<h1 id="学习率衰减原理"><a class="markdownIt-Anchor" href="#学习率衰减原理"></a> 学习率衰减原理</h1><p>在梯度下降算法中，学习率用来控制权重更新的步幅。学习率越大，则权重更新的步子迈得大一些，学习率越小，则权重更新的步子迈得小一些。<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo>=</mo><mi>w</mi><mo>−</mo><mi>α</mi><mo>∗</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi><mi>o</mi><mi>s</mi><mi>s</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>w</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">w=w- \alpha * \frac{\partial Loss}{\partial w}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.2251079999999999em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight">L</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">s</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><br>如果在训练过程中，学习率保持不变，则可能会出现下面两种情况。</p><ul><li><p>左侧是学习率较小的情况，这时权重更新步幅小，导致模型收敛很慢。</p></li><li><p>右侧是学习率较大的情况，这时权重更新步幅大，模型刚开始收敛很快，但是最终在接近目标函数极值时由于步子迈的太大，会越过极值的位置，导致模型在目标函数的极值两侧来回震荡，不能收敛到最优解。</p></li></ul><p><img src="/images/lr1.png" alt><img src="/images/lr3.png" alt><br>最好的状态是在训练初期学习率设置大一些，使模型收敛得快一些，训练后期学习率设置小一些，使模型能收敛到最优解。<br><img src="/images/lr2.png" alt><br>因此在训练时若模型的精度出现震荡或是Loss不再下降时，适当进行学习率衰减是一个有效的训练方法。Pytorch有两种学习率衰减的方法：</p><ol><li>一种是手动设置，</li><li>另一种使用<code>lr_scheduler()</code>提供的几种衰减函数进行设置。</li></ol><p>使用<code>lr_scheduler()</code>提供的函数进行设置时，方法都是类似的，如下面的代码模板。<code>decay_method()</code>方法就是<code>lr_scheduler()</code>提供的衰减函数。</p><pre class="highlight"><code class="python">scheduler = torch.optim.lr_scheduler.decay_method()<span class="hljs-keyword">for</span> epoch <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(epochs):    train(...)    validate(...)    scheduler.step()</code></pre><h2 id="lr_scheduler的学习率衰减策略"><a class="markdownIt-Anchor" href="#lr_scheduler的学习率衰减策略"></a> lr_scheduler()的学习率衰减策略</h2><h3 id="等间隔调整学习率"><a class="markdownIt-Anchor" href="#等间隔调整学习率"></a> 等间隔调整学习率</h3><pre class="highlight"><code class="python">scheduler = torch.optim.lr_scheduler.StepLR(optimizer, step_size, gamma)</code></pre><p>该方法有3个参数：</p><ol><li>optimizer是优化器；</li><li>step_size表示间隔多少个epoch后调整学习率；</li><li>gamma表示学习率调整的倍数。</li></ol><p>该方法是每训练step_size个epoch，就将学习率调整为 lr<em>gamma。如下图step_size = 10，gamma = 0.8表示每间隔10个epoch将学习率调整为 lr</em>0.8。<br><img src="/images/step_LR.png" alt></p><h3 id="多间隔调整学习率"><a class="markdownIt-Anchor" href="#多间隔调整学习率"></a> 多间隔调整学习率</h3><pre class="highlight"><code class="python">scheduler = torch.optim.lr_scheduler.MultiStepLR(optimizer, milestones, gamma)</code></pre><p>该方法与StepLR()类似也是间隔调整学习率，但是<strong>间隔并不相等</strong>。它有3个参数：</p><ol><li>optimizer是优化器；</li><li>milestones是一个列表，列表中每个元素表示要调整学习率的epoch；</li><li>gamma表示学习率调整的倍数。</li></ol><p>如下图所示，milestones= [10, 30, 90]，gamma = 0.8表示在epoch = 10、30、90时将学习率调整为 lr*0.8。<br><img src="/images/MultiStepLR.png" alt></p><h3 id="指数衰减调整学习率"><a class="markdownIt-Anchor" href="#指数衰减调整学习率"></a> 指数衰减调整学习率</h3><pre class="highlight"><code class="python">scheduler = torch.optim.lr_scheduler.ExponentialLR(optimizer, gamma)</code></pre><p>该方法与前两种不同，是<strong>每个epoch都调整学习率</strong>，学习率调整为<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>r</mi><mo>∗</mo><mi>g</mi><mi>a</mi><mi>m</mi><mi>m</mi><msup><mi>a</mi><mrow><mi>e</mi><mi>p</mi><mi>o</mi><mi>c</mi><mi>h</mi></mrow></msup></mrow><annotation encoding="application/x-tex">lr* gamma^{epoch}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.043548em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">a</span><span class="mord mathnormal">m</span><span class="mord mathnormal">m</span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">o</span><span class="mord mathnormal mtight">c</span><span class="mord mathnormal mtight">h</span></span></span></span></span></span></span></span></span></span></span></span>。<br>它有两个参数：</p><ol><li>optimizer是优化器；</li><li>gamma是调整学习率的底数，指数为epoch。</li></ol><p>如下图，gamma = 0.8。<br><img src="/images/ELR.png" alt></p><h3 id="余弦退火函数调整学习率"><a class="markdownIt-Anchor" href="#余弦退火函数调整学习率"></a> 余弦退火函数调整学习率</h3><pre class="highlight"><code class="python">scheduler = torch.optim.lr_scheduler.CosineAnnealingLR(optimizer, T_max, eta_min)</code></pre><p>该方法使得<strong>学习率呈Cos型衰减</strong>，T_max表示0.5个余弦函数周期，也<strong>表示学习率调整为最小时的epoch数值，eta_min表示学习率调整的最小值</strong>，默认为0。如下所示，T_max = 100, eta_min=0表示学习率呈Cos衰减，在epoch = 100时学习率降到最低，即学习率降到0。<br><img src="/images/Cos.png" alt></p><h3 id="根据指标调整学习率"><a class="markdownIt-Anchor" href="#根据指标调整学习率"></a> 根据指标调整学习率</h3><pre class="highlight"><code class="python">scheduler = torch.optim.lr_sheduler.ReduceLROnPlateau(optimizer, mode=<span class="hljs-string">&#x27;min&#x27;</span>, factor=<span class="hljs-number">0.1</span>,                     patience=<span class="hljs-number">10</span>, verbose=<span class="hljs-literal">False</span>, threshold=<span class="hljs-number">0.0001</span>, threshold_mode=<span class="hljs-string">&#x27;rel&#x27;</span>,                     cooldown=<span class="hljs-number">0</span>, min_lr=<span class="hljs-number">0</span>, eps=<span class="hljs-number">1e-08</span>)</code></pre><p>该方法**根据监测指标来调整学习率，如训练过程中监测Loss不再降低或是监测Acc不再上升，则调整学习率。**它有如下参数：</p><ol><li><strong>mod</strong>是模式选择，其参数有两种值&quot;min&quot;和&quot;max&quot;，min表示监测指标不再降低就调整学习率，&quot;max&quot;表示检测指标不再上升就调整学习率。</li><li><strong>factor</strong>表示学习率调整的倍数，学习率会调整为lr*factor。</li><li><strong>patience</strong>表示监测指标经过多少个epoch没有降低或上升了，其含义是经过patience个epoch，监测指标仍然没有变化，则调整学习率。</li><li><strong>verbose</strong>表示是否打印学习率。</li><li><strong>cooldown</strong>表示调整过一次学习率后，等待一定的epoch再进行监测。</li><li><strong>min_lr</strong>表示学习率的最小值。</li><li><strong>eps</strong>表示学习率的最小变化，若新旧学习率之间的差值小于1e-8则学习率不变。</li></ol><h3 id="自定义调整学习率"><a class="markdownIt-Anchor" href="#自定义调整学习率"></a> 自定义调整学习率</h3><pre class="highlight"><code class="python">scheduler = lr_scheduler.LambdaLR(optimizer, lr_lambda)</code></pre><p>该方法允许<strong>自定义学习率衰减函数</strong>，它是每个epoch调整一次学习率。<br>该方法的<code>lr_lambda</code>参数表示<strong>自定义的学习率调整函数</strong>，可以是自定义函数，也可以是lambda表达式，自定义的函数须要<strong>接收一个int参数：epoch</strong>，根据epoch定义出学习率的调整倍数。学习率调整为<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>r</mi><mo>∗</mo><mi>L</mi><msub><mi>R</mi><mrow><mi>l</mi><mi>a</mi><mi>m</mi><mi>b</mi><mi>d</mi><mi>a</mi></mrow></msub><mo stretchy="false">(</mo><mi>e</mi><mi>p</mi><mi>o</mi><mi>c</mi><mi>h</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">lr * LR_{lambda}(epoch)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.00773em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">e</span><span class="mord mathnormal">p</span><span class="mord mathnormal">o</span><span class="mord mathnormal">c</span><span class="mord mathnormal">h</span><span class="mclose">)</span></span></span></span><br>如下所示，自定义学习率调整函数：下面的函数是<strong>自定义的指数衰减</strong>，gamma = 0.8。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">lr_decay</span>(<span class="hljs-params">epoch</span>):    <span class="hljs-keyword">return</span> <span class="hljs-number">0.8</span>**epochscheduler = lr_scheduler.LambdaLR(optimizer,lr_lambda = lr_decay)</code></pre><p>自定义lambda表达式：下面是<strong>自定义的等间隔学习率调整</strong>，间隔为10epoch。</p><pre class="highlight"><code class="python">lambda1 = <span class="hljs-keyword">lambda</span> epoch:(<span class="hljs-number">0.8</span> ** (epoch // <span class="hljs-number">10</span>))scheduler = lr_scheduler.LambdaLR(optimizer,lr_lambda = lambda1)</code></pre><h2 id="手动调整学习率"><a class="markdownIt-Anchor" href="#手动调整学习率"></a> 手动调整学习率</h2><p>我们可以通过下面两种方式来访问模型中的学习率。optimizer通过<code>param_groups</code>来管理参数组，<code>param_groups</code>中保存了模型的参数组及其对应的学习率，通过<code>param_group['lr']</code>就可以访问到对应参数组的学习率。</p><pre class="highlight"><code class="python"><span class="hljs-comment"># 下面两种方式等价</span><span class="hljs-built_in">print</span> (optimizer.param_groups[<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;lr&#x27;</span>])<span class="hljs-built_in">print</span> (optimizer.state_dict()[<span class="hljs-string">&#x27;param_groups&#x27;</span>][<span class="hljs-number">0</span>][<span class="hljs-string">&#x27;lr&#x27;</span>])</code></pre><p>所以<strong>通过</strong><code>**param_groups**</code><strong>来修改对应参数组的学习率</strong>。下面的代码是每10个epoch修改一次学习率，调整的学习率倍数为0.9。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">for</span> epoch <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">100</span>):    <span class="hljs-keyword">if</span> epoch % <span class="hljs-number">10</span> == <span class="hljs-number">0</span>:        <span class="hljs-keyword">for</span> param_group <span class="hljs-keyword">in</span> optimizer.param_groups:            param_group[<span class="hljs-string">&#x27;lr&#x27;</span>] *= <span class="hljs-number">0.9</span></code></pre><p>除了这种方式外，还可以<strong>通过重新定义优化器的方式修改学习率</strong>。下面的代码是每20个epoch修改一次学习率，调整的学习率倍数为0.8。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">lr_decay</span>(<span class="hljs-params">lr, epoch</span>):    <span class="hljs-keyword">return</span> lr*(<span class="hljs-number">0.8</span> ** (epoch // <span class="hljs-number">20</span>))<span class="hljs-keyword">for</span> epoch <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(epochs):    <span class="hljs-comment"># 调整学习率</span>    lr = lr_decay(lr, epoch)      optimizer = optim.SGD(net.parameters(), lr=lr)    ......    ......    <span class="hljs-comment"># 采用新的学习率进行参数更新</span>    optimizer.step()      ......</code></pre>]]></content>
      
      
      <categories>
          
          <category> Pytorch </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pytorch </tag>
            
            <tag> 代码模板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python的@staticmethod和@classmethod</title>
      <link href="/2023/02/17/python-zhi-shi/python-zhong-staticmethod-classmethod-fang-fa/"/>
      <url>/2023/02/17/python-zhi-shi/python-zhong-staticmethod-classmethod-fang-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="python中的类方法和静态方法"><a class="markdownIt-Anchor" href="#python中的类方法和静态方法"></a> Python中的类方法和静态方法</h1><p>一般来说，要使用某个类的方法，需要先实例化一个对象再调用方法。而使用<code>@staticmethod</code>或<code>@classmethod</code>，就可以不需要实例化，直接<code>类名.方法名()</code>来调用。<br>Python面向对象编程中，类中定义的方法可以是<code>@classmethod</code>装饰的<strong>类方法</strong>，也可以是<code>@staticmethod</code>装饰的<strong>静态方法</strong>，用的最多的还是不带装饰器的<strong>实例方法。</strong><br>先来看一个简单示例：</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>(<span class="hljs-title class_ inherited__">object</span>):        <span class="hljs-keyword">def</span> <span class="hljs-title function_">m1</span>(<span class="hljs-params">self, n</span>):        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;self:&quot;</span>, self)<span class="hljs-meta">    @classmethod</span>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">m2</span>(<span class="hljs-params">cls, n</span>):        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;cls:&quot;</span>, cls)<span class="hljs-meta">    @staticmethod</span>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">m3</span>(<span class="hljs-params">n</span>):        <span class="hljs-keyword">pass</span>a = A()a.m1(<span class="hljs-number">1</span>) <span class="hljs-comment"># self: &lt;__main__.A object at 0x000001E596E41A90&gt;</span>A.m2(<span class="hljs-number">1</span>) <span class="hljs-comment"># cls: &lt;class &#x27;__main__.A&#x27;&gt;</span>A.m3(<span class="hljs-number">1</span>)</code></pre><p>在类中一共定义了3个方法，m1 是<strong>实例方法</strong>，第一个参数必须是<code>self</code>（约定俗成的）。m2 是<strong>类方法</strong>，第一个参数必须是<code>cls</code>（同样是约定俗成），m3 是<strong>静态方法</strong>，参数根据业务需求定，可有可无。<br>当程序运行时，大概发生了这么几件事（结合下面的图来看）：</p><ul><li>第一步：代码从第一行开始执行 class 命令，此时会创建一个类 A 对象（<mark>类也是对象</mark>，一切皆对象嘛）同时初始化类里面的属性和方法；记住，此刻实例对象还没创建出来。</li><li>第二、三步：接着执行 a=A()，系统自动调用类的构造器，构造出实例对象 a。</li><li>第四步：接着调用<code>a.m1(1)</code>，m1 是实例方法，<strong>内部会自动把</strong><mark>实例对象</mark>传递给 self 参数进行绑定**，也就是说， self 和 a 指向的都是同一个实例对象。</li><li>第五步：调用A.m2(1)时，<strong>python内部隐式地把</strong><mark>类对象</mark><strong>传递给 cls 参数</strong>，cls 和 A 都指向类对象。</li></ul><p><img src="/images/python_class.png" alt><br>严格意义上来说，左边的都是变量名，是对象的引用，右边才是真正的对像</p><h2 id="几个方法的介绍和区别"><a class="markdownIt-Anchor" href="#几个方法的介绍和区别"></a> 几个方法的介绍和区别</h2><h3 id="实例方法"><a class="markdownIt-Anchor" href="#实例方法"></a> 实例方法</h3><pre class="highlight"><code class="python"><span class="hljs-built_in">print</span>(A.m1)<span class="hljs-comment"># A.m1在py2中显示为&lt;unbound method A.m1&gt;</span>&lt;function A.m1 at <span class="hljs-number">0x000002BF7FF9A488</span>&gt;<span class="hljs-built_in">print</span>(a.m1)&lt;bound method A.m1 of &lt;__main__.A <span class="hljs-built_in">object</span> at <span class="hljs-number">0x000002BF7FFA2BE0</span>&gt;&gt;</code></pre><p><code>A.m1</code>是一个还没有绑定实例对象的方法，对于未绑定方法，调用<code>A.m1</code>时必须显示地传入一个实例对象进去，而<code>a.m1</code>是已经绑定了实例的方法，python隐式地把对象传递给了self参数，所以不再手动传递参数，这是调用实例方法的过程。</p><pre class="highlight"><code class="python">A.m1(a, <span class="hljs-number">1</span>)<span class="hljs-comment"># 等价于</span>a.m1(<span class="hljs-number">1</span>)</code></pre><p><strong>如果未绑定的方法</strong><code>**A.m1**</code><strong>不传实例对象给 self 时，就会报参数缺失错误</strong></p><h3 id="类方法"><a class="markdownIt-Anchor" href="#类方法"></a> 类方法</h3><p>m2是<strong>类方法</strong>，不管是<code>A.m2</code>还是<code>a.m2</code>，都是已经自动绑定了类对象A的方法，对于<code>a.m2</code>，因为python可以通过实例对象a找到它所属的类是A，找到A之后自动绑定到 cls。</p><pre class="highlight"><code class="python"><span class="hljs-built_in">print</span>(A.m2)&lt;bound method A.m2 of &lt;<span class="hljs-keyword">class</span> <span class="hljs-string">&#x27;__main__.A&#x27;</span>&gt;&gt;<span class="hljs-built_in">print</span>(a.m2)&lt;bound method A.m2 of &lt;<span class="hljs-keyword">class</span> <span class="hljs-string">&#x27;__main__.A&#x27;</span>&gt;&gt;A.m2(<span class="hljs-number">1</span>) <span class="hljs-comment"># 等价于</span>a.m2(<span class="hljs-number">1</span>)</code></pre><p>这使得我们可以在实例方法中通过使用<code>self.m2()</code>这种方式来调用类方法和静态方法。<br>类方法只能访问类变量，不能访问实例变量，也就是跟类有关，跟实例无关。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">m1</span>(<span class="hljs-params">self, n</span>):    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;self:&quot;</span>, self)    self.m2(n)</code></pre><h3 id="静态方法"><a class="markdownIt-Anchor" href="#静态方法"></a> 静态方法</h3><p>m3是类里面的一个<strong>静态方法</strong>，跟普通函数没什么区别，<strong>与类和实例都没有所谓的绑定关系</strong>，它只不过是碰巧存在类中的一个函数而已。<strong>不论是通过类还是实例都可以引用该方法</strong>。</p><pre class="highlight"><code class="python"><span class="hljs-built_in">print</span>(A.m3)&lt;function A.m3 at <span class="hljs-number">0x000002BF7FF9A840</span>&gt;<span class="hljs-built_in">print</span>(a.m3)&lt;function A.m3 at <span class="hljs-number">0x000002BF7FF9A840</span>&gt;A.m3(<span class="hljs-number">1</span>) <span class="hljs-comment"># 等价于</span>a.m3(<span class="hljs-number">1</span>)</code></pre><ul><li>可以看成是静态方法已经跟这个类没关系了，相当于已经脱离了这个类，是一个完全独立的函数，只是调用的时候必须通过这个类，或者为了规范代码而将函数放到类中</li><li>当类中的该方法不涉及对该类属性的操作，建议声明为@staticmethod，面向对象思想体现</li></ul><h2 id="应用场景"><a class="markdownIt-Anchor" href="#应用场景"></a> 应用场景</h2><p>静态方法的使用场景： 如果在方法中不需要访问任何实例方法和属性，纯粹地通过传入参数并返回数据的功能性方法，那么它就适合用静态方法来定义，它节省了实例化对象的开销成本，往往这种方法放在类外面的模块层作为一个函数存在也是没问题的，而放在类中，仅为这个类服务。例如下面是微信公众号开发中验证微信签名的一个例子，它没有引用任何类或者实例相关的属性和方法。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">from</span> hashlib <span class="hljs-keyword">import</span> sha1<span class="hljs-keyword">import</span> tornado.web<span class="hljs-keyword">class</span> <span class="hljs-title class_">SignatureHandler</span>(tornado.web.RequestHandler):    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get</span>(<span class="hljs-params">self</span>):        <span class="hljs-string">&quot;&quot;&quot;         根据签名判断请求是否来自微信        &quot;&quot;&quot;</span>        signature = self.get_query_argument(<span class="hljs-string">&quot;signature&quot;</span>, <span class="hljs-literal">None</span>)        echostr = self.get_query_argument(<span class="hljs-string">&quot;echostr&quot;</span>, <span class="hljs-literal">None</span>)        timestamp = self.get_query_argument(<span class="hljs-string">&quot;timestamp&quot;</span>, <span class="hljs-literal">None</span>)        nonce = self.get_query_argument(<span class="hljs-string">&quot;nonce&quot;</span>, <span class="hljs-literal">None</span>)        <span class="hljs-keyword">if</span> self._check_sign(TOKEN, timestamp, nonce, signature):            logger.info(<span class="hljs-string">&quot;微信签名校验成功&quot;</span>)            self.write(echostr)        <span class="hljs-keyword">else</span>:            self.write(<span class="hljs-string">&quot;你不是微信发过来的请求&quot;</span>)<span class="hljs-meta">    @staticmethod</span>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">_check_sign</span>(<span class="hljs-params">token, timestamp, nonce, signature</span>):        sign = [token, timestamp, nonce]        sign.sort()        sign = <span class="hljs-string">&quot;&quot;</span>.join(sign)        sign = sha1(sign).hexdigest()        <span class="hljs-keyword">return</span> sign == signature</code></pre><p>类方法的使用场景有：作为工厂方法创建实例对象，例如内置模块 datetime.date 类中就有大量使用类方法作为工厂方法，以此来创建date对象。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">date</span>:    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__new__</span>(<span class="hljs-params">cls, year, month=<span class="hljs-literal">None</span>, day=<span class="hljs-literal">None</span></span>):        self = <span class="hljs-built_in">object</span>.__new__(cls)        self._year = year        self._month = month        self._day = day        <span class="hljs-keyword">return</span> self<span class="hljs-meta">    @classmethod</span>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">fromtimestamp</span>(<span class="hljs-params">cls, t</span>):        y, m, d, hh, mm, ss, weekday, jday, dst = _time.localtime(t)        <span class="hljs-keyword">return</span> cls(y, m, d)<span class="hljs-meta">    @classmethod</span>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">today</span>(<span class="hljs-params">cls</span>):        t = _time.time()        <span class="hljs-keyword">return</span> cls.fromtimestamp(t)</code></pre><p>如果希望在方法裡面调用静态类，那么把方法定义成类方法是合适的，因为要是定义成静态方法，那么你就要显示地引用类A，这对继承来说可不是一件好事情。<br>如果在@staticmethod中要调用到这个类的一些属性方法，只能直接<code>类名.属性名</code>或<code>类名.方法名</code>。而@classmethod因为持有cls参数，可以来调用类的属性，类的方法，实例化对象等，避免硬编码。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">A</span>:<span class="hljs-meta">    @staticmethod</span>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">m1</span>()        <span class="hljs-keyword">pass</span><span class="hljs-meta">    @staticmethod</span>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">m2</span>():        A.m1() <span class="hljs-comment"># bad</span><span class="hljs-meta">    @classmethod</span>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">m3</span>(<span class="hljs-params">cls</span>):        cls.m1() <span class="hljs-comment"># good</span></code></pre><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p>在上述的例子中，有的返回的是 function 类型，有的返回的是 method 类型，function类型是函数，method类型是方法。他们的主要区别在于，函数的传参都是显式传递的；而方法传参往往都会有隐式传递的，具体根据于调用方。隐式传递 self 或者cls数据。</p><ul><li><strong>@staticmethod 的效果是让类对象与实例对象的调用都返回函数。</strong></li><li><strong>@staticmethod不需要表示自身对象的self和自身类的cls参数，就跟使用函数一样。</strong></li><li><strong>@classmethod 则是要让类对象与实例对象的调用都返回方法，并且传递隐式参数 cls</strong></li><li><strong>@classmethod的第一个参数需要是表示自身类的cls参数。</strong></li></ul><p>classmethod主要用途是作为构造函数：</p><ul><li>Python只有一个构造函数__new__，如果想要多种构造函数就很不方便。只能在new里面写一堆if isinstance 。有classmethod之后就可以用classmethod来写不同的构造函数。</li></ul><p>staticmethod主要用途是限定Namespace：</p><ul><li>也就是说这个函数虽然是个普通的function，但是它只有这个class会用到，不适合作为module level的function，这时候就把它作为staticmethod。如果不考虑namespace的问题的话直接在module里面def function就行了。</li></ul><p>staticmethod 和 classmethod 都运用了描述符的机制，学习描述符不仅能提供接触到更多工具集的方法，还能更深地理解 Python 工作的原理并更加体会到其设计的优雅性。</p>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础知识 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python的装饰器</title>
      <link href="/2023/02/17/python-zhi-shi/python-zhuang-shi-qi/"/>
      <url>/2023/02/17/python-zhi-shi/python-zhuang-shi-qi/</url>
      
        <content type="html"><![CDATA[<h1 id="python的装饰器"><a class="markdownIt-Anchor" href="#python的装饰器"></a> Python的装饰器</h1><p>装饰器是Python语法糖，装饰器是可调用的对象，可以像常规的可调用对象那样调用，特殊的地方是装饰器的参数是一个函数。<br>装饰器的使用场景：</p><ol><li>增强被装饰函数的行为</li><li>提高代码复用</li></ol><p>一个良好的装饰器必须要遵守<strong>两个原则</strong>：</p><ul><li>不能修改被装饰函数的代码</li><li>不能修改被装饰函数的调用方式</li></ul><h2 id="装饰器理解基础"><a class="markdownIt-Anchor" href="#装饰器理解基础"></a> 装饰器理解基础</h2><p>如果想要很好的理解装饰器，那下面的两个内容需要先有所认知。</p><ul><li>函数名可以赋值给变量</li><li>高阶函数</li></ul><h3 id="函数名可以赋值给变量"><a class="markdownIt-Anchor" href="#函数名可以赋值给变量"></a> 函数名可以赋值给变量</h3><p>看下这个例子：</p><pre class="highlight"><code class="python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">func</span>(<span class="hljs-params">name</span>):    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;我是{}！慌的一逼！&#x27;</span>.<span class="hljs-built_in">format</span>(name))    func(<span class="hljs-string">&#x27;梅西&#x27;</span>)y = funcy(<span class="hljs-string">&#x27;勒夫&#x27;</span>)<span class="hljs-meta">&gt;&gt;&gt; </span>Output:<span class="hljs-comment"># 我是梅西！慌的一逼！</span><span class="hljs-comment"># 我是勒夫！慌的一逼！</span></code></pre><p>代码中我们首先定义了函数<code>func</code>，并调用了<code>func</code>函数，并且把<code>func</code>赋值给y。<code>y = func</code>表明了：<strong>函数名可以赋值给变量，并且不影响调用</strong>。</p><h3 id="高阶函数"><a class="markdownIt-Anchor" href="#高阶函数"></a> 高阶函数</h3><p>高阶函数满足如下两个条件中的任意一个：</p><ol><li>可以接收函数名作为实参；</li><li>返回值中可以包含函数名。</li></ol><p>在 Python 标准库中的 map 和 filter 等函数就是高阶函数—函数名作为参数。</p><pre class="highlight"><code class="python">l = [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">4</span>]r = <span class="hljs-built_in">map</span>(<span class="hljs-keyword">lambda</span> x: x*<span class="hljs-number">3</span>, l)<span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> r:    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;当前天台人数：&#x27;</span>, i)<span class="hljs-meta">&gt;&gt;&gt; </span>Output:<span class="hljs-comment"># 当前天台人数： 3</span><span class="hljs-comment"># 当前天台人数： 6</span><span class="hljs-comment"># 当前天台人数： 12</span></code></pre><p>自定义一个能返回函数的函数，也是高阶函数：</p><pre class="highlight"><code class="python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">f</span>(<span class="hljs-params">l</span>):    <span class="hljs-keyword">return</span> <span class="hljs-built_in">map</span>(<span class="hljs-keyword">lambda</span> x: x*<span class="hljs-number">5</span>, l)a = f(l)<span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> a:    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;当前天台人数：&#x27;</span>, i)</code></pre><h2 id="实现一个类似的装饰器"><a class="markdownIt-Anchor" href="#实现一个类似的装饰器"></a> 实现一个类似的装饰器</h2><p>现在已经知道了<strong>函数名赋值</strong>和<strong>高阶函数</strong>，有了这两个基础，就可以尝试实现一个类似的装饰器。</p><pre class="highlight"><code class="python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">status</span>(<span class="hljs-params">func</span>):    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;慌的一逼！&#x27;</span>)    <span class="hljs-keyword">return</span> func    <span class="hljs-keyword">def</span> <span class="hljs-title function_">name</span>():    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;我是梅西！&#x27;</span>)    temp = status(name)temp()<span class="hljs-meta">&gt;&gt;&gt; </span>Output:<span class="hljs-comment"># 慌的一逼！</span><span class="hljs-comment"># 我是梅西！</span></code></pre><p>在这个例子中我们定义了一个 status 函数，status 接收一个函数名然后直接返回该函数名。这样我们实现了不修改原函数 name，并且添加了一个新功能的需求。但是这里有个<strong>缺陷就是函数的调用方式改变了</strong>。即不是原本的 name，而是 temp。<br>要解决这个问题很简单，相信 a = a*3 这样的表达式大家都见过，那么上述代码中的 temp = status(name) 同样可以修改为 name = status(name)，这样我们就完美的解决了问题：<strong>既添加新功能又没有修改原函数和其调用方式</strong>。修改后的代码如下：</p><pre class="highlight"><code class="python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">status</span>(<span class="hljs-params">func</span>):    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;慌的一逼！&#x27;</span>)    <span class="hljs-keyword">return</span> func    <span class="hljs-keyword">def</span> <span class="hljs-title function_">name</span>():    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;我是梅西！&#x27;</span>)    name = status(name)name()</code></pre><p>但这样的代码却有个不便之处，即每次使用这样的装饰器，我们都要写类似 name = status(name) 的代码。在 python 中为了简化这种情况，提供了一个语法糖 @，<strong>在每个被装饰的函数上方使用这个语法糖</strong>就可以省掉这一句代码 name = status(name)，最后的代码如下：</p><pre class="highlight"><code class="python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">status</span>(<span class="hljs-params">func</span>):    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;慌的一逼！&#x27;</span>)    <span class="hljs-keyword">return</span> func    <span class="hljs-meta">@status</span><span class="hljs-keyword">def</span> <span class="hljs-title function_">name</span>():    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;我是梅西！&#x27;</span>)    name()</code></pre><p>这样我们就弄清楚了装饰器的工作原理：</p><ul><li><strong>写一个高阶函数</strong>，即参数是函数，返回的也是函数。</li><li>在<strong>利用语法糖@，简化赋值操作</strong>。</li></ul><h2 id="装饰器进阶"><a class="markdownIt-Anchor" href="#装饰器进阶"></a> 装饰器进阶</h2><p>能够处理返回值的装饰器：</p><pre class="highlight"><code class="python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">guess_win</span>(<span class="hljs-params">func</span>):    <span class="hljs-keyword">def</span> <span class="hljs-title function_">rooftop_status</span>():        result = func()        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;天台已满，请排队！&#x27;</span>)        <span class="hljs-keyword">return</span> result    <span class="hljs-keyword">return</span> rooftop_status<span class="hljs-meta">@guess_win</span><span class="hljs-keyword">def</span> <span class="hljs-title function_">german_team</span>():    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;德国必胜！&#x27;</span>)    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;赢了会所嫩模！输了下海干活！&#x27;</span>x = german_team()<span class="hljs-built_in">print</span>(x)<span class="hljs-meta">&gt;&gt;&gt; </span>Output:<span class="hljs-comment"># 德国必胜！</span><span class="hljs-comment"># 天台已满，请排队！</span><span class="hljs-comment"># 赢了会所嫩模！输了下海干活！</span></code></pre><p>能够处理参数的装饰器：</p><pre class="highlight"><code class="python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">guess_win</span>(<span class="hljs-params">func</span>):    <span class="hljs-keyword">def</span> <span class="hljs-title function_">rooftop_status</span>(<span class="hljs-params">*args, **kwargs</span>):        result = func(*args, **kwargs)        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;天台已满，请排队！&#x27;</span>)        <span class="hljs-keyword">return</span> result    <span class="hljs-keyword">return</span> rooftop_status<span class="hljs-meta">@guess_win</span><span class="hljs-keyword">def</span> <span class="hljs-title function_">german_team</span>(<span class="hljs-params">arg</span>):    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;{}必胜！&#x27;</span>.<span class="hljs-built_in">format</span>(arg))    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;赢了会所嫩模！输了下海干活！&#x27;</span>x = german_team(<span class="hljs-string">&#x27;德国&#x27;</span>)y = german_team(<span class="hljs-string">&#x27;西班牙&#x27;</span>)<span class="hljs-built_in">print</span>(x)<span class="hljs-meta">&gt;&gt;&gt; </span>Output:<span class="hljs-comment"># 德国必胜！</span><span class="hljs-comment"># 天台已满，请排队！</span><span class="hljs-comment"># 西班牙必胜！</span><span class="hljs-comment"># 天台已满，请排队！</span><span class="hljs-comment"># 赢了会所嫩模！输了下海干活！</span></code></pre><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p>装饰器的<strong>本质是函数</strong>，<strong>其参数是另一个函数（被装饰的函数）</strong>。装饰器通常会额外处理被装饰的函数，然后把它返回，或者将其替换成另一个函数或可调用对象。行为良好的装饰器可以重用，以减少代码量。<br>代码运行的理解通式：</p><pre class="highlight"><code class="python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">xxx</span>(<span class="hljs-params">func</span>):    <span class="hljs-keyword">return</span> func<span class="hljs-meta">@xxx</span><span class="hljs-keyword">def</span> <span class="hljs-title function_">yyy</span>():    <span class="hljs-keyword">pass</span>yyy()等价于下面的方式yyy = xxx(yyy)yyy()</code></pre>]]></content>
      
      
      <categories>
          
          <category> 编程语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础知识 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>深度学习的优化算法</title>
      <link href="/2023/02/15/suan-fa/shen-du-xue-xi-you-hua-suan-fa/"/>
      <url>/2023/02/15/suan-fa/shen-du-xue-xi-you-hua-suan-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="深度学习的优化算法"><a class="markdownIt-Anchor" href="#深度学习的优化算法"></a> 深度学习的优化算法</h1><p>炼丹师的日常：拿来药材（数据），架起八卦炉（模型），点着六味真火（优化算法），就摇着蒲扇等着丹药出炉了。不过，同样的食材，同样的菜谱，但火候不一样了，这出来的口味可是千差万别。火小了夹生，火大了易糊，火不匀则半生半糊。</p><h2 id="简单回顾优化算法的发展"><a class="markdownIt-Anchor" href="#简单回顾优化算法的发展"></a> 简单回顾优化算法的发展</h2><p>深度学习优化算法经历了 SGD -&gt; SGDM -&gt; NAG -&gt;AdaGrad -&gt; AdaDelta -&gt; Adam -&gt; Nadam 这样的发展历程。<br>首先定义待优化参数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span>，目标函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(w)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span>，初始学习率<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span>。<br>开始进行迭代优化，在每个 epoch <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathnormal">t</span></span></span></span> 中：</p><ol><li>计算目标函数关于当前参数的梯度：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>g</mi><mi>t</mi></msub><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>f</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><mi>w</mi></mrow></mfrac></mrow><annotation encoding="application/x-tex">g_t=\frac{\partial f(w)}{\partial w}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li><li>根据历史梯度计算一阶动量和二阶动量：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>m</mi><mi>t</mi></msub><mo>=</mo><mi>ϕ</mi><mo stretchy="false">(</mo><msub><mi>g</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>g</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>g</mi><mn>3</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>g</mi><mi>t</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">m_t=\phi(g_1, g_2, g_3, ... , g_t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mi>t</mi></msub><mo>=</mo><mi>ψ</mi><mo stretchy="false">(</mo><msub><mi>g</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>g</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>g</mi><mn>3</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>g</mi><mi>t</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">V_t=\psi(g_1, g_2, g_3, ... , g_t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">ψ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li><li>计算当前时刻的下降梯度：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>η</mi><mi>t</mi></msub><mo>=</mo><mi>α</mi><mo>×</mo><msub><mi>m</mi><mi>t</mi></msub><mi mathvariant="normal">/</mi><mroot><msub><mi>V</mi><mi>t</mi></msub><mn>2</mn></mroot></mrow><annotation encoding="application/x-tex">\eta_t=\alpha \times m_t / \sqrt[2]{V_t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1016650000000001em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord sqrt"><span class="root"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.720218em;"><span style="top:-2.897998em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size6 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.851665em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.811665em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.18833500000000003em;"><span></span></span></span></span></span></span></span></span></li><li>根据下降梯度进行更新：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mrow><mi>t</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><msub><mi>w</mi><mi>t</mi></msub><mo>−</mo><msub><mi>η</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">w_{t+1}=w_t- \eta_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.638891em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></li></ol><p>上面4个步骤就是优化算法的通式。</p><h3 id="sgd算法"><a class="markdownIt-Anchor" href="#sgd算法"></a> SGD算法</h3><p>SGD没有动量的概念，因此：<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>m</mi><mi>t</mi></msub><mo>=</mo><msub><mi>g</mi><mi>t</mi></msub><mo separator="true">;</mo><msub><mi>V</mi><mi>t</mi></msub><mo>=</mo><msup><mi>I</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">m_t=g_t; V_t=I^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">;</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><br>代入步骤3中，可以看到下降梯度就是最简单的<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>η</mi><mi>t</mi></msub><mo>=</mo><mi>α</mi><mo>⋅</mo><msub><mi>g</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\eta_t=\alpha \cdot g_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br>SGD最大的缺点是下降速度慢，而且可能会在沟壑的两边持续震荡，停留在一个局部最优点。</p><h3 id="sgdm算法"><a class="markdownIt-Anchor" href="#sgdm算法"></a> SGDM算法</h3><p>SGDM全称是SGD with Momentum，在SGD基础上引入了一阶动量。为了抑制SGD的震荡，SGDM认为梯度下降过程可以加入惯性。下坡的时候，如果发现是陡坡，那就利用惯性跑的快一些。引入的一阶动量为：<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>m</mi><mi>t</mi></msub><mo>=</mo><msub><mi>β</mi><mn>1</mn></msub><mo>⋅</mo><msub><mi>m</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>β</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>⋅</mo><msub><mi>g</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">m_t=\beta_1 \cdot m_{t-1} + (1 - \beta_1) \cdot g_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.791661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br>一阶动量是各个时刻梯度方向的指数移动平均值，也即梯度的动量更新。约等于最近<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>β</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">1 / (1-\beta_1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord">/</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>个时刻的梯度向量和的平均值。<br>也就是说，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathnormal">t</span></span></span></span>时刻的下降方向，不仅由当前点的梯度方向决定，而且由此前累积的下降方向决定。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>β</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">\beta_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的经验值为0.9，这就意味着下降方向主要是此前累积的下降方向，并略微偏向当前时刻的下降方向。想象高速公路上汽车转弯，在高速向前的同时略微偏向，急转弯可是要出事的。</p><h3 id="nga算法"><a class="markdownIt-Anchor" href="#nga算法"></a> NGA算法</h3><p>SGD 还有一个问题是困在局部最优的沟壑里面震荡。想象一下你走到一个盆地，四周都是略高的小山，你觉得没有下坡的方向，那就只能待在这里了。可是如果你爬上高地，就会发现外面的世界还很广阔。因此，我们不能停留在当前位置去观察未来的方向，而要向前一步、多看一步、看远一些。<br>NAG全称Nesterov Accelerated Gradient，是在SGD、SGDM的基础上的进一步改进，改进点在于步骤1。我们知道在时刻<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathnormal">t</span></span></span></span>的主要下降方向是由累积动量决定的，自己的梯度方向说了也不算，那与其看当前梯度方向，不如先看看如果跟着累积动量走了一步，那个时候再怎么走。因此，NAG在步骤1，<strong>不计算当前位置的梯度方向，而是计算如果按照累积动量走了一步，那个时候的下降方向</strong>：<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>g</mi><mi>t</mi></msub><mo>=</mo><mi mathvariant="normal">∇</mi><mi>f</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mi>t</mi></msub><mo>−</mo><mi>α</mi><mo>⋅</mo><msub><mi>m</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mi mathvariant="normal">/</mi><msqrt><msub><mi>V</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></msqrt><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g_t=\nabla f(w_t - \alpha \cdot m_{t-1} / \sqrt{V_{t-1}})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∇</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0724995000000002em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8224995em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7824995em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.21750049999999999em;"><span></span></span></span></span></span><span class="mclose">)</span></span></span></span><br>然后用下一个点的梯度方向，与历史累积动量相结合，计算步骤2中当前时刻的累积动量。</p><h3 id="adagrad算法"><a class="markdownIt-Anchor" href="#adagrad算法"></a> AdaGrad算法</h3><p>二阶动量的出现，才意味着自适应学习优化算法时代的到来。<br>SGD及其变种以同样的学习率更新每个参数，但深度神经网络往往包含大量的参数，这些参数并不是总会用得到（想想大规模的embedding）。<strong>对于经常更新的参数，我们已经积累了大量关于它的知识，不希望被单个样本影响太大，希望学习速率慢一些；对于偶尔更新的参数，我们了解的信息太少，希望能从每个偶然出现的样本身上多学一些，即学习速率大一些</strong>。<br>怎么样去度量历史更新频率呢？那就是二阶动量——该维度上，迄今为止所有梯度值的平方和：<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mi>t</mi></msub><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>τ</mi><mo>=</mo><mn>1</mn></mrow><mi>t</mi></msubsup><msubsup><mi>g</mi><mi>τ</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">V_t=\sum_{\tau =1}^{t} g_{\tau}^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.233166em;vertical-align:-0.29971000000000003em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.933456em;"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.1132em;">τ</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.1132em;">τ</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span><br>步骤3中下降的梯度为：<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>η</mi><mi>t</mi></msub><mo>=</mo><mi>α</mi><mo>×</mo><msub><mi>m</mi><mi>t</mi></msub><mi mathvariant="normal">/</mi><msqrt><msub><mi>V</mi><mi>t</mi></msub></msqrt></mrow><annotation encoding="application/x-tex">\eta_t=\alpha \times m_t / \sqrt{V_t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1016650000000001em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.851665em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.811665em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.18833500000000003em;"><span></span></span></span></span></span></span></span></span><br>可以看出，此时实质上的学习率由<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span>变成了<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mi mathvariant="normal">/</mi><msqrt><msub><mi>V</mi><mi>t</mi></msub></msqrt></mrow><annotation encoding="application/x-tex">\alpha / \sqrt{V_t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1016650000000001em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord">/</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.851665em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.811665em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.18833500000000003em;"><span></span></span></span></span></span></span></span></span>。一般为了避免分母为0，会在分母上加一个小的平滑项。因此<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msqrt><msub><mi>V</mi><mi>t</mi></msub></msqrt></mrow><annotation encoding="application/x-tex">\sqrt{V_t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.18833500000000003em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.851665em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.811665em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.18833500000000003em;"><span></span></span></span></span></span></span></span></span>是恒大于0的，而且参数更新越频繁，二阶动量越大，学习率就越小。<br>这一方法在稀疏数据场景下表现非常好。但也存在一些问题：因为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msqrt><msub><mi>V</mi><mi>t</mi></msub></msqrt></mrow><annotation encoding="application/x-tex">\sqrt{V_t}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.18833500000000003em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.851665em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.811665em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.18833500000000003em;"><span></span></span></span></span></span></span></span></span>是单调递增的，会使得学习率单调递减至0，可能会使得训练过程提前结束，即便后续还有数据也无法学到必要的知识。</p><h3 id="adadeltarmsprop算法"><a class="markdownIt-Anchor" href="#adadeltarmsprop算法"></a> AdaDelta/RMSProp算法</h3><p>由于AdaGrad单调递减的学习率变化过于激进，我们考虑一个改变二阶动量计算方法的策略：不累积全部历史梯度，而只关注过去一段时间窗口的下降梯度。这也就是AdaDelta名称中Delta的来历。<br>修改的思路很简单。前面我们讲到，指数移动平均值大约就是过去一段时间的平均值，因此我们用这一方法来计算二阶累积动量：<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mi>t</mi></msub><mo>=</mo><msub><mi>β</mi><mn>2</mn></msub><mo>⋅</mo><msub><mi>V</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>β</mi><mn>2</mn></msub><mo stretchy="false">)</mo><msubsup><mi>g</mi><mi>t</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">V_t=\beta_2 \cdot V_{t-1} + (1- \beta_2)g_t^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span><br>这就避免了二阶动量持续累积、导致训练过程提前结束的问题了。</p><h3 id="adam算法"><a class="markdownIt-Anchor" href="#adam算法"></a> Adam算法</h3><p>Adam是前述方法的集大成者。我们看到，SGDM在SGD基础上增加了一阶动量，AdaGrad和AdaDelta在SGD基础上增加了二阶动量。把一阶动量和二阶动量都用起来，就是Adam了——Adaptive + Momentum。<br>SGD的一阶动量：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>m</mi><mi>t</mi></msub><mo>=</mo><msub><mi>β</mi><mn>1</mn></msub><mo>⋅</mo><msub><mi>m</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>β</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>⋅</mo><msub><mi>g</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">m_t=\beta_1 \cdot m_{t-1} + (1 - \beta_1) \cdot g_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.791661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>加上AdaDelta的二阶动量：<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mi>t</mi></msub><mo>=</mo><msub><mi>β</mi><mn>2</mn></msub><mo>⋅</mo><msub><mi>V</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>β</mi><mn>2</mn></msub><mo stretchy="false">)</mo><msubsup><mi>g</mi><mi>t</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">V_t=\beta_2 \cdot V_{t-1} + (1- \beta_2)g_t^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span><br>优化算法里最常见的两个超参数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>β</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">\beta_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>β</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">\beta_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>都在这里了，前者控制一阶动量，后者控制二阶动量。</p><h3 id="nadam算法"><a class="markdownIt-Anchor" href="#nadam算法"></a> Nadam算法</h3><p>我们说Adam是集大成者，但它居然遗漏了Nesterov，这还能忍？必须给它加上，按照NAG的步骤1：<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>g</mi><mi>t</mi></msub><mo>=</mo><mi mathvariant="normal">∇</mi><mi>f</mi><mo stretchy="false">(</mo><msub><mi>w</mi><mi>t</mi></msub><mo>−</mo><mi>α</mi><mo>⋅</mo><msub><mi>m</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mi mathvariant="normal">/</mi><msqrt><msub><mi>V</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub></msqrt><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">g_t=\nabla f(w_t - \alpha \cdot m_{t-1} / \sqrt{V_{t-1}})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∇</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0724995000000002em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8224995em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.7824995em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.21750049999999999em;"><span></span></span></span></span></span><span class="mclose">)</span></span></span></span><br>这就是Nesterov + Adam = Nadam了。</p><h2 id="指数移动平均值的偏差修正"><a class="markdownIt-Anchor" href="#指数移动平均值的偏差修正"></a> 指数移动平均值的偏差修正</h2><p>一阶动量和二阶动量都是按照指数移动平均值进行计算的：<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>m</mi><mi>t</mi></msub><mo>=</mo><msub><mi>β</mi><mn>1</mn></msub><mo>⋅</mo><msub><mi>m</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>β</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>⋅</mo><msub><mi>g</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">m_t=\beta_1 \cdot m_{t-1} + (1 - \beta_1) \cdot g_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.791661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mi>t</mi></msub><mo>=</mo><msub><mi>β</mi><mn>2</mn></msub><mo>⋅</mo><msub><mi>V</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>β</mi><mn>2</mn></msub><mo stretchy="false">)</mo><msubsup><mi>g</mi><mi>t</mi><mn>2</mn></msubsup></mrow><annotation encoding="application/x-tex">V_t=\beta_2 \cdot V_{t-1} + (1- \beta_2)g_t^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.891661em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span><br>参数的经验值是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>β</mi><mn>1</mn></msub><mo>=</mo><mn>0.9</mn></mrow><annotation encoding="application/x-tex">\beta_1=0.9</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">9</span></span></span></span>；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>β</mi><mn>2</mn></msub><mo>=</mo><mn>0.999</mn></mrow><annotation encoding="application/x-tex">\beta_2=0.999</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">9</span><span class="mord">9</span><span class="mord">9</span></span></span></span>。初始化：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>m</mi><mn>0</mn></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">m_0=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mn>0</mn></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">V_0=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>。<br>这个时候我们看到，在初期<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>m</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">m_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>V</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">V_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>都会接近于0，这个估计是有问题的。因此我们常常根据下式进行误差修正：<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><msub><mi>m</mi><mi>t</mi></msub><mo stretchy="true">~</mo></mover><mo>=</mo><msub><mi>m</mi><mi>t</mi></msub><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msubsup><mi>β</mi><mn>1</mn><mi>t</mi></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\widetilde{m_t}=m_t/(1-\beta_1^t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84056em;vertical-align:-0.15em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.43056em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width="100%" height="0.26em" viewbox="0 0 600 260" preserveaspectratio="none"><path d="M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.043556em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-2.4518920000000004em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><msub><mi>V</mi><mi>t</mi></msub><mo stretchy="true">~</mo></mover><mo>=</mo><msub><mi>V</mi><mi>t</mi></msub><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msubsup><mi>β</mi><mn>2</mn><mi>t</mi></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\widetilde{V_t}=V_t/(1-\beta_2^t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.09333em;vertical-align:-0.15em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.94333em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.6833299999999998em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width="100%" height="0.26em" viewbox="0 0 600 260" preserveaspectratio="none"><path d="M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.043556em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-2.4518920000000004em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><h2 id="adamsgd-组合策略"><a class="markdownIt-Anchor" href="#adamsgd-组合策略"></a> Adam+SGD 组合策略</h2><p>不同优化算法的优劣依然是未有定论的争议话题。主流的观点认为：Adam等自适应学习率算法对于稀疏数据具有优势，且收敛速度很快；但精调参数的SGD（+Momentum）往往能够取得更好的最终结果。<br>可不可以把这两者结合起来，<strong>先用Adam快速下降，再用SGD调优</strong>，一举两得？思路简单，但里面有两个技术问题：</p><ol><li><strong>什么时候切换优化算法？</strong>——如果切换太晚，Adam可能已经跑到自己的盆地里去了，SGD再怎么好也跑不出来了。</li><li><strong>切换算法以后用什么样的学习率？</strong>——Adam用的是自适应学习率，依赖的是二阶动量的累积，SGD接着训练的话，用什么样的学习率？</li></ol><h3 id="切换之后用什么样的学习率"><a class="markdownIt-Anchor" href="#切换之后用什么样的学习率"></a> <strong>切换之后用什么样的学习率</strong></h3><p>Adam的下降方向是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>η</mi><mi>t</mi><mrow><mi>A</mi><mi>d</mi><mi>a</mi><mi>m</mi></mrow></msubsup><mo>=</mo><mo stretchy="false">(</mo><mi>α</mi><mi mathvariant="normal">/</mi><msqrt><msub><mi>V</mi><mi>t</mi></msub></msqrt><mo stretchy="false">)</mo><mo>⋅</mo><msub><mi>m</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\eta_t^{Adam}=(\alpha / \sqrt{V_t}) \cdot m_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.096108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.1016650000000001em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord">/</span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.851665em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.22222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.811665em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.18833500000000003em;"><span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，SGD的下降方向是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>η</mi><mi>t</mi><mrow><mi>S</mi><mi>G</mi><mi>D</mi></mrow></msubsup><mo>=</mo><msup><mi>α</mi><mrow><mi>S</mi><mi>G</mi><mi>D</mi></mrow></msup><mo>⋅</mo><msub><mi>g</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">\eta_t^{SGD}=\alpha^{SGD} \cdot g_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.088331em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mathnormal mtight">G</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8413309999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mathnormal mtight">G</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>η</mi><mi>t</mi><mrow><mi>S</mi><mi>G</mi><mi>D</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">\eta_t^{SGD}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.088331em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mathnormal mtight">G</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>必定可以分解为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>η</mi><mi>t</mi><mrow><mi>A</mi><mi>d</mi><mi>a</mi><mi>m</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">\eta_t^{Adam}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.096108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>所在方向及其正交方向上的两个方向之和，那么其在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>η</mi><mi>t</mi><mrow><mi>A</mi><mi>d</mi><mi>a</mi><mi>m</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">\eta_t^{Adam}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.096108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>方向上的投影就意味着SGD在Adam算法决定的下降方向上前进的距离，而在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>η</mi><mi>t</mi><mrow><mi>A</mi><mi>d</mi><mi>a</mi><mi>m</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">\eta_t^{Adam}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.096108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>的正交方向上的投影是 SGD 在自己选择的修正方向上前进的距离。这里p为Adam下降方向，g为梯度方向，γ为SGD的学习率。<br><img src="/images/yuque_mind.jpeg" alt><br>如果SGD要走完Adam未走完的路，那就首先要接过Adam的大旗——沿着<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>η</mi><mi>t</mi><mrow><mi>A</mi><mi>d</mi><mi>a</mi><mi>m</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">\eta_t^{Adam}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.096108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>方向走一步，而后在沿着其正交方向走相应的一步。这样我们就知道该如何确定SGD的步长（学习率）了——<strong>SGD在Adam下降方向上的正交投影，应该正好等于Adam的下降方向（含步长）</strong>。也即：<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>r</mi><mi>o</mi><msub><mi>j</mi><msubsup><mi>η</mi><mi>t</mi><mrow><mi>S</mi><mi>G</mi><mi>D</mi></mrow></msubsup></msub><mo>=</mo><msubsup><mi>η</mi><mi>t</mi><mrow><mi>A</mi><mi>d</mi><mi>a</mi><mi>m</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">proj_{\eta_t^{SGD}}=\eta_t^{Adam}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1011250000000001em;vertical-align:-0.441605em;"></span><span class="mord mathnormal">p</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.4617750000000003em;margin-left:-0.05724em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8328928571428572em;"><span style="top:-2.209457142857143em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">t</span></span></span><span style="top:-2.8448em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mathnormal mtight">G</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29054285714285716em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.441605em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.096108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span><br>解这个方程，我们就可以得到接续进行SGD的学习率：<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>α</mi><mi>t</mi><mrow><mi>S</mi><mi>G</mi><mi>D</mi></mrow></msubsup><mo>=</mo><mo stretchy="false">(</mo><mo stretchy="false">(</mo><msubsup><mi>η</mi><mi>t</mi><mrow><mi>A</mi><mi>d</mi><mi>a</mi><mi>m</mi></mrow></msubsup><msup><mo stretchy="false">)</mo><mi>T</mi></msup><msubsup><mi>η</mi><mi>t</mi><mrow><mi>A</mi><mi>d</mi><mi>a</mi><mi>m</mi></mrow></msubsup><mo stretchy="false">)</mo><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mo stretchy="false">(</mo><msubsup><mi>η</mi><mi>t</mi><mrow><mi>A</mi><mi>d</mi><mi>a</mi><mi>m</mi></mrow></msubsup><msup><mo stretchy="false">)</mo><mi>T</mi></msup><msub><mi>g</mi><mi>t</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\alpha_t^{SGD}=((\eta_t^{Adam})^T \eta_t^{Adam}) / ((\eta_t^{Adam})^T g_t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.088331em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mathnormal mtight">G</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.099108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord">/</span><span class="mopen">(</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">a</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><br>为了减少噪声影响，作者使用移动平均值来修正对学习率的估计：<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>λ</mi><mi>t</mi><mrow><mi>S</mi><mi>G</mi><mi>D</mi></mrow></msubsup><mo>=</mo><msub><mi>β</mi><mn>2</mn></msub><mo>⋅</mo><msubsup><mi>λ</mi><mrow><mi>t</mi><mo>−</mo><mn>1</mn></mrow><mrow><mi>S</mi><mi>G</mi><mi>D</mi></mrow></msubsup><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>β</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>⋅</mo><msubsup><mi>α</mi><mi>t</mi><mrow><mi>S</mi><mi>G</mi><mi>D</mi></mrow></msubsup></mrow><annotation encoding="application/x-tex">\lambda_t^{SGD}=\beta_2 \cdot \lambda_{t-1}^{SGD}+(1-\beta_2) \cdot \alpha_t^{SGD}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.088331em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mathnormal mtight">G</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.1477699999999997em;vertical-align:-0.30643899999999996em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999998em;"><span style="top:-2.451892em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mathnormal mtight">G</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.30643899999999996em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.088331em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mathnormal mtight">G</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span><br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><msubsup><mi>λ</mi><mi>t</mi><mrow><mi>S</mi><mi>G</mi><mi>D</mi></mrow></msubsup><mo stretchy="true">~</mo></mover><mo>=</mo><msubsup><mi>λ</mi><mi>t</mi><mrow><mi>S</mi><mi>G</mi><mi>D</mi></mrow></msubsup><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msubsup><mi>β</mi><mn>2</mn><mi>t</mi></msubsup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\widetilde{\lambda_t^{SGD}}=\lambda_t^{SGD}/(1-\beta_2^t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3288869999999997em;vertical-align:-0.24575599999999992em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0831309999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8231309999999998em;"><span style="top:-2.454244em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span><span style="top:-3.0448em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mathnormal mtight">G</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24575599999999992em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.823131em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width="100%" height="0.26em" viewbox="0 0 600 260" preserveaspectratio="none"><path d="M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24575599999999992em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mathnormal mtight">G</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.043556em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7935559999999999em;"><span style="top:-2.4518920000000004em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><br>这里直接复用了Adam的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>β</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">\beta_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>参数。</p><h3 id="何时进行算法的切换"><a class="markdownIt-Anchor" href="#何时进行算法的切换"></a> <strong>何时进行算法的切换</strong></h3><p>当 SGD的相应学习率的移动平均值基本不变的时候，即：<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mover accent="true"><msubsup><mi>λ</mi><mi>t</mi><mrow><mi>S</mi><mi>G</mi><mi>D</mi></mrow></msubsup><mo stretchy="true">~</mo></mover><mo>−</mo><msubsup><mi>α</mi><mi>t</mi><mrow><mi>S</mi><mi>G</mi><mi>D</mi></mrow></msubsup><mi mathvariant="normal">∣</mi><mo>&lt;</mo><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">|\widetilde{\lambda_t^{SGD}}-\alpha_t^{SGD}|&lt; \epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3331309999999998em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0831309999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8231309999999998em;"><span style="top:-2.454244em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span><span style="top:-3.0448em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mathnormal mtight">G</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24575599999999992em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.823131em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width="100%" height="0.26em" viewbox="0 0 600 260" preserveaspectratio="none"><path d="M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24575599999999992em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.0913309999999998em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mathnormal mtight">G</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">ϵ</span></span></span></span><br>每次迭代完都计算一下SGD接班人的相应学习率，如果发现基本稳定了，那就SGD以<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><msubsup><mi>λ</mi><mi>t</mi><mrow><mi>S</mi><mi>G</mi><mi>D</mi></mrow></msubsup><mo stretchy="true">~</mo></mover></mrow><annotation encoding="application/x-tex">\widetilde{\lambda_t^{SGD}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3288869999999997em;vertical-align:-0.24575599999999992em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0831309999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8231309999999998em;"><span style="top:-2.454244em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span><span style="top:-3.0448em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mathnormal mtight">G</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24575599999999992em;"><span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-3.823131em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.26em;"><svg width="100%" height="0.26em" viewbox="0 0 600 260" preserveaspectratio="none"><path d="M200 55.538c-77 0-168 73.953-177 73.953-3 0-7-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128-68.267.847-113-73.952-191-73.952z"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24575599999999992em;"><span></span></span></span></span></span></span></span></span>为学习率接班前进。</p><h2 id="优化算法的常用tricks"><a class="markdownIt-Anchor" href="#优化算法的常用tricks"></a> 优化算法的常用tricks</h2><ol><li>首先，各大算法孰优孰劣并无定论。如果是刚入门，<strong>优先考虑 SGD+Nesterov Momentum或者Adam。</strong>（Standford 231n : <em>The two recommended updates to use are either SGD+Nesterov Momentum or Adam</em>）</li><li><strong>选择你熟悉的算法</strong>——这样你可以更加熟练地利用你的经验进行调参。</li><li><strong>充分了解你的数据</strong>——如果模型是非常稀疏的，那么优先考虑自适应学习率的算法。</li><li><strong>根据你的需求来选择</strong>——在模型设计实验过程中，要快速验证新模型的效果，可以先用Adam进行快速实验优化；在模型上线或者结果发布前，可以用精调的SGD进行模型的极致优化。</li><li><strong>先用小数据集进行实验。</strong> 有论文研究指出，随机梯度下降算法的收敛速度和数据集的大小的关系不大。（<em>The mathematics of stochastic gradient descent are amazingly independent of the training set size. In particular, the asymptotic SGD convergence rates are independent from the sample size</em>）因此可以先用一个具有代表性的小数据集进行实验，测试一下最好的优化算法，并通过参数搜索来寻找最优的训练参数。</li><li><strong>考虑不同算法的组合。</strong> 先用Adam进行快速下降，而后再换到SGD进行充分的调优。切换策略可以参考本文介绍的方法。</li><li><strong>数据集一定要充分的打散（shuffle）。</strong> 这样在使用自适应学习率算法的时候，可以避免某些特征集中出现，而导致的有时学习过度、有时学习不足，使得下降方向出现偏差的问题。</li><li>训练过程中<strong>持续监控训练数据和验证数据</strong>上的目标函数值以及精度或者AUC等指标的变化情况。对训练数据的监控是要保证模型进行了充分的训练——下降方向正确，且学习率足够高；对验证数据的监控是为了避免出现过拟合。</li><li><strong>制定一个合适的学习率衰减策略。</strong> 可以使用定期衰减策略，比如每过多少个epoch就衰减一次；或者利用精度或者AUC等性能指标来监控，当测试集上的指标不变或者下跌时，就降低学习率。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础知识 </tag>
            
            <tag> 数学 </tag>
            
            <tag> 优化算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo项目部署|PUSH到Github有各种问题</title>
      <link href="/2022/12/05/ji-lu-yi-ci-hexo-xiang-mu-bu-shu-de-debug-guo-cheng/"/>
      <url>/2022/12/05/ji-lu-yi-ci-hexo-xiang-mu-bu-shu-de-debug-guo-cheng/</url>
      
        <content type="html"><![CDATA[<blockquote><p>关注公众号【惜学塔】，每日知识干货马上就来！</p></blockquote><p><img src="/medias/contact.jpg" alt></p><h1 id="正常部署方式"><a class="markdownIt-Anchor" href="#正常部署方式"></a> 正常部署方式</h1><p>当github仓库、git、Hexo准备就绪，想把自己的内容推送到Github上时，通过GitHub网址 ，<a href="https://jlcxxzj.github.io/" target="_blank" rel="noopener">可见jlcxxzj</a>,就可以愉快的访问时，一切都是那么简单，只需要：</p><h2 id="一-建立本地项目和github的连接"><a class="markdownIt-Anchor" href="#一-建立本地项目和github的连接"></a> 一、建立本地项目和Github的连接</h2><ol><li>打开Hexo项目根目录，右键打开git bash，然后输入自己的github账号信息命令：<pre class="highlight"><code class="bash">git config --global user.name <span class="hljs-string">&quot;jlcxxzj&quot;</span>git config --global user.email <span class="hljs-string">&quot;2541597473@qq.com&quot;</span></code></pre></li><li>没有报错就说明用户信息是正确的，如果报错去Github设置看看自己的用户名和邮箱；接下来生成密钥SSH key，首先是确定要生成密钥的账户：<pre class="highlight"><code class="bash">ssh-keygen -t rsa -C <span class="hljs-string">&quot;2541597473@qq.com&quot;</span></code></pre>继续输入下面命令，会产生一个密钥，也可在本地的用户根目录下**.ssh**文件夹找到产生的密钥：<pre class="highlight"><code class="bash"><span class="hljs-built_in">cat</span> ~/.ssh/id_rsa.pub</code></pre></li><li>生成密钥成功以后，打开<a href="https://github.com/jlcxxzj">github</a>，在右上角头像下面点击<code>settings</code>，再点击<code>SSH and GPG keys</code>，新建一个SSH，名字任意，可按项目名称来，将第2步产生的密钥复制到框中，点击确定保存。</li><li>在第1步右键打开的git bash下输入<code>ssh -T git@github.com</code>，如果没有报错，出现你的用户名，那就成功了。</li></ol><h1 id="内网穿透"><a class="markdownIt-Anchor" href="#内网穿透"></a> 内网穿透</h1><p>由于本机属于内网，互联网是没有办法直接访问的，因此需要使用内网穿透来使得其他设备可以访问到<br><a href="https://cloud.tencent.com/developer/article/2126247" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/2126247</a><br>主机IP可通过CMD输入ipconfig或者ipconfig/all来查看<br>选择https方式</p><h2 id="二-将自己的hexo博客上传到github页面不用搭服务器或者内网穿透就能远程访问"><a class="markdownIt-Anchor" href="#二-将自己的hexo博客上传到github页面不用搭服务器或者内网穿透就能远程访问"></a> 二、将自己的Hexo博客上传到github页面，不用搭服务器或者内网穿透就能远程访问</h2><ol><li>首先修改一下Hexo博客更目录下的_config.yml配置文件(注意，不是主题下面的_config.yml),修改一下部署的配置信息，repository修改为自己的github项目地址：<pre class="highlight"><code class="bash">deploy:    <span class="hljs-built_in">type</span>: git    repository: https://github.com/jlcxxzj/jlcxxzj.github.io.git    branch: master</code></pre></li><li>正常情况下以下3步就可以部署到github页面访问1. <code>hexo clean</code>、<code>hexo g</code>、<code>hexo d</code></li><li>github访问地址 <a href="https://github.com/jlcxxzj/jlcxxzj.github.io.git%EF%BC%8C%E5%9C%A8%E5%85%B7%E4%BD%93%E7%9A%84%E9%A1%B9%E7%9B%AE%E8%AE%BE%E7%BD%AE%E4%B8%AD%EF%BC%8C%E5%8F%AF%E4%BB%A5%E6%A0%B9%E6%9C%AC%E6%9B%B4%E6%94%B9%E9%BB%98%E8%AE%A4%E5%88%86%E6%94%AF%EF%BC%8C%E8%AE%BF%E9%97%AE%E7%9A%84%E8%AF%9D%E4%B9%9F%E6%98%AF%E8%AE%BF%E9%97%AE%E9%BB%98%E8%AE%A4%E7%9A%84%E5%88%86%E6%94%AF">https://github.com/jlcxxzj/jlcxxzj.github.io.git，在具体的项目设置中，可以根本更改默认分支，访问的话也是访问默认的分支</a></li><li>也可以本地访问， <code>hexo clean</code>、<code>hexo g</code>、<code>hexo s</code>，默认4000端口可访问，<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a></li></ol><h1 id="各种意外情况"><a class="markdownIt-Anchor" href="#各种意外情况"></a> 各种意外情况</h1><h2 id="部署出现错误err-error-spawn-failed"><a class="markdownIt-Anchor" href="#部署出现错误err-error-spawn-failed"></a> 部署出现错误err: Error: Spawn failed</h2><pre class="highlight"><code class="bash"><span class="hljs-comment">##进入站点根目录</span><span class="hljs-built_in">cd</span> /usr/local/src/hexo/hanyubolg/<span class="hljs-comment">##删除git提交内容文件夹</span><span class="hljs-built_in">rm</span> -rf .deploy_git/<span class="hljs-comment">##执行</span>git config --global core.autocrlf <span class="hljs-literal">false</span><span class="hljs-comment">##最后</span>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code></pre><h2 id="git出错error-rpc-failed-curl-56-openssl-ssl_read-connection-was-reset-errno-10054"><a class="markdownIt-Anchor" href="#git出错error-rpc-failed-curl-56-openssl-ssl_read-connection-was-reset-errno-10054"></a> Git出错：error: RPC failed; curl 56 OpenSSL SSL_read: Connection was reset, errno 10054</h2><p>出现这种原因的可能有好几种</p><h3 id="fatal-the-remote-end-hung-up-unexpectedly"><a class="markdownIt-Anchor" href="#fatal-the-remote-end-hung-up-unexpectedly"></a> fatal: The remote end hung up unexpectedly</h3><p><img src="https://upload-images.jianshu.io/upload_images/20074990-37e315ab227b135e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/566/format/webp" alt></p><ol><li>整体文件太大，修改文件大小的上限：<br><code>git config --global http.postBuffer 524288000</code><br>也可在项目中的.git文件夹，直接修改；通过下面命令查看是否修改成功：<br><code>git config --list</code></li><li>单个文件<strong>超过100M</strong>是不能上传的，部署的时候需要注意</li></ol><h3 id="error-failed-to-push-some-refs-to-git"><a class="markdownIt-Anchor" href="#error-failed-to-push-some-refs-to-git"></a> error: failed to push some refs to *.git</h3><p>之前这种操作属于常规操作，没想到这次出了问题，感觉问题应该出在了工程创建方式上。我在 git 后台创建工程时勾选了自动添加 <a href="http://README.md" target="_blank" rel="noopener">README.md</a> 文件，可能导致了后续一系列问题。</p><h2 id="部署的时候一直卡着不动的原因"><a class="markdownIt-Anchor" href="#部署的时候一直卡着不动的原因"></a> 部署的时候一直卡着不动的原因</h2><p><a href="https://blog.csdn.net/qq_25333681/article/details/80879500" target="_blank" rel="noopener">https://blog.csdn.net/qq_25333681/article/details/80879500</a></p><h2 id="需要修改展示的branch分支页面时"><a class="markdownIt-Anchor" href="#需要修改展示的branch分支页面时"></a> 需要修改展示的branch分支页面时</h2><p>点击settings，在Pages的 <strong>Build and deployment</strong>修改<strong>Branch</strong>，需要等一会重新输入<a href="https://jlcxxzj.github.io/" target="_blank" rel="noopener">项目地址</a>，就能访问分支下的页面了。<br><img src="%E8%AE%B0%E5%BD%95%E4%B8%80%E6%AC%A1hexo%E9%A1%B9%E7%9B%AE%E9%83%A8%E7%BD%B2%E7%9A%84Debug%E8%BF%87%E7%A8%8B_md_files/00d68c60-745b-11ed-aa4d-fdeb71e777c3.jpeg?v=1&amp;type=image" alt></p><h2 id="debug链接"><a class="markdownIt-Anchor" href="#debug链接"></a> Debug链接</h2><p><a href="https://blog.csdn.net/u013250071/article/details/81203900" target="_blank" rel="noopener">修改.git文件夹</a></p>]]></content>
      
      
      <categories>
          
          <category> 计算机基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github项目部署 </tag>
            
            <tag> hexo博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
